<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.1 r1853635">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="environment" elementType="Argument">
            <stringProp name="Argument.name">environment</stringProp>
            <stringProp name="Argument.value">qa-kong.command-api.kw.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="QA-API-KEY" elementType="Argument">
            <stringProp name="Argument.name">QA-API-KEY</stringProp>
            <stringProp name="Argument.value">9HHfUdgIygeweSviN4qbDd8ksrAENVFZ</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="PROD-API-KEY" elementType="Argument">
            <stringProp name="Argument.name">PROD-API-KEY</stringProp>
            <stringProp name="Argument.value">1106cf10402a4b51b3e64710dfab5113</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Login Thread" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
 &quot;username&quot;: &quot;kelle1&quot;,&#xd;
 &quot;password&quot;: &quot;Password1&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/login</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON/YAML Path Extractor" enabled="true">
            <stringProp name="VAR">v_access_token</stringProp>
            <stringProp name="JSONPATH">$.access_token</stringProp>
            <stringProp name="DEFAULT">ERROR</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">${__setProperty(v_access_token, ${v_access_token})};</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
        </hashTree>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Contacts Module Group v2" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">Bearer ${__property(v_access_token)}</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept</stringProp>
              <stringProp name="Header.value">application/vnd.api+json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">cache-control</stringProp>
              <stringProp name="Header.value">no-cache</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">X-Api-Override-Phone</stringProp>
              <stringProp name="Header.value">1</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">x-Api-Override-Email</stringProp>
              <stringProp name="Header.value">1</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">X-Partial-Record-Validation</stringProp>
              <stringProp name="Header.value">1</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP All Contacts Request" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP All Contacts w/filter Request" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts?include=interactions&amp;sort=-interactions.interaction_at&amp;filter[interactions.interaction_type][in]=9,10</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Create Contact Family" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;attributes&quot;: {&#xd;
      &quot;prefix&quot;: &quot;Mr&quot;,&#xd;
      &quot;first_name&quot;: &quot;Telly&quot;,&#xd;
      &quot;middle_name&quot;: &quot;Senior&quot;,&#xd;
      &quot;last_name&quot;: &quot;Beier&quot;,&#xd;
      &quot;preferred_name&quot;: &quot;Telly Beier&quot;,&#xd;
      &quot;legal_name&quot;: &quot;Telly Senior Beier&quot;,&#xd;
      &quot;suffix&quot;: &quot;I&quot;,&#xd;
      &quot;date_of_birth&quot;: &quot;2019-05-25&quot;,&#xd;
      &quot;timeframe&quot;: &quot;1 to 12 months&quot;,&#xd;
      &quot;contact_types&quot;: [&#xd;
        &quot;buyer&quot;,&#xd;
        &quot;seller&quot;,&#xd;
        &quot;vendor&quot;,&#xd;
        &quot;investor&quot;,&#xd;
        &quot;agent&quot;,&#xd;
        &quot;lender&quot;,&#xd;
        &quot;past clients&quot;&#xd;
      ],&#xd;
      &quot;motivations&quot;: [&#xd;
        &quot;moving-up&quot;,&#xd;
        &quot;downsizing&quot;,&#xd;
        &quot;vacation-home&quot;,&#xd;
        &quot;first-home&quot;,&#xd;
        &quot;schools&quot;,&#xd;
        &quot;relocation&quot;,&#xd;
        &quot;retirement&quot;,&#xd;
        &quot;personal&quot;,&#xd;
        &quot;financial&quot;&#xd;
      ],&#xd;
      &quot;phase&quot;: 1,&#xd;
      &quot;primary_motivation_note&quot;: &quot;Telly.Beier&apos;s primary note&quot;,&#xd;
      &quot;is_pre_approved&quot;: true,&#xd;
      &quot;is_primary&quot;: true,&#xd;
      &quot;status&quot;: 1,&#xd;
      &quot;stage&quot;: &quot;prospect&quot;,&#xd;
      &quot;lead_type&quot;: &quot;rent&quot;,&#xd;
      &quot;is_starred&quot;: false,&#xd;
      &quot;available_to_contact_date&quot;: &quot;2019-05-25&quot;,&#xd;
      &quot;pre_approved_amount&quot;: 6,&#xd;
      &quot;number_in_household&quot;: 13,&#xd;
      &quot;background_info&quot;: &quot;bg info&quot;,&#xd;
      &quot;profession_title&quot;: &quot;Teller&quot;,&#xd;
      &quot;profession_department&quot;: &quot;Logistics&quot;,&#xd;
      &quot;is_connected&quot;: true,&#xd;
	 &quot;system-metas&quot;: [&#xd;
        {&#xd;
          &quot;id&quot;: 0,&#xd;
          &quot;name&quot;: &quot;piesync&quot;,&#xd;
          &quot;variable&quot;: &quot;piesync_trash&quot;,&#xd;
          &quot;type&quot;: &quot;1&quot;,&#xd;
          &quot;value&quot;: &quot;true&quot;&#xd;
        }&#xd;
      ],&#xd;
      &quot;team_id&quot;: 1,&#xd;
      &quot;primary_address&quot;: &quot;address 1&quot;,&#xd;
      &quot;language&quot;: &quot;en&quot;,&#xd;
      &quot;initial_contact_date&quot;: &quot;2017-06-23 20:27:16&quot;&#xd;
    },&#xd;
    &quot;relationships&quot;: {&#xd;
      &quot;contact-leads&quot;: {&#xd;
        &quot;data&quot;: {&#xd;
          &quot;id&quot;: 12,&#xd;
          &quot;attributes&quot;: {&#xd;
            &quot;route_id&quot;: 3,&#xd;
            &quot;is_buyer&quot;: 1,&#xd;
            &quot;is_team&quot;: 1,&#xd;
            &quot;seller_listing_address&quot;: &quot;917 4th St. Millville, NJ 08332&quot;,&#xd;
            &quot;buyer_price_min&quot;: 71000,&#xd;
            &quot;buyer_price_max&quot;: 121000,&#xd;
            &quot;is_assigned&quot;: 1,&#xd;
            &quot;assignment&quot;: &quot;as&quot;,&#xd;
            &quot;leader_id&quot;: 13,&#xd;
            &quot;status&quot;: 10,&#xd;
            &quot;preferred_contact_by&quot;: &quot;email&quot;,&#xd;
            &quot;about&quot;: &quot;about&quot;,&#xd;
            &quot;description&quot;: &quot;desc&quot;&#xd;
          }&#xd;
        }&#xd;
      },&#xd;
      &quot;addresses&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;address_line_1&quot;: &quot;wow&quot;,&#xd;
              &quot;address_line_2&quot;: &quot;wow&quot;,&#xd;
              &quot;address_line_3&quot;: &quot;wow&quot;,&#xd;
              &quot;address_line_4&quot;: &quot;wow&quot;,&#xd;
              &quot;city&quot;: &quot;wow&quot;,&#xd;
              &quot;city_locality&quot;: &quot;cupiditate 4&quot;,&#xd;
              &quot;state_region&quot;: &quot;wow&quot;,&#xd;
              &quot;country&quot;: &quot;Indonesia&quot;,&#xd;
              &quot;postal_code&quot;: &quot;16810&quot;,&#xd;
              &quot;lat&quot;: -57.359989,&#xd;
              &quot;lng&quot;: 54.022906,&#xd;
              &quot;is_current&quot;: false,&#xd;
              &quot;ownership_status&quot;: 2,&#xd;
              &quot;description&quot;: &quot;Best place in the world 14&quot;,&#xd;
              &quot;neighborhood&quot;: &quot;some neighborhood&quot;,&#xd;
              &quot;is_primary&quot;: true,&#xd;
              &quot;label&quot;: &quot;home&quot;,&#xd;
              &quot;is_mailing_address&quot;: true&#xd;
            }&#xd;
          },&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;address_line_1&quot;: &quot;232&quot;,&#xd;
              &quot;address_line_2&quot;: &quot;wow&quot;,&#xd;
              &quot;address_line_3&quot;: &quot;wow&quot;,&#xd;
              &quot;address_line_4&quot;: &quot;wow&quot;,&#xd;
              &quot;city&quot;: &quot;wow&quot;,&#xd;
              &quot;city_locality&quot;: &quot;cupiditate 4&quot;,&#xd;
              &quot;state_region&quot;: &quot;wow&quot;,&#xd;
              &quot;country&quot;: &quot;Indonesia&quot;,&#xd;
              &quot;postal_code&quot;: &quot;16810&quot;,&#xd;
              &quot;lat&quot;: -57.359989,&#xd;
              &quot;lng&quot;: 54.022906,&#xd;
              &quot;is_current&quot;: false,&#xd;
              &quot;ownership_status&quot;: 2,&#xd;
              &quot;description&quot;: &quot;Best place in the world 14&quot;,&#xd;
              &quot;neighborhood&quot;: &quot;some neighborhood&quot;,&#xd;
              &quot;is_primary&quot;: true,&#xd;
              &quot;label&quot;: &quot;home&quot;,&#xd;
              &quot;is_mailing_address&quot;: true&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;phones&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;number&quot;: &quot;202-555-7341&quot;,&#xd;
              &quot;country_code&quot;: &quot;US&quot;,&#xd;
              &quot;formatted_number&quot;: &quot;202-555-7341&quot;,&#xd;
              &quot;is_primary&quot;: true,&#xd;
              &quot;is_current&quot;: true,&#xd;
              &quot;label&quot;: &quot;home&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;notes&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;note&quot;: &quot;update new&quot;,&#xd;
              &quot;title&quot;: &quot;updated title 2&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;sources&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;label&quot;: &quot;KW Website&quot;,&#xd;
              &quot;is_archived&quot;: 0,&#xd;
              &quot;vendor&quot;: &quot;ow&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;emails&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;email&quot;: &quot;ematestemail.28@gmail.com&quot;,&#xd;
              &quot;label&quot;: &quot;work&quot;,&#xd;
              &quot;is_primary&quot;: true,&#xd;
              &quot;is_valid&quot;: true&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;social-accounts&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;social_network_id&quot;: 1,&#xd;
              &quot;identifier&quot;: &quot;example1&quot;,&#xd;
              &quot;url&quot;: &quot;https://www.facebook.com/example2&quot;&#xd;
            }&#xd;
          },&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;social_network_id&quot;: 1,&#xd;
              &quot;identifier&quot;: &quot;example4&quot;,&#xd;
              &quot;url&quot;: &quot;https://www.facebook.com/example1&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;object-custom-fields&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;custom_field&quot;: &quot;4 notes&quot;,&#xd;
              &quot;custom_field_value&quot;: &quot;another&quot;,&#xd;
              &quot;custom_field_tag&quot;: {&#xd;
                &quot;tag&quot;: &quot;blender&quot;,&#xd;
                &quot;color&quot;: &quot;blue&quot;&#xd;
              }&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      }&#xd;
    }&#xd;
  }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49587">201</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Family Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">idContactFamilyExtractor</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">data.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Create Batch Contacts Request" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;data&quot;: [&#xd;
        {&#xd;
            &quot;attributes&quot;: {&#xd;
                &quot;prefix&quot;: &quot;Miss&quot;,&#xd;
                &quot;first_name&quot;: &quot;Marina&quot;,&#xd;
                &quot;middle_name&quot;: &quot;Joanny&quot;,&#xd;
                &quot;last_name&quot;: &quot;Gibson&quot;,&#xd;
                &quot;preferred_name&quot;: &quot;Marina Gibson&quot;,&#xd;
                &quot;legal_name&quot;: &quot;Marina Joanny Gibson&quot;,&#xd;
                &quot;suffix&quot;: &quot;I&quot;,&#xd;
                &quot;date_of_birth&quot;: &quot;2002-02-02&quot;,&#xd;
                &quot;contact_types&quot;: [&#xd;
                    &quot;buyer&quot;,&#xd;
                    &quot;seller&quot;,&#xd;
                    &quot;vendor&quot;,&#xd;
                    &quot;investor&quot;,&#xd;
                    &quot;agent&quot;,&#xd;
                    &quot;lender&quot;,&#xd;
                    &quot;past clients&quot;&#xd;
                ],&#xd;
                &quot;motivations&quot;: [&#xd;
                    &quot;moving-up&quot;,&#xd;
                    &quot;downsizing&quot;,&#xd;
                    &quot;vacation-home&quot;,&#xd;
                    &quot;first-home&quot;,&#xd;
                    &quot;schools&quot;,&#xd;
                    &quot;relocation&quot;,&#xd;
                    &quot;retirement&quot;,&#xd;
                    &quot;personal&quot;,&#xd;
                    &quot;financial&quot;&#xd;
                ],&#xd;
                &quot;primary_motivation_note&quot;: &quot;Deleniti et nesciunt possimus qui cumque qui mollitia consequatur.&quot;,&#xd;
                &quot;is_pre_approved&quot;: true,&#xd;
                &quot;is_primary&quot;: true,&#xd;
                &quot;status&quot;: 1,&#xd;
                &quot;stage&quot;: &quot;prospect&quot;,&#xd;
                &quot;lead_type&quot;: &quot;rent&quot;,&#xd;
                &quot;is_starred&quot;: false,&#xd;
                &quot;available_to_contact_date&quot;: &quot;2017-10-03&quot;,&#xd;
                &quot;buyer_type&quot;: null,&#xd;
                &quot;pre_approved_amount&quot;: 0,&#xd;
                &quot;number_in_household&quot;: 0,&#xd;
                &quot;background_info&quot;: null,&#xd;
                &quot;initial_contact_date&quot;: &quot;2017-06-23 20:27:16&quot;,&#xd;
                &quot;profession_title&quot;: &quot;Teller&quot;,&#xd;
                &quot;profession_department&quot;: &quot;Logistics&quot;,&#xd;
                &quot;is_connected&quot;: true,&#xd;
                &quot;system-metas&quot;: [&#xd;
                    {&#xd;
                        &quot;id&quot;: 0,&#xd;
                        &quot;name&quot;: &quot;piesync&quot;,&#xd;
                        &quot;variable&quot;: &quot;piesync_trash&quot;,&#xd;
                        &quot;type&quot;: &quot;1&quot;,&#xd;
                        &quot;value&quot;: &quot;true&quot;&#xd;
                    }&#xd;
                ],&#xd;
                &quot;primary_address&quot;: &quot;13067-4569, US, Kulaschester, 3054 Dickens Common&quot;&#xd;
            },&#xd;
            &quot;relationships&quot;: {&#xd;
                &quot;company&quot;: {&#xd;
                    &quot;data&quot;: {&#xd;
                        &quot;id&quot;: &quot;&quot;,&#xd;
                        &quot;attributes&quot;: {&#xd;
                            &quot;name&quot;: &quot;Acme Inc&quot;,&#xd;
                            &quot;address&quot;: &quot;3114 Farrell Mall South Cliffordville, OH 12336-2071&quot;&#xd;
                        }&#xd;
                    }&#xd;
                },&#xd;
                &quot;emails&quot;: {&#xd;
                    &quot;data&quot;: [&#xd;
                        {&#xd;
                            &quot;id&quot;: &quot;&quot;,&#xd;
                            &quot;meta&quot;: {&#xd;
                                &quot;take_over&quot;: false&#xd;
                            },&#xd;
                            &quot;attributes&quot;: {&#xd;
                                &quot;email&quot;: &quot;ematestemail.28@gmail.com&quot;,&#xd;
                                &quot;label&quot;: &quot;work&quot;,&#xd;
                                &quot;is_primary&quot;: false,&#xd;
                                &quot;is_valid&quot;: true&#xd;
                            }&#xd;
                        }&#xd;
                    ]&#xd;
                },&#xd;
                &quot;social-accounts&quot;: {&#xd;
                    &quot;data&quot;: [&#xd;
                        {&#xd;
                            &quot;id&quot;: &quot;&quot;,&#xd;
                            &quot;attributes&quot;: {&#xd;
                                &quot;social_network_id&quot;: 1,&#xd;
                                &quot;identifier&quot;: &quot;example1&quot;,&#xd;
                                &quot;url&quot;: &quot;https://www.facebook.com/example1&quot;&#xd;
                            }&#xd;
                        }&#xd;
                    ]&#xd;
                },&#xd;
                &quot;addresses&quot;: {&#xd;
                    &quot;data&quot;: [&#xd;
                        {&#xd;
                            &quot;id&quot;: &quot;&quot;,&#xd;
                            &quot;attributes&quot;: {&#xd;
                                &quot;address_line_1&quot;: &quot;11036 Konopelski Shore Suite 447&quot;,&#xd;
                                &quot;address_line_2&quot;: &quot;Suite 679&quot;,&#xd;
                                &quot;address_line_3&quot;: &quot;Apt. 046&quot;,&#xd;
                                &quot;address_line_4&quot;: &quot;Suite 557&quot;,&#xd;
                                &quot;city&quot;: &quot;Boylehaven&quot;,&#xd;
                                &quot;city_locality&quot;: &quot;cupiditate&quot;,&#xd;
                                &quot;state_region&quot;: &quot;Missouri&quot;,&#xd;
                                &quot;country&quot;: &quot;Iran&quot;,&#xd;
                                &quot;postal_code&quot;: &quot;82371&quot;,&#xd;
                                &quot;lat&quot;: -57.359989,&#xd;
                                &quot;lng&quot;: 54.022906,&#xd;
                                &quot;is_current&quot;: false,&#xd;
                                &quot;ownership_status&quot;: 2,&#xd;
                                &quot;description&quot;: &quot;Best place in the world&quot;,&#xd;
                                &quot;neighborhood&quot;: &quot;some neighborhood&quot;,&#xd;
                                &quot;is_primary&quot;: false,&#xd;
                                &quot;label&quot;: &quot;home&quot;,&#xd;
                                &quot;is_mailing_address&quot;: true&#xd;
                            }&#xd;
                        }&#xd;
                    ]&#xd;
                },&#xd;
                &quot;phones&quot;: {&#xd;
                    &quot;data&quot;: [&#xd;
                        {&#xd;
                            &quot;id&quot;: &quot;&quot;,&#xd;
                            &quot;attributes&quot;: {&#xd;
                                &quot;number&quot;: &quot;+1 514-794-7740&quot;,&#xd;
                                &quot;country_code&quot;: &quot;US&quot;,&#xd;
                                &quot;formatted_number&quot;: &quot;+1 514-794-7740&quot;,&#xd;
                                &quot;is_primary&quot;: true,&#xd;
                                &quot;is_current&quot;: true,&#xd;
                                &quot;label&quot;: &quot;home&quot;&#xd;
                            }&#xd;
                        }&#xd;
                    ]&#xd;
                },&#xd;
                &quot;tags&quot;: {&#xd;
                    &quot;data&quot;: [&#xd;
                        {&#xd;
                            &quot;id&quot;: 3,&#xd;
                            &quot;tag&quot;: &quot;&quot;&#xd;
                        }&#xd;
                    ]&#xd;
                },&#xd;
                &quot;object-custom-fields&quot;: {&#xd;
                    &quot;data&quot;: [&#xd;
                        {&#xd;
                            &quot;attributes&quot;: {&#xd;
                                &quot;custom_field&quot;: &quot;notesss1&quot;,&#xd;
                                &quot;custom_field_value&quot;: &quot;Meet at property event.&quot;&#xd;
                            }&#xd;
                        }&#xd;
                    ]&#xd;
                },&#xd;
                &quot;sources&quot;: {&#xd;
                    &quot;data&quot;: [&#xd;
                        {&#xd;
                            &quot;attributes&quot;: {&#xd;
                                &quot;label&quot;: &quot;KW Website&quot;,&#xd;
                                &quot;is_archived&quot;: 0,&#xd;
                                &quot;vendor&quot;: &quot;ow&quot;&#xd;
                            }&#xd;
                        }&#xd;
                    ]&#xd;
                }&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;attributes&quot;: {&#xd;
                &quot;prefix&quot;: &quot;Miss&quot;,&#xd;
                &quot;first_name&quot;: &quot;Marina&quot;,&#xd;
                &quot;middle_name&quot;: &quot;Joanny&quot;,&#xd;
                &quot;last_name&quot;: &quot;Gibson&quot;,&#xd;
                &quot;preferred_name&quot;: &quot;Marina Gibson&quot;,&#xd;
                &quot;legal_name&quot;: &quot;Marina Joanny Gibson&quot;,&#xd;
                &quot;suffix&quot;: &quot;I&quot;,&#xd;
                &quot;date_of_birth&quot;: &quot;2002-02-02&quot;,&#xd;
                &quot;contact_types&quot;: [&#xd;
                    &quot;buyer&quot;,&#xd;
                    &quot;seller&quot;,&#xd;
                    &quot;vendor&quot;,&#xd;
                    &quot;investor&quot;,&#xd;
                    &quot;agent&quot;,&#xd;
                    &quot;lender&quot;,&#xd;
                    &quot;past clients&quot;&#xd;
                ],&#xd;
                &quot;motivations&quot;: [&#xd;
                    &quot;moving-up&quot;,&#xd;
                    &quot;downsizing&quot;,&#xd;
                    &quot;vacation-home&quot;,&#xd;
                    &quot;first-home&quot;,&#xd;
                    &quot;schools&quot;,&#xd;
                    &quot;relocation&quot;,&#xd;
                    &quot;retirement&quot;,&#xd;
                    &quot;personal&quot;,&#xd;
                    &quot;financial&quot;&#xd;
                ],&#xd;
                &quot;primary_motivation_note&quot;: &quot;Deleniti et nesciunt possimus qui cumque qui mollitia consequatur.&quot;,&#xd;
                &quot;is_pre_approved&quot;: true,&#xd;
                &quot;is_primary&quot;: true,&#xd;
                &quot;status&quot;: 1,&#xd;
                &quot;stage&quot;: &quot;prospect&quot;,&#xd;
                &quot;lead_type&quot;: &quot;rent&quot;,&#xd;
                &quot;is_starred&quot;: false,&#xd;
                &quot;available_to_contact_date&quot;: &quot;2017-10-03&quot;,&#xd;
                &quot;buyer_type&quot;: null,&#xd;
                &quot;pre_approved_amount&quot;: 0,&#xd;
                &quot;number_in_household&quot;: 0,&#xd;
                &quot;background_info&quot;: null,&#xd;
                &quot;initial_contact_date&quot;: &quot;2017-06-23 20:27:16&quot;,&#xd;
                &quot;profession_title&quot;: &quot;Teller&quot;,&#xd;
                &quot;profession_department&quot;: &quot;Logistics&quot;,&#xd;
                &quot;is_connected&quot;: true,&#xd;
                &quot;system-metas&quot;: [&#xd;
                    {&#xd;
                        &quot;id&quot;: 0,&#xd;
                        &quot;name&quot;: &quot;piesync&quot;,&#xd;
                        &quot;variable&quot;: &quot;piesync_trash&quot;,&#xd;
                        &quot;type&quot;: &quot;1&quot;,&#xd;
                        &quot;value&quot;: &quot;true&quot;&#xd;
                    }&#xd;
                ]&#xd;
            },&#xd;
            &quot;relationships&quot;: {&#xd;
                &quot;company&quot;: {&#xd;
                    &quot;data&quot;: {&#xd;
                        &quot;id&quot;: &quot;&quot;,&#xd;
                        &quot;attributes&quot;: {&#xd;
                            &quot;name&quot;: &quot;Acme Inc&quot;,&#xd;
                            &quot;address&quot;: &quot;3114 Farrell Mall South Cliffordville, OH 12336-2071&quot;&#xd;
                        }&#xd;
                    }&#xd;
                },&#xd;
                &quot;emails&quot;: {&#xd;
                    &quot;data&quot;: [&#xd;
                        {&#xd;
                            &quot;id&quot;: &quot;&quot;,&#xd;
                            &quot;meta&quot;: {&#xd;
                                &quot;take_over&quot;: false&#xd;
                            },&#xd;
                            &quot;attributes&quot;: {&#xd;
                                &quot;email&quot;: &quot;ematestemail.38@gmail.com&quot;,&#xd;
                                &quot;label&quot;: &quot;work&quot;,&#xd;
                                &quot;is_primary&quot;: false,&#xd;
                                &quot;is_valid&quot;: true&#xd;
                            }&#xd;
                        }&#xd;
                    ]&#xd;
                },&#xd;
                &quot;social-accounts&quot;: {&#xd;
                    &quot;data&quot;: [&#xd;
                        {&#xd;
                            &quot;id&quot;: &quot;&quot;,&#xd;
                            &quot;attributes&quot;: {&#xd;
                                &quot;social_network_id&quot;: 1,&#xd;
                                &quot;identifier&quot;: &quot;example1&quot;,&#xd;
                                &quot;url&quot;: &quot;https://www.facebook.com/example1&quot;&#xd;
                            }&#xd;
                        }&#xd;
                    ]&#xd;
                },&#xd;
                &quot;addresses&quot;: {&#xd;
                    &quot;data&quot;: [&#xd;
                        {&#xd;
                            &quot;id&quot;: &quot;&quot;,&#xd;
                            &quot;attributes&quot;: {&#xd;
                                &quot;address_line_1&quot;: &quot;11036 Konopelski Shore Suite 447&quot;,&#xd;
                                &quot;address_line_2&quot;: &quot;Suite 679&quot;,&#xd;
                                &quot;address_line_3&quot;: &quot;Apt. 046&quot;,&#xd;
                                &quot;address_line_4&quot;: &quot;Suite 557&quot;,&#xd;
                                &quot;city&quot;: &quot;Boylehaven&quot;,&#xd;
                                &quot;city_locality&quot;: &quot;cupiditate&quot;,&#xd;
                                &quot;state_region&quot;: &quot;Missouri&quot;,&#xd;
                                &quot;country&quot;: &quot;Iran&quot;,&#xd;
                                &quot;postal_code&quot;: &quot;82371&quot;,&#xd;
                                &quot;lat&quot;: -57.359989,&#xd;
                                &quot;lng&quot;: 54.022906,&#xd;
                                &quot;is_current&quot;: false,&#xd;
                                &quot;ownership_status&quot;: 2,&#xd;
                                &quot;description&quot;: &quot;Best place in the world&quot;,&#xd;
                                &quot;neighborhood&quot;: &quot;some neighborhood&quot;,&#xd;
                                &quot;is_primary&quot;: false,&#xd;
                                &quot;label&quot;: &quot;home&quot;,&#xd;
                                &quot;is_mailing_address&quot;: true&#xd;
                            }&#xd;
                        }&#xd;
                    ]&#xd;
                },&#xd;
                &quot;phones&quot;: {&#xd;
                    &quot;data&quot;: [&#xd;
                        {&#xd;
                            &quot;id&quot;: &quot;&quot;,&#xd;
                            &quot;attributes&quot;: {&#xd;
                                &quot;number&quot;: &quot;+1 514-794-7740&quot;,&#xd;
                                &quot;country_code&quot;: &quot;US&quot;,&#xd;
                                &quot;formatted_number&quot;: &quot;+1 514-794-7740&quot;,&#xd;
                                &quot;is_primary&quot;: true,&#xd;
                                &quot;is_current&quot;: true,&#xd;
                                &quot;label&quot;: &quot;home&quot;&#xd;
                            }&#xd;
                        }&#xd;
                    ]&#xd;
                },&#xd;
                &quot;tags&quot;: {&#xd;
                    &quot;data&quot;: [&#xd;
                        {&#xd;
                            &quot;id&quot;: 3,&#xd;
                            &quot;tag&quot;: &quot;&quot;&#xd;
                        }&#xd;
                    ]&#xd;
                },&#xd;
                &quot;object-custom-fields&quot;: {&#xd;
                    &quot;data&quot;: [&#xd;
                        {&#xd;
                            &quot;attributes&quot;: {&#xd;
                                &quot;custom_field&quot;: &quot;notesss2&quot;,&#xd;
                                &quot;custom_field_value&quot;: &quot;Meet at property event.&quot;&#xd;
                            }&#xd;
                        }&#xd;
                    ]&#xd;
                },&#xd;
                &quot;sources&quot;: {&#xd;
                    &quot;data&quot;: [&#xd;
                        {&#xd;
                            &quot;attributes&quot;: {&#xd;
                                &quot;label&quot;: &quot;KW Website&quot;,&#xd;
                                &quot;is_archived&quot;: 0,&#xd;
                                &quot;vendor&quot;: &quot;ow&quot;&#xd;
                            }&#xd;
                        }&#xd;
                    ]&#xd;
                }&#xd;
            }&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts/multiple-store</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49587">201</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Create Batch Relationship Contacts Request" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;data&quot;: [&#xd;
        {&#xd;
            &quot;attributes&quot;: {&#xd;
                &quot;first_name&quot;: &quot;Tag test1&quot;&#xd;
            },&#xd;
            &quot;relationships&quot;: {&#xd;
                &quot;tags&quot;: {&#xd;
                    &quot;data&quot;: [&#xd;
                        {&#xd;
                            &quot;type&quot;: &quot;tags&quot;,&#xd;
                            &quot;attributes&quot;: {&#xd;
                                &quot;tag&quot;: &quot;marketing emails&quot;&#xd;
                            }&#xd;
                        }&#xd;
                    ]&#xd;
                },&#xd;
                &quot;phones&quot;: {&#xd;
                	&#xd;
                }&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;attributes&quot;: {&#xd;
                &quot;first_name&quot;: &quot;Tag test2&quot;&#xd;
            },&#xd;
            &quot;relationships&quot;: {&#xd;
                &quot;tags&quot;: {&#xd;
                    &quot;data&quot;: [&#xd;
                        {&#xd;
                            &quot;id&quot;: &quot;2006&quot;&#xd;
                        }&#xd;
                    ]&#xd;
                }&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;attributes&quot;: {&#xd;
                &quot;first_name&quot;: &quot;Tag test3&quot;&#xd;
            },&#xd;
            &quot;relationships&quot;: {&#xd;
                &quot;tags&quot;: {&#xd;
                    &quot;data&quot;: [&#xd;
                        {&#xd;
                            &quot;attributes&quot;: {&#xd;
                                &quot;tag&quot;: &quot;marketing email&quot;&#xd;
                            }&#xd;
                        }&#xd;
                    ]&#xd;
                }&#xd;
            }&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts/multiple-store</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49587">201</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Create Batch Contacts Request without name" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;data&quot;: [&#xd;
        {&#xd;
            &quot;attributes&quot;: {&#xd;
                &quot;prefix&quot;: &quot;Miss&quot;,&#xd;
                &quot;first_name&quot;: &quot;&quot;,&#xd;
                &quot;middle_name&quot;: &quot;&quot;,&#xd;
                &quot;last_name&quot;: &quot;&quot;,&#xd;
                &quot;preferred_name&quot;: &quot;&quot;,&#xd;
                &quot;legal_name&quot;: &quot;&quot;,&#xd;
                &quot;suffix&quot;: &quot;I&quot;,&#xd;
                &quot;date_of_birth&quot;: &quot;2002-02-02&quot;,&#xd;
                &quot;contact_types&quot;: [&#xd;
                    &quot;buyer&quot;,&#xd;
                    &quot;seller&quot;,&#xd;
                    &quot;vendor&quot;,&#xd;
                    &quot;investor&quot;,&#xd;
                    &quot;agent&quot;,&#xd;
                    &quot;lender&quot;,&#xd;
                    &quot;past clients&quot;&#xd;
                ],&#xd;
                &quot;motivations&quot;: [&#xd;
                    &quot;moving-up&quot;,&#xd;
                    &quot;downsizing&quot;,&#xd;
                    &quot;vacation-home&quot;,&#xd;
                    &quot;first-home&quot;,&#xd;
                    &quot;schools&quot;,&#xd;
                    &quot;relocation&quot;,&#xd;
                    &quot;retirement&quot;,&#xd;
                    &quot;personal&quot;,&#xd;
                    &quot;financial&quot;&#xd;
                ],&#xd;
                &quot;primary_motivation_note&quot;: &quot;Deleniti et nesciunt possimus qui cumque qui mollitia consequatur.&quot;,&#xd;
                &quot;is_pre_approved&quot;: true,&#xd;
                &quot;is_primary&quot;: true,&#xd;
                &quot;status&quot;: 1,&#xd;
                &quot;stage&quot;: &quot;prospect&quot;,&#xd;
                &quot;lead_type&quot;: &quot;rent&quot;,&#xd;
                &quot;is_starred&quot;: false,&#xd;
                &quot;available_to_contact_date&quot;: &quot;2017-10-03&quot;,&#xd;
                &quot;buyer_type&quot;: null,&#xd;
                &quot;pre_approved_amount&quot;: 0,&#xd;
                &quot;number_in_household&quot;: 0,&#xd;
                &quot;background_info&quot;: null,&#xd;
                &quot;initial_contact_date&quot;: &quot;2017-06-23 20:27:16&quot;,&#xd;
                &quot;profession_title&quot;: &quot;Teller&quot;,&#xd;
                &quot;profession_department&quot;: &quot;Logistics&quot;,&#xd;
                &quot;is_connected&quot;: true,&#xd;
                &quot;system-metas&quot;: [&#xd;
                    {&#xd;
                        &quot;id&quot;: 0,&#xd;
                        &quot;name&quot;: &quot;piesync&quot;,&#xd;
                        &quot;variable&quot;: &quot;piesync_trash&quot;,&#xd;
                        &quot;type&quot;: &quot;1&quot;,&#xd;
                        &quot;value&quot;: &quot;true&quot;&#xd;
                    }&#xd;
                ],&#xd;
                &quot;primary_address&quot;: &quot;13067-4569, US, Kulaschester, 3054 Dickens Common&quot;&#xd;
            },&#xd;
            &quot;relationships&quot;: {&#xd;
                &quot;company&quot;: {&#xd;
                    &quot;data&quot;: {&#xd;
                        &quot;id&quot;: &quot;&quot;,&#xd;
                        &quot;attributes&quot;: {&#xd;
                            &quot;name&quot;: &quot;Acme Inc&quot;,&#xd;
                            &quot;address&quot;: &quot;3114 Farrell Mall South Cliffordville, OH 12336-2071&quot;&#xd;
                        }&#xd;
                    }&#xd;
                },&#xd;
                &quot;emails&quot;: {&#xd;
                    &quot;data&quot;: [&#xd;
                        {&#xd;
                            &quot;id&quot;: &quot;&quot;,&#xd;
                            &quot;meta&quot;: {&#xd;
                                &quot;take_over&quot;: false&#xd;
                            },&#xd;
                            &quot;attributes&quot;: {&#xd;
                                &quot;email&quot;: &quot;ematestemail.28@gmail.com&quot;,&#xd;
                                &quot;label&quot;: &quot;work&quot;,&#xd;
                                &quot;is_primary&quot;: false,&#xd;
                                &quot;is_valid&quot;: true&#xd;
                            }&#xd;
                        }&#xd;
                    ]&#xd;
                },&#xd;
                &quot;social-accounts&quot;: {&#xd;
                    &quot;data&quot;: [&#xd;
                        {&#xd;
                            &quot;id&quot;: &quot;&quot;,&#xd;
                            &quot;attributes&quot;: {&#xd;
                                &quot;social_network_id&quot;: 1,&#xd;
                                &quot;identifier&quot;: &quot;example1&quot;,&#xd;
                                &quot;url&quot;: &quot;https://www.facebook.com/example1&quot;&#xd;
                            }&#xd;
                        }&#xd;
                    ]&#xd;
                },&#xd;
                &quot;addresses&quot;: {&#xd;
                    &quot;data&quot;: [&#xd;
                        {&#xd;
                            &quot;id&quot;: &quot;&quot;,&#xd;
                            &quot;attributes&quot;: {&#xd;
                                &quot;address_line_1&quot;: &quot;11036 Konopelski Shore Suite 447&quot;,&#xd;
                                &quot;address_line_2&quot;: &quot;Suite 679&quot;,&#xd;
                                &quot;address_line_3&quot;: &quot;Apt. 046&quot;,&#xd;
                                &quot;address_line_4&quot;: &quot;Suite 557&quot;,&#xd;
                                &quot;city&quot;: &quot;Boylehaven&quot;,&#xd;
                                &quot;city_locality&quot;: &quot;cupiditate&quot;,&#xd;
                                &quot;state_region&quot;: &quot;Missouri&quot;,&#xd;
                                &quot;country&quot;: &quot;Iran&quot;,&#xd;
                                &quot;postal_code&quot;: &quot;82371&quot;,&#xd;
                                &quot;lat&quot;: -57.359989,&#xd;
                                &quot;lng&quot;: 54.022906,&#xd;
                                &quot;is_current&quot;: false,&#xd;
                                &quot;ownership_status&quot;: 2,&#xd;
                                &quot;description&quot;: &quot;Best place in the world&quot;,&#xd;
                                &quot;neighborhood&quot;: &quot;some neighborhood&quot;,&#xd;
                                &quot;is_primary&quot;: false,&#xd;
                                &quot;label&quot;: &quot;home&quot;,&#xd;
                                &quot;is_mailing_address&quot;: true&#xd;
                            }&#xd;
                        }&#xd;
                    ]&#xd;
                },&#xd;
                &quot;phones&quot;: {&#xd;
                    &quot;data&quot;: [&#xd;
                        {&#xd;
                            &quot;id&quot;: &quot;&quot;,&#xd;
                            &quot;attributes&quot;: {&#xd;
                                &quot;number&quot;: &quot;+1 514-794-7740&quot;,&#xd;
                                &quot;country_code&quot;: &quot;US&quot;,&#xd;
                                &quot;formatted_number&quot;: &quot;+1 514-794-7740&quot;,&#xd;
                                &quot;is_primary&quot;: true,&#xd;
                                &quot;is_current&quot;: true,&#xd;
                                &quot;label&quot;: &quot;home&quot;&#xd;
                            }&#xd;
                        }&#xd;
                    ]&#xd;
                },&#xd;
                &quot;tags&quot;: {&#xd;
                    &quot;data&quot;: [&#xd;
                        {&#xd;
                            &quot;id&quot;: 3,&#xd;
                            &quot;tag&quot;: &quot;&quot;&#xd;
                        }&#xd;
                    ]&#xd;
                },&#xd;
                &quot;object-custom-fields&quot;: {&#xd;
                    &quot;data&quot;: [&#xd;
                        {&#xd;
                            &quot;attributes&quot;: {&#xd;
                                &quot;custom_field&quot;: &quot;notesss1&quot;,&#xd;
                                &quot;custom_field_value&quot;: &quot;Meet at property event.&quot;&#xd;
                            }&#xd;
                        }&#xd;
                    ]&#xd;
                },&#xd;
                &quot;sources&quot;: {&#xd;
                    &quot;data&quot;: [&#xd;
                        {&#xd;
                            &quot;attributes&quot;: {&#xd;
                                &quot;label&quot;: &quot;KW Website&quot;,&#xd;
                                &quot;is_archived&quot;: 0,&#xd;
                                &quot;vendor&quot;: &quot;ow&quot;&#xd;
                            }&#xd;
                        }&#xd;
                    ]&#xd;
                }&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;attributes&quot;: {&#xd;
                &quot;prefix&quot;: &quot;Miss&quot;,&#xd;
                &quot;first_name&quot;: &quot;Marina&quot;,&#xd;
                &quot;middle_name&quot;: &quot;Joanny&quot;,&#xd;
                &quot;last_name&quot;: &quot;Gibson&quot;,&#xd;
                &quot;preferred_name&quot;: &quot;Marina Gibson&quot;,&#xd;
                &quot;legal_name&quot;: &quot;Marina Joanny Gibson&quot;,&#xd;
                &quot;suffix&quot;: &quot;I&quot;,&#xd;
                &quot;date_of_birth&quot;: &quot;2002-02-02&quot;,&#xd;
                &quot;contact_types&quot;: [&#xd;
                    &quot;buyer&quot;,&#xd;
                    &quot;seller&quot;,&#xd;
                    &quot;vendor&quot;,&#xd;
                    &quot;investor&quot;,&#xd;
                    &quot;agent&quot;,&#xd;
                    &quot;lender&quot;,&#xd;
                    &quot;past clients&quot;&#xd;
                ],&#xd;
                &quot;motivations&quot;: [&#xd;
                    &quot;moving-up&quot;,&#xd;
                    &quot;downsizing&quot;,&#xd;
                    &quot;vacation-home&quot;,&#xd;
                    &quot;first-home&quot;,&#xd;
                    &quot;schools&quot;,&#xd;
                    &quot;relocation&quot;,&#xd;
                    &quot;retirement&quot;,&#xd;
                    &quot;personal&quot;,&#xd;
                    &quot;financial&quot;&#xd;
                ],&#xd;
                &quot;primary_motivation_note&quot;: &quot;Deleniti et nesciunt possimus qui cumque qui mollitia consequatur.&quot;,&#xd;
                &quot;is_pre_approved&quot;: true,&#xd;
                &quot;is_primary&quot;: true,&#xd;
                &quot;status&quot;: 1,&#xd;
                &quot;stage&quot;: &quot;prospect&quot;,&#xd;
                &quot;lead_type&quot;: &quot;rent&quot;,&#xd;
                &quot;is_starred&quot;: false,&#xd;
                &quot;available_to_contact_date&quot;: &quot;2017-10-03&quot;,&#xd;
                &quot;buyer_type&quot;: null,&#xd;
                &quot;pre_approved_amount&quot;: 0,&#xd;
                &quot;number_in_household&quot;: 0,&#xd;
                &quot;background_info&quot;: null,&#xd;
                &quot;initial_contact_date&quot;: &quot;2017-06-23 20:27:16&quot;,&#xd;
                &quot;profession_title&quot;: &quot;Teller&quot;,&#xd;
                &quot;profession_department&quot;: &quot;Logistics&quot;,&#xd;
                &quot;is_connected&quot;: true,&#xd;
                &quot;system-metas&quot;: [&#xd;
                    {&#xd;
                        &quot;id&quot;: 0,&#xd;
                        &quot;name&quot;: &quot;piesync&quot;,&#xd;
                        &quot;variable&quot;: &quot;piesync_trash&quot;,&#xd;
                        &quot;type&quot;: &quot;1&quot;,&#xd;
                        &quot;value&quot;: &quot;true&quot;&#xd;
                    }&#xd;
                ]&#xd;
            },&#xd;
            &quot;relationships&quot;: {&#xd;
                &quot;company&quot;: {&#xd;
                    &quot;data&quot;: {&#xd;
                        &quot;id&quot;: &quot;&quot;,&#xd;
                        &quot;attributes&quot;: {&#xd;
                            &quot;name&quot;: &quot;Acme Inc&quot;,&#xd;
                            &quot;address&quot;: &quot;3114 Farrell Mall South Cliffordville, OH 12336-2071&quot;&#xd;
                        }&#xd;
                    }&#xd;
                },&#xd;
                &quot;emails&quot;: {&#xd;
                    &quot;data&quot;: [&#xd;
                        {&#xd;
                            &quot;id&quot;: &quot;&quot;,&#xd;
                            &quot;meta&quot;: {&#xd;
                                &quot;take_over&quot;: false&#xd;
                            },&#xd;
                            &quot;attributes&quot;: {&#xd;
                                &quot;email&quot;: &quot;ematestemail.38@gmail.com&quot;,&#xd;
                                &quot;label&quot;: &quot;work&quot;,&#xd;
                                &quot;is_primary&quot;: false,&#xd;
                                &quot;is_valid&quot;: true&#xd;
                            }&#xd;
                        }&#xd;
                    ]&#xd;
                },&#xd;
                &quot;social-accounts&quot;: {&#xd;
                    &quot;data&quot;: [&#xd;
                        {&#xd;
                            &quot;id&quot;: &quot;&quot;,&#xd;
                            &quot;attributes&quot;: {&#xd;
                                &quot;social_network_id&quot;: 1,&#xd;
                                &quot;identifier&quot;: &quot;example1&quot;,&#xd;
                                &quot;url&quot;: &quot;https://www.facebook.com/example1&quot;&#xd;
                            }&#xd;
                        }&#xd;
                    ]&#xd;
                },&#xd;
                &quot;addresses&quot;: {&#xd;
                    &quot;data&quot;: [&#xd;
                        {&#xd;
                            &quot;id&quot;: &quot;&quot;,&#xd;
                            &quot;attributes&quot;: {&#xd;
                                &quot;address_line_1&quot;: &quot;11036 Konopelski Shore Suite 447&quot;,&#xd;
                                &quot;address_line_2&quot;: &quot;Suite 679&quot;,&#xd;
                                &quot;address_line_3&quot;: &quot;Apt. 046&quot;,&#xd;
                                &quot;address_line_4&quot;: &quot;Suite 557&quot;,&#xd;
                                &quot;city&quot;: &quot;Boylehaven&quot;,&#xd;
                                &quot;city_locality&quot;: &quot;cupiditate&quot;,&#xd;
                                &quot;state_region&quot;: &quot;Missouri&quot;,&#xd;
                                &quot;country&quot;: &quot;Iran&quot;,&#xd;
                                &quot;postal_code&quot;: &quot;82371&quot;,&#xd;
                                &quot;lat&quot;: -57.359989,&#xd;
                                &quot;lng&quot;: 54.022906,&#xd;
                                &quot;is_current&quot;: false,&#xd;
                                &quot;ownership_status&quot;: 2,&#xd;
                                &quot;description&quot;: &quot;Best place in the world&quot;,&#xd;
                                &quot;neighborhood&quot;: &quot;some neighborhood&quot;,&#xd;
                                &quot;is_primary&quot;: false,&#xd;
                                &quot;label&quot;: &quot;home&quot;,&#xd;
                                &quot;is_mailing_address&quot;: true&#xd;
                            }&#xd;
                        }&#xd;
                    ]&#xd;
                },&#xd;
                &quot;phones&quot;: {&#xd;
                    &quot;data&quot;: [&#xd;
                        {&#xd;
                            &quot;id&quot;: &quot;&quot;,&#xd;
                            &quot;attributes&quot;: {&#xd;
                                &quot;number&quot;: &quot;+1 514-794-7740&quot;,&#xd;
                                &quot;country_code&quot;: &quot;US&quot;,&#xd;
                                &quot;formatted_number&quot;: &quot;+1 514-794-7740&quot;,&#xd;
                                &quot;is_primary&quot;: true,&#xd;
                                &quot;is_current&quot;: true,&#xd;
                                &quot;label&quot;: &quot;home&quot;&#xd;
                            }&#xd;
                        }&#xd;
                    ]&#xd;
                },&#xd;
                &quot;tags&quot;: {&#xd;
                    &quot;data&quot;: [&#xd;
                        {&#xd;
                            &quot;id&quot;: 3,&#xd;
                            &quot;tag&quot;: &quot;&quot;&#xd;
                        }&#xd;
                    ]&#xd;
                },&#xd;
                &quot;object-custom-fields&quot;: {&#xd;
                    &quot;data&quot;: [&#xd;
                        {&#xd;
                            &quot;attributes&quot;: {&#xd;
                                &quot;custom_field&quot;: &quot;notesss2&quot;,&#xd;
                                &quot;custom_field_value&quot;: &quot;Meet at property event.&quot;&#xd;
                            }&#xd;
                        }&#xd;
                    ]&#xd;
                },&#xd;
                &quot;sources&quot;: {&#xd;
                    &quot;data&quot;: [&#xd;
                        {&#xd;
                            &quot;attributes&quot;: {&#xd;
                                &quot;label&quot;: &quot;KW Website&quot;,&#xd;
                                &quot;is_archived&quot;: 0,&#xd;
                                &quot;vendor&quot;: &quot;ow&quot;&#xd;
                            }&#xd;
                        }&#xd;
                    ]&#xd;
                }&#xd;
            }&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts/multiple-store</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49587">201</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Create Contact Request" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;attributes&quot;: {&#xd;
      &quot;prefix&quot;: &quot;Mr&quot;,&#xd;
      &quot;first_name&quot;: &quot;Telly&quot;,&#xd;
      &quot;middle_name&quot;: &quot;Senior&quot;,&#xd;
      &quot;last_name&quot;: &quot;Beier&quot;,&#xd;
      &quot;preferred_name&quot;: &quot;Telly Beier&quot;,&#xd;
      &quot;legal_name&quot;: &quot;Telly Senior Beier&quot;,&#xd;
      &quot;suffix&quot;: &quot;I&quot;,&#xd;
      &quot;date_of_birth&quot;: &quot;2019-05-25&quot;,&#xd;
      &quot;timeframe&quot;: &quot;1 to 12 months&quot;,&#xd;
      &quot;contact_types&quot;: [&#xd;
        &quot;buyer&quot;,&#xd;
        &quot;seller&quot;,&#xd;
        &quot;vendor&quot;,&#xd;
        &quot;investor&quot;,&#xd;
        &quot;agent&quot;,&#xd;
        &quot;lender&quot;,&#xd;
        &quot;past clients&quot;&#xd;
      ],&#xd;
      &quot;motivations&quot;: [&#xd;
        &quot;moving-up&quot;,&#xd;
        &quot;downsizing&quot;,&#xd;
        &quot;vacation-home&quot;,&#xd;
        &quot;first-home&quot;,&#xd;
        &quot;schools&quot;,&#xd;
        &quot;relocation&quot;,&#xd;
        &quot;retirement&quot;,&#xd;
        &quot;personal&quot;,&#xd;
        &quot;financial&quot;&#xd;
      ],&#xd;
      &quot;phase&quot;: 1,&#xd;
      &quot;primary_motivation_note&quot;: &quot;Telly.Beier&apos;s primary note&quot;,&#xd;
      &quot;is_pre_approved&quot;: true,&#xd;
      &quot;is_primary&quot;: true,&#xd;
      &quot;status&quot;: 1,&#xd;
      &quot;stage&quot;: &quot;prospect&quot;,&#xd;
      &quot;lead_type&quot;: &quot;rent&quot;,&#xd;
      &quot;is_starred&quot;: false,&#xd;
      &quot;available_to_contact_date&quot;: &quot;2019-05-25&quot;,&#xd;
      &quot;pre_approved_amount&quot;: 6,&#xd;
      &quot;number_in_household&quot;: 13,&#xd;
      &quot;background_info&quot;: &quot;bg info&quot;,&#xd;
      &quot;profession_title&quot;: &quot;Teller&quot;,&#xd;
      &quot;profession_department&quot;: &quot;Logistics&quot;,&#xd;
      &quot;is_connected&quot;: true,&#xd;
	 &quot;system-metas&quot;: [&#xd;
        {&#xd;
          &quot;id&quot;: 0,&#xd;
          &quot;name&quot;: &quot;piesync&quot;,&#xd;
          &quot;variable&quot;: &quot;piesync_trash&quot;,&#xd;
          &quot;type&quot;: &quot;1&quot;,&#xd;
          &quot;value&quot;: &quot;true&quot;&#xd;
        }&#xd;
      ],&#xd;
      &quot;team_id&quot;: 1,&#xd;
      &quot;primary_address&quot;: &quot;address 1&quot;,&#xd;
      &quot;language&quot;: &quot;en&quot;,&#xd;
      &quot;initial_contact_date&quot;: &quot;2017-06-23 20:27:16&quot;&#xd;
    },&#xd;
    &quot;relationships&quot;: {&#xd;
      &quot;contact-leads&quot;: {&#xd;
        &quot;data&quot;: {&#xd;
          &quot;id&quot;: 12,&#xd;
          &quot;attributes&quot;: {&#xd;
            &quot;route_id&quot;: 3,&#xd;
            &quot;is_buyer&quot;: 1,&#xd;
            &quot;is_team&quot;: 1,&#xd;
            &quot;seller_listing_address&quot;: &quot;917 4th St. Millville, NJ 08332&quot;,&#xd;
            &quot;buyer_price_min&quot;: 71000,&#xd;
            &quot;buyer_price_max&quot;: 121000,&#xd;
            &quot;is_assigned&quot;: 1,&#xd;
            &quot;assignment&quot;: &quot;as&quot;,&#xd;
            &quot;leader_id&quot;: 13,&#xd;
            &quot;status&quot;: 10,&#xd;
            &quot;preferred_contact_by&quot;: &quot;email&quot;,&#xd;
            &quot;about&quot;: &quot;about&quot;,&#xd;
            &quot;description&quot;: &quot;desc&quot;&#xd;
          }&#xd;
        }&#xd;
      },&#xd;
      &quot;addresses&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;address_line_1&quot;: &quot;wow&quot;,&#xd;
              &quot;address_line_2&quot;: &quot;wow&quot;,&#xd;
              &quot;address_line_3&quot;: &quot;wow&quot;,&#xd;
              &quot;address_line_4&quot;: &quot;wow&quot;,&#xd;
              &quot;city&quot;: &quot;wow&quot;,&#xd;
              &quot;city_locality&quot;: &quot;cupiditate 4&quot;,&#xd;
              &quot;state_region&quot;: &quot;wow&quot;,&#xd;
              &quot;country&quot;: &quot;Indonesia&quot;,&#xd;
              &quot;postal_code&quot;: &quot;16810&quot;,&#xd;
              &quot;lat&quot;: -57.359989,&#xd;
              &quot;lng&quot;: 54.022906,&#xd;
              &quot;is_current&quot;: false,&#xd;
              &quot;ownership_status&quot;: 2,&#xd;
              &quot;description&quot;: &quot;Best place in the world 14&quot;,&#xd;
              &quot;neighborhood&quot;: &quot;some neighborhood&quot;,&#xd;
              &quot;is_primary&quot;: true,&#xd;
              &quot;label&quot;: &quot;home&quot;,&#xd;
              &quot;is_mailing_address&quot;: true&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;phones&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;number&quot;: &quot;202-555-7341&quot;,&#xd;
              &quot;country_code&quot;: &quot;US&quot;,&#xd;
              &quot;formatted_number&quot;: &quot;202-555-7341&quot;,&#xd;
              &quot;is_primary&quot;: true,&#xd;
              &quot;is_current&quot;: true,&#xd;
              &quot;label&quot;: &quot;home&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;notes&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;note&quot;: &quot;update new&quot;,&#xd;
              &quot;title&quot;: &quot;updated title 2&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;family&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;related_to&quot;: ${idContactFamilyExtractor},&#xd;
              &quot;label&quot;: &quot;some other label&quot;,&#xd;
              &quot;relative_type&quot;: 23&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;sources&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;label&quot;: &quot;KW Website&quot;,&#xd;
              &quot;is_archived&quot;: 0,&#xd;
              &quot;vendor&quot;: &quot;ow&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;emails&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;email&quot;: &quot;ematestemail.28@gmail.com&quot;,&#xd;
              &quot;label&quot;: &quot;work&quot;,&#xd;
              &quot;is_primary&quot;: true,&#xd;
              &quot;is_valid&quot;: true&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;tags&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
           &quot;attributes&quot;: {&#xd;
             &quot;tag&quot;: &quot;noah&quot;,&#xd;
             &quot;color&quot;: &quot;Hoam&quot;&#xd;
           }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;social-accounts&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;social_network_id&quot;: 1,&#xd;
              &quot;identifier&quot;: &quot;example1&quot;,&#xd;
              &quot;url&quot;: &quot;https://www.facebook.com/example2&quot;&#xd;
            }&#xd;
          },&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;social_network_id&quot;: 1,&#xd;
              &quot;identifier&quot;: &quot;example4&quot;,&#xd;
              &quot;url&quot;: &quot;https://www.facebook.com/example1&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;object-custom-fields&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;custom_field&quot;: &quot;4 notes&quot;,&#xd;
              &quot;custom_field_value&quot;: &quot;another&quot;,&#xd;
              &quot;custom_field_tag&quot;: {&#xd;
                &quot;tag&quot;: &quot;blender&quot;,&#xd;
                &quot;color&quot;: &quot;blue&quot;&#xd;
              }&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      }&#xd;
    }&#xd;
  }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49587">201</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="data.type" enabled="true">
            <stringProp name="JSON_PATH">$.data.type</stringProp>
            <stringProp name="EXPECTED_VALUE">contacts</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$..attributes.prefix" enabled="true">
            <stringProp name="JSON_PATH">$..attributes.prefix</stringProp>
            <stringProp name="EXPECTED_VALUE">Mr</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$..attributes.first_name" enabled="true">
            <stringProp name="JSON_PATH">$..attributes.first_name</stringProp>
            <stringProp name="EXPECTED_VALUE">Telly</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$..attributes.middle_name" enabled="true">
            <stringProp name="JSON_PATH">$..attributes.middle_name</stringProp>
            <stringProp name="EXPECTED_VALUE">Senior</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$..attributes.last_name" enabled="true">
            <stringProp name="JSON_PATH">$..attributes.last_name</stringProp>
            <stringProp name="EXPECTED_VALUE">Beier</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$..attributes.preferred_name" enabled="true">
            <stringProp name="JSON_PATH">$..attributes.preferred_name</stringProp>
            <stringProp name="EXPECTED_VALUE">Telly Beier</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$..attributes.legal_name" enabled="true">
            <stringProp name="JSON_PATH">$..attributes.legal_name</stringProp>
            <stringProp name="EXPECTED_VALUE">Telly Senior Beier</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$..attributes.date_of_birth" enabled="true">
            <stringProp name="JSON_PATH">$..attributes.date_of_birth</stringProp>
            <stringProp name="EXPECTED_VALUE">2019-05-25</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$..attributes.motivations" enabled="true">
            <stringProp name="JSON_PATH">$..attributes.motivations</stringProp>
            <stringProp name="EXPECTED_VALUE">[&quot;moving-up&quot;,&quot;downsizing&quot;,&quot;vacation-home&quot;,&quot;first-home&quot;,&quot;schools&quot;,&quot;relocation&quot;,&quot;retirement&quot;,&quot;personal&quot;,&quot;financial&quot;]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[0].type (custom-fields)" enabled="true">
            <stringProp name="JSON_PATH">$.included[0].type</stringProp>
            <stringProp name="EXPECTED_VALUE">custom-fields</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[0].attributes.name (custom-fields)" enabled="true">
            <stringProp name="JSON_PATH">$.included[0].attributes.name</stringProp>
            <stringProp name="EXPECTED_VALUE">available_to_contact_date</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[5].type (addresses)" enabled="true">
            <stringProp name="JSON_PATH">$.included[5].type</stringProp>
            <stringProp name="EXPECTED_VALUE">addresses</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[5].attributes.address_line_1 (addresses)" enabled="true">
            <stringProp name="JSON_PATH">$.included[5].attributes.address_line_1</stringProp>
            <stringProp name="EXPECTED_VALUE">wow</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[5].attributes.address_line_2 (addresses)" enabled="true">
            <stringProp name="JSON_PATH">$.included[5].attributes.address_line_2</stringProp>
            <stringProp name="EXPECTED_VALUE">wow</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[5].attributes.address_line_3 (addresses)" enabled="true">
            <stringProp name="JSON_PATH">$.included[5].attributes.address_line_3</stringProp>
            <stringProp name="EXPECTED_VALUE">wow</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[5].attributes.address_line_4 (addresses)" enabled="true">
            <stringProp name="JSON_PATH">$.included[5].attributes.address_line_4</stringProp>
            <stringProp name="EXPECTED_VALUE">wow</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[6].type (emails)" enabled="true">
            <stringProp name="JSON_PATH">$.included[6].type</stringProp>
            <stringProp name="EXPECTED_VALUE">emails</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[6].attributes.email (emails)" enabled="true">
            <stringProp name="JSON_PATH">$.included[6].attributes.email</stringProp>
            <stringProp name="EXPECTED_VALUE">ematestemail.28@gmail.com</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[6].attributes.overridden (emails)" enabled="true">
            <stringProp name="JSON_PATH">$.included[6].attributes.overridden</stringProp>
            <stringProp name="EXPECTED_VALUE">1</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[6].attributes.label (emails)" enabled="true">
            <stringProp name="JSON_PATH">$.included[6].attributes.label</stringProp>
            <stringProp name="EXPECTED_VALUE">work</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[6].attributes.is_primary (emails)" enabled="true">
            <stringProp name="JSON_PATH">$.included[6].attributes.is_primary</stringProp>
            <stringProp name="EXPECTED_VALUE">true</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[6].attributes.is_valid (emails)" enabled="true">
            <stringProp name="JSON_PATH">$.included[6].attributes.is_valid</stringProp>
            <stringProp name="EXPECTED_VALUE">true</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[7].type (family)" enabled="true">
            <stringProp name="JSON_PATH">$.included[7].type</stringProp>
            <stringProp name="EXPECTED_VALUE">family</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[7].attributes.label (family)" enabled="true">
            <stringProp name="JSON_PATH">$.included[7].attributes.label</stringProp>
            <stringProp name="EXPECTED_VALUE">some other label</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[7].attributes.relative_type (family)" enabled="true">
            <stringProp name="JSON_PATH">$.included[7].attributes.relative_type</stringProp>
            <stringProp name="EXPECTED_VALUE">23</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[8].type (notes)" enabled="true">
            <stringProp name="JSON_PATH">$.included[8].type</stringProp>
            <stringProp name="EXPECTED_VALUE">notes</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[8].attributes.noteable_type (notes)" enabled="true">
            <stringProp name="JSON_PATH">$.included[8].attributes.noteable_type</stringProp>
            <stringProp name="EXPECTED_VALUE">contacts</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[8].attributes.note (notes)" enabled="true">
            <stringProp name="JSON_PATH">$.included[8].attributes.note</stringProp>
            <stringProp name="EXPECTED_VALUE">update new</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[9].type (object-custom-fields)" enabled="true">
            <stringProp name="JSON_PATH">$.included[9].type</stringProp>
            <stringProp name="EXPECTED_VALUE">object-custom-fields</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[9].attributes.object_type (object-custom-fields)" enabled="true">
            <stringProp name="JSON_PATH">$.included[9].attributes.object_type</stringProp>
            <stringProp name="EXPECTED_VALUE">contacts</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[9].attributes.custom_field_type (object-custom-fields)" enabled="true">
            <stringProp name="JSON_PATH">$.included[9].attributes.custom_field_type</stringProp>
            <stringProp name="EXPECTED_VALUE">1</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[9].relationships.custom_field.data.type (object-custom-fields)" enabled="true">
            <stringProp name="JSON_PATH">$.included[9].relationships.custom-field.data.type</stringProp>
            <stringProp name="EXPECTED_VALUE">custom-fields</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[14].type (phones)" enabled="true">
            <stringProp name="JSON_PATH">$.included[14].type</stringProp>
            <stringProp name="EXPECTED_VALUE">phones</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[14].attributes.number (phones)" enabled="true">
            <stringProp name="JSON_PATH">$.included[14].attributes.number</stringProp>
            <stringProp name="EXPECTED_VALUE">202-555-7341</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[14].attributes.formatted_number (phones)" enabled="true">
            <stringProp name="JSON_PATH">$.included[14].attributes.formatted_number</stringProp>
            <stringProp name="EXPECTED_VALUE">+1 202-555-7341</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[14].attributes.label (phones)" enabled="true">
            <stringProp name="JSON_PATH">$.included[14].attributes.label</stringProp>
            <stringProp name="EXPECTED_VALUE">Home</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[15].type (social-accounts)" enabled="true">
            <stringProp name="JSON_PATH">$.included[15].type</stringProp>
            <stringProp name="EXPECTED_VALUE">social-accounts</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[15].attributes.social_network_id (social-accounts)" enabled="true">
            <stringProp name="JSON_PATH">$.included[15].attributes.social_network_id</stringProp>
            <stringProp name="EXPECTED_VALUE">1</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[15].attributes.identifier (social-accounts)" enabled="true">
            <stringProp name="JSON_PATH">$.included[15].attributes.identifier</stringProp>
            <stringProp name="EXPECTED_VALUE">example1</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[15].attributes.url (social-accounts)" enabled="true">
            <stringProp name="JSON_PATH">$.included[15].attributes.url</stringProp>
            <stringProp name="EXPECTED_VALUE">https://www.facebook.com/example2</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[17].type (sources)" enabled="true">
            <stringProp name="JSON_PATH">$.included[17].type</stringProp>
            <stringProp name="EXPECTED_VALUE">sources</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[17].attributes.label (sources)" enabled="true">
            <stringProp name="JSON_PATH">$.included[17].attributes.label</stringProp>
            <stringProp name="EXPECTED_VALUE">KW Website</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[17].attributes.is_archived (sources)" enabled="true">
            <stringProp name="JSON_PATH">$.included[17].attributes.is_archived</stringProp>
            <stringProp name="EXPECTED_VALUE">false</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[18].type (system-metas)" enabled="true">
            <stringProp name="JSON_PATH">$.included[18].type</stringProp>
            <stringProp name="EXPECTED_VALUE">system-metas</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[18].attributes.name (system-metas)" enabled="true">
            <stringProp name="JSON_PATH">$.included[18].attributes.name</stringProp>
            <stringProp name="EXPECTED_VALUE">PieSync</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[18].attributes.variable (system-metas)" enabled="true">
            <stringProp name="JSON_PATH">$.included[18].attributes.variable</stringProp>
            <stringProp name="EXPECTED_VALUE">piesync_trash</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON IdContact Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">idContactExtractor</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">data.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON ID Address Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">idAddressExtractor</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.included[5].id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON ID Email Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">idEmailExtractor</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.included[6].id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON ID Family Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">idFamilyExtractor</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.included[7].id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON ID Phone Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">idPhoneExtractor</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.included[14].id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON ID Note Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">idNoteExtractor</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.included[8].id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON ID SocialAccount Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">idSocialAccountExtractor</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.included[15].id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON ID Source Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">idSourceExtractor</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.included[17].id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP All Health Score detail Request" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts/${idContactExtractor}?withHealthScore=1</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Create Contact Campaign Request" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;data&quot;:{&#xd;
        &quot;attributes&quot;:{&#xd;
            &quot;first_name&quot;:&quot;lead creation&quot;,&#xd;
            &quot;last_name&quot;:&quot;with postman&quot;,&#xd;
            &quot;phase&quot;:2&#xd;
        },&#xd;
        &quot;relationships&quot;:{&#xd;
            &quot;emails&quot;:{&#xd;
                &quot;data&quot;:[&#xd;
                    {&#xd;
                        &quot;attributes&quot;:{&#xd;
                            &quot;email&quot;: &quot;testemail@here.com&quot;,&#xd;
                            &quot;is_primary&quot;: true,&#xd;
                            &quot;is_valid&quot;: true,&#xd;
                            &quot;label&quot;: &quot;personal&quot;&#xd;
                        }&#xd;
                    }&#xd;
                ]&#xd;
            },&#xd;
            &quot;phones&quot;:{&#xd;
                &quot;data&quot;:[&#xd;
                    {&#xd;
                        &quot;attributes&quot;:{&#xd;
                            &quot;country_code&quot;: &quot;US&quot;,&#xd;
                            &quot;formatted_number&quot;: &quot;+18888888888&quot;,&#xd;
                            &quot;is_current&quot;: true,&#xd;
                            &quot;is_primary&quot;: true,&#xd;
                            &quot;label&quot;: &quot;mobile&quot;,&#xd;
                            &quot;number&quot;: &quot;+18888888888&quot;&#xd;
                        }&#xd;
                    }&#xd;
                ]&#xd;
            },&#xd;
            &quot;contact-leads&quot;: {&#xd;
                &quot;data&quot;: &#xd;
                    {&#xd;
                        &quot;attributes&quot;: {&#xd;
                            &quot;campaign_id&quot;: &quot;2726&quot;&#xd;
                        }&#xd;
                    }&#xd;
                &#xd;
            }&#xd;
        }&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49587">201</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="data.type" enabled="true">
            <stringProp name="JSON_PATH">$.data.type</stringProp>
            <stringProp name="EXPECTED_VALUE">contacts</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$..attributes.prefix" enabled="true">
            <stringProp name="JSON_PATH">$..attributes.prefix</stringProp>
            <stringProp name="EXPECTED_VALUE"></stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">true</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$..attributes.first_name" enabled="true">
            <stringProp name="JSON_PATH">$..attributes.first_name</stringProp>
            <stringProp name="EXPECTED_VALUE">lead creation</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$..attributes.middle_name" enabled="true">
            <stringProp name="JSON_PATH">$..attributes.middle_name</stringProp>
            <stringProp name="EXPECTED_VALUE"></stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">true</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$..attributes.last_name" enabled="true">
            <stringProp name="JSON_PATH">$..attributes.last_name</stringProp>
            <stringProp name="EXPECTED_VALUE">with postman</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$..attributes.preferred_name" enabled="true">
            <stringProp name="JSON_PATH">$..attributes.preferred_name</stringProp>
            <stringProp name="EXPECTED_VALUE"></stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">true</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$..attributes.legal_name" enabled="true">
            <stringProp name="JSON_PATH">$..attributes.legal_name</stringProp>
            <stringProp name="EXPECTED_VALUE"></stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">true</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$..attributes.date_of_birth" enabled="true">
            <stringProp name="JSON_PATH">$..attributes.date_of_birth</stringProp>
            <stringProp name="EXPECTED_VALUE"></stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">true</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$..attributes.contact_types" enabled="true">
            <stringProp name="JSON_PATH">$..attributes.contact_types</stringProp>
            <stringProp name="EXPECTED_VALUE">[]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$..attributes.motivations" enabled="true">
            <stringProp name="JSON_PATH">$..attributes.motivations</stringProp>
            <stringProp name="EXPECTED_VALUE">[]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[0].type (emails)" enabled="true">
            <stringProp name="JSON_PATH">$.included[0].type</stringProp>
            <stringProp name="EXPECTED_VALUE">emails</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[0].attributes.email (emails)" enabled="true">
            <stringProp name="JSON_PATH">$.included[0].attributes.email</stringProp>
            <stringProp name="EXPECTED_VALUE">testemail@here.com</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[0].attributes.overridden (emails)" enabled="true">
            <stringProp name="JSON_PATH">$.included[0].attributes.overridden</stringProp>
            <stringProp name="EXPECTED_VALUE">1</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[0].attributes.label (emails)" enabled="true">
            <stringProp name="JSON_PATH">$.included[0].attributes.label</stringProp>
            <stringProp name="EXPECTED_VALUE">personal</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[0].attributes.is_primary (emails)" enabled="true">
            <stringProp name="JSON_PATH">$.included[0].attributes.is_primary</stringProp>
            <stringProp name="EXPECTED_VALUE">true</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[1].type (phones)" enabled="true">
            <stringProp name="JSON_PATH">$.included[1].type</stringProp>
            <stringProp name="EXPECTED_VALUE">phones</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[1].attributes.number (phones)" enabled="true">
            <stringProp name="JSON_PATH">$.included[1].attributes.number</stringProp>
            <stringProp name="EXPECTED_VALUE">+18888888888</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[1].attributes.formatted_number (phones)" enabled="true">
            <stringProp name="JSON_PATH">$.included[1].attributes.formatted_number</stringProp>
            <stringProp name="EXPECTED_VALUE">+1 888-888-8888</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[1].attributes.label (phones)" enabled="true">
            <stringProp name="JSON_PATH">$.included[1].attributes.label</stringProp>
            <stringProp name="EXPECTED_VALUE">Mobile</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[2].type (contact-leads)" enabled="true">
            <stringProp name="JSON_PATH">$.included[2].type</stringProp>
            <stringProp name="EXPECTED_VALUE">contact-leads</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[2].attributes.route_id (contact-leads)" enabled="true">
            <stringProp name="JSON_PATH">$.included[2].attributes.route_id</stringProp>
            <stringProp name="EXPECTED_VALUE"></stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">true</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[2].attributes.description (contact-leads)" enabled="true">
            <stringProp name="JSON_PATH">$.included[2].attributes.description</stringProp>
            <stringProp name="EXPECTED_VALUE"></stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">true</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[2].attributes.campaign_id (contact-leads)" enabled="true">
            <stringProp name="JSON_PATH">$.included[2].attributes.campaign_id</stringProp>
            <stringProp name="EXPECTED_VALUE">2726</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Create Contact Family 1" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;attributes&quot;: {&#xd;
      &quot;prefix&quot;: &quot;Mr&quot;,&#xd;
      &quot;first_name&quot;: &quot;Telly&quot;,&#xd;
      &quot;middle_name&quot;: &quot;Senior&quot;,&#xd;
      &quot;last_name&quot;: &quot;Beier&quot;,&#xd;
      &quot;preferred_name&quot;: &quot;Telly Beier&quot;,&#xd;
      &quot;legal_name&quot;: &quot;Telly Senior Beier&quot;,&#xd;
      &quot;suffix&quot;: &quot;I&quot;,&#xd;
      &quot;date_of_birth&quot;: &quot;2019-05-25&quot;,&#xd;
      &quot;timeframe&quot;: &quot;1 to 12 months&quot;,&#xd;
      &quot;contact_types&quot;: [&#xd;
        &quot;buyer&quot;,&#xd;
        &quot;seller&quot;,&#xd;
        &quot;vendor&quot;,&#xd;
        &quot;investor&quot;,&#xd;
        &quot;agent&quot;,&#xd;
        &quot;lender&quot;,&#xd;
        &quot;past clients&quot;&#xd;
      ],&#xd;
      &quot;motivations&quot;: [&#xd;
        &quot;moving-up&quot;,&#xd;
        &quot;downsizing&quot;,&#xd;
        &quot;vacation-home&quot;,&#xd;
        &quot;first-home&quot;,&#xd;
        &quot;schools&quot;,&#xd;
        &quot;relocation&quot;,&#xd;
        &quot;retirement&quot;,&#xd;
        &quot;personal&quot;,&#xd;
        &quot;financial&quot;&#xd;
      ],&#xd;
      &quot;phase&quot;: 1,&#xd;
      &quot;primary_motivation_note&quot;: &quot;Telly.Beier&apos;s primary note&quot;,&#xd;
      &quot;is_pre_approved&quot;: true,&#xd;
      &quot;is_primary&quot;: true,&#xd;
      &quot;status&quot;: 1,&#xd;
      &quot;stage&quot;: &quot;prospect&quot;,&#xd;
      &quot;lead_type&quot;: &quot;rent&quot;,&#xd;
      &quot;is_starred&quot;: false,&#xd;
      &quot;available_to_contact_date&quot;: &quot;2019-05-25&quot;,&#xd;
      &quot;pre_approved_amount&quot;: 6,&#xd;
      &quot;number_in_household&quot;: 13,&#xd;
      &quot;background_info&quot;: &quot;bg info&quot;,&#xd;
      &quot;profession_title&quot;: &quot;Teller&quot;,&#xd;
      &quot;profession_department&quot;: &quot;Logistics&quot;,&#xd;
      &quot;is_connected&quot;: true,&#xd;
	 &quot;system-metas&quot;: [&#xd;
        {&#xd;
          &quot;id&quot;: 0,&#xd;
          &quot;name&quot;: &quot;piesync&quot;,&#xd;
          &quot;variable&quot;: &quot;piesync_trash&quot;,&#xd;
          &quot;type&quot;: &quot;1&quot;,&#xd;
          &quot;value&quot;: &quot;true&quot;&#xd;
        }&#xd;
      ],&#xd;
      &quot;team_id&quot;: 1,&#xd;
      &quot;primary_address&quot;: &quot;address 1&quot;,&#xd;
      &quot;language&quot;: &quot;en&quot;,&#xd;
      &quot;initial_contact_date&quot;: &quot;2017-06-23 20:27:16&quot;&#xd;
    },&#xd;
    &quot;relationships&quot;: {&#xd;
      &quot;contact-leads&quot;: {&#xd;
        &quot;data&quot;: {&#xd;
          &quot;id&quot;: 12,&#xd;
          &quot;attributes&quot;: {&#xd;
            &quot;route_id&quot;: 3,&#xd;
            &quot;is_buyer&quot;: 1,&#xd;
            &quot;is_team&quot;: 1,&#xd;
            &quot;seller_listing_address&quot;: &quot;917 4th St. Millville, NJ 08332&quot;,&#xd;
            &quot;buyer_price_min&quot;: 71000,&#xd;
            &quot;buyer_price_max&quot;: 121000,&#xd;
            &quot;is_assigned&quot;: 1,&#xd;
            &quot;assignment&quot;: &quot;as&quot;,&#xd;
            &quot;leader_id&quot;: 13,&#xd;
            &quot;status&quot;: 10,&#xd;
            &quot;preferred_contact_by&quot;: &quot;email&quot;,&#xd;
            &quot;about&quot;: &quot;about&quot;,&#xd;
            &quot;description&quot;: &quot;desc&quot;&#xd;
          }&#xd;
        }&#xd;
      },&#xd;
      &quot;addresses&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;address_line_1&quot;: &quot;wow&quot;,&#xd;
              &quot;address_line_2&quot;: &quot;wow&quot;,&#xd;
              &quot;address_line_3&quot;: &quot;wow&quot;,&#xd;
              &quot;address_line_4&quot;: &quot;wow&quot;,&#xd;
              &quot;city&quot;: &quot;wow&quot;,&#xd;
              &quot;city_locality&quot;: &quot;cupiditate 4&quot;,&#xd;
              &quot;state_region&quot;: &quot;wow&quot;,&#xd;
              &quot;country&quot;: &quot;Indonesia&quot;,&#xd;
              &quot;postal_code&quot;: &quot;16810&quot;,&#xd;
              &quot;lat&quot;: -57.359989,&#xd;
              &quot;lng&quot;: 54.022906,&#xd;
              &quot;is_current&quot;: false,&#xd;
              &quot;ownership_status&quot;: 2,&#xd;
              &quot;description&quot;: &quot;Best place in the world 14&quot;,&#xd;
              &quot;neighborhood&quot;: &quot;some neighborhood&quot;,&#xd;
              &quot;is_primary&quot;: true,&#xd;
              &quot;label&quot;: &quot;home&quot;,&#xd;
              &quot;is_mailing_address&quot;: true&#xd;
            }&#xd;
          },&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;address_line_1&quot;: &quot;232&quot;,&#xd;
              &quot;address_line_2&quot;: &quot;wow&quot;,&#xd;
              &quot;address_line_3&quot;: &quot;wow&quot;,&#xd;
              &quot;address_line_4&quot;: &quot;wow&quot;,&#xd;
              &quot;city&quot;: &quot;wow&quot;,&#xd;
              &quot;city_locality&quot;: &quot;cupiditate 4&quot;,&#xd;
              &quot;state_region&quot;: &quot;wow&quot;,&#xd;
              &quot;country&quot;: &quot;Indonesia&quot;,&#xd;
              &quot;postal_code&quot;: &quot;16810&quot;,&#xd;
              &quot;lat&quot;: -57.359989,&#xd;
              &quot;lng&quot;: 54.022906,&#xd;
              &quot;is_current&quot;: false,&#xd;
              &quot;ownership_status&quot;: 2,&#xd;
              &quot;description&quot;: &quot;Best place in the world 14&quot;,&#xd;
              &quot;neighborhood&quot;: &quot;some neighborhood&quot;,&#xd;
              &quot;is_primary&quot;: true,&#xd;
              &quot;label&quot;: &quot;home&quot;,&#xd;
              &quot;is_mailing_address&quot;: true&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;phones&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;number&quot;: &quot;202-555-7341&quot;,&#xd;
              &quot;country_code&quot;: &quot;US&quot;,&#xd;
              &quot;formatted_number&quot;: &quot;202-555-7341&quot;,&#xd;
              &quot;is_primary&quot;: true,&#xd;
              &quot;is_current&quot;: true,&#xd;
              &quot;label&quot;: &quot;home&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;notes&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;note&quot;: &quot;update new&quot;,&#xd;
              &quot;title&quot;: &quot;updated title 2&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;sources&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;label&quot;: &quot;KW Website&quot;,&#xd;
              &quot;is_archived&quot;: 0,&#xd;
              &quot;vendor&quot;: &quot;ow&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;social-accounts&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;social_network_id&quot;: 1,&#xd;
              &quot;identifier&quot;: &quot;example1&quot;,&#xd;
              &quot;url&quot;: &quot;https://www.facebook.com/example2&quot;&#xd;
            }&#xd;
          },&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;social_network_id&quot;: 1,&#xd;
              &quot;identifier&quot;: &quot;example4&quot;,&#xd;
              &quot;url&quot;: &quot;https://www.facebook.com/example1&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;object-custom-fields&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;custom_field&quot;: &quot;4 notes&quot;,&#xd;
              &quot;custom_field_value&quot;: &quot;another&quot;,&#xd;
              &quot;custom_field_tag&quot;: {&#xd;
                &quot;tag&quot;: &quot;blender&quot;,&#xd;
                &quot;color&quot;: &quot;blue&quot;&#xd;
              }&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      }&#xd;
    }&#xd;
  }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49587">201</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Family Extractor1" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">idContactFamilyExtractor1</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">data.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Create lead  Contact Request" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;attributes&quot;: {&#xd;
      &quot;prefix&quot;: &quot;Mr&quot;,&#xd;
      &quot;first_name&quot;: &quot;Telly&quot;,&#xd;
      &quot;middle_name&quot;: &quot;Senior&quot;,&#xd;
      &quot;last_name&quot;: &quot;Beier&quot;,&#xd;
      &quot;preferred_name&quot;: &quot;Telly Beier&quot;,&#xd;
      &quot;legal_name&quot;: &quot;Telly Senior Beier&quot;,&#xd;
      &quot;suffix&quot;: &quot;I&quot;,&#xd;
      &quot;date_of_birth&quot;: &quot;2019-05-25&quot;,&#xd;
      &quot;timeframe&quot;: &quot;1 to 12 months&quot;,&#xd;
      &quot;contact_types&quot;: [&#xd;
        &quot;buyer&quot;,&#xd;
        &quot;seller&quot;,&#xd;
        &quot;vendor&quot;,&#xd;
        &quot;investor&quot;,&#xd;
        &quot;agent&quot;,&#xd;
        &quot;lender&quot;,&#xd;
        &quot;past clients&quot;&#xd;
      ],&#xd;
      &quot;motivations&quot;: [&#xd;
        &quot;moving-up&quot;,&#xd;
        &quot;downsizing&quot;,&#xd;
        &quot;vacation-home&quot;,&#xd;
        &quot;first-home&quot;,&#xd;
        &quot;schools&quot;,&#xd;
        &quot;relocation&quot;,&#xd;
        &quot;retirement&quot;,&#xd;
        &quot;personal&quot;,&#xd;
        &quot;financial&quot;&#xd;
      ],&#xd;
      &quot;phase&quot;: 2,&#xd;
      &quot;primary_motivation_note&quot;: &quot;Telly.Beier&apos;s primary note&quot;,&#xd;
      &quot;is_pre_approved&quot;: true,&#xd;
      &quot;is_primary&quot;: true,&#xd;
      &quot;status&quot;: 1,&#xd;
      &quot;stage&quot;: &quot;prospect&quot;,&#xd;
      &quot;lead_type&quot;: &quot;rent&quot;,&#xd;
      &quot;is_starred&quot;: false,&#xd;
      &quot;available_to_contact_date&quot;: &quot;2019-05-25&quot;,&#xd;
      &quot;pre_approved_amount&quot;: 6,&#xd;
      &quot;number_in_household&quot;: 13,&#xd;
      &quot;background_info&quot;: &quot;bg info&quot;,&#xd;
      &quot;profession_title&quot;: &quot;Teller&quot;,&#xd;
      &quot;profession_department&quot;: &quot;Logistics&quot;,&#xd;
      &quot;is_connected&quot;: true,&#xd;
	 &quot;system-metas&quot;: [&#xd;
        {&#xd;
          &quot;id&quot;: 0,&#xd;
          &quot;name&quot;: &quot;piesync&quot;,&#xd;
          &quot;variable&quot;: &quot;piesync_trash&quot;,&#xd;
          &quot;type&quot;: &quot;1&quot;,&#xd;
          &quot;value&quot;: &quot;true&quot;&#xd;
        }&#xd;
      ],&#xd;
      &quot;team_id&quot;: 1,&#xd;
      &quot;primary_address&quot;: &quot;address 1&quot;,&#xd;
      &quot;language&quot;: &quot;en&quot;,&#xd;
      &quot;initial_contact_date&quot;: &quot;2017-06-23 20:27:16&quot;&#xd;
    },&#xd;
    &quot;relationships&quot;: {&#xd;
      &quot;contact-leads&quot;: {&#xd;
        &quot;data&quot;: {&#xd;
          &quot;id&quot;: 12,&#xd;
          &quot;attributes&quot;: {&#xd;
            &quot;route_id&quot;: 3,&#xd;
            &quot;is_buyer&quot;: 1,&#xd;
            &quot;is_team&quot;: 1,&#xd;
            &quot;seller_listing_address&quot;: &quot;917 4th St. Millville, NJ 08332&quot;,&#xd;
            &quot;buyer_price_min&quot;: 71000,&#xd;
            &quot;buyer_price_max&quot;: 121000,&#xd;
            &quot;is_assigned&quot;: 1,&#xd;
            &quot;assignment&quot;: &quot;as&quot;,&#xd;
            &quot;leader_id&quot;: 13,&#xd;
            &quot;status&quot;: 10,&#xd;
            &quot;preferred_contact_by&quot;: &quot;email&quot;,&#xd;
            &quot;about&quot;: &quot;about&quot;,&#xd;
            &quot;description&quot;: &quot;desc&quot;&#xd;
          }&#xd;
        }&#xd;
      },&#xd;
      &quot;addresses&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;address_line_1&quot;: &quot;wow&quot;,&#xd;
              &quot;address_line_2&quot;: &quot;wow&quot;,&#xd;
              &quot;address_line_3&quot;: &quot;wow&quot;,&#xd;
              &quot;address_line_4&quot;: &quot;wow&quot;,&#xd;
              &quot;city&quot;: &quot;wow&quot;,&#xd;
              &quot;city_locality&quot;: &quot;cupiditate 4&quot;,&#xd;
              &quot;state_region&quot;: &quot;wow&quot;,&#xd;
              &quot;country&quot;: &quot;Indonesia&quot;,&#xd;
              &quot;postal_code&quot;: &quot;16810&quot;,&#xd;
              &quot;lat&quot;: -57.359989,&#xd;
              &quot;lng&quot;: 54.022906,&#xd;
              &quot;is_current&quot;: false,&#xd;
              &quot;ownership_status&quot;: 2,&#xd;
              &quot;description&quot;: &quot;Best place in the world 14&quot;,&#xd;
              &quot;neighborhood&quot;: &quot;some neighborhood&quot;,&#xd;
              &quot;is_primary&quot;: true,&#xd;
              &quot;label&quot;: &quot;home&quot;,&#xd;
              &quot;is_mailing_address&quot;: true&#xd;
            }&#xd;
          },&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;address_line_1&quot;: &quot;232&quot;,&#xd;
              &quot;address_line_2&quot;: &quot;wow&quot;,&#xd;
              &quot;address_line_3&quot;: &quot;wow&quot;,&#xd;
              &quot;address_line_4&quot;: &quot;wow&quot;,&#xd;
              &quot;city&quot;: &quot;wow&quot;,&#xd;
              &quot;city_locality&quot;: &quot;cupiditate 4&quot;,&#xd;
              &quot;state_region&quot;: &quot;wow&quot;,&#xd;
              &quot;country&quot;: &quot;Indonesia&quot;,&#xd;
              &quot;postal_code&quot;: &quot;16810&quot;,&#xd;
              &quot;lat&quot;: -57.359989,&#xd;
              &quot;lng&quot;: 54.022906,&#xd;
              &quot;is_current&quot;: false,&#xd;
              &quot;ownership_status&quot;: 2,&#xd;
              &quot;description&quot;: &quot;Best place in the world 14&quot;,&#xd;
              &quot;neighborhood&quot;: &quot;some neighborhood&quot;,&#xd;
              &quot;is_primary&quot;: true,&#xd;
              &quot;label&quot;: &quot;home&quot;,&#xd;
              &quot;is_mailing_address&quot;: true&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;phones&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;number&quot;: &quot;202-555-7341&quot;,&#xd;
              &quot;country_code&quot;: &quot;US&quot;,&#xd;
              &quot;formatted_number&quot;: &quot;202-555-7341&quot;,&#xd;
              &quot;is_primary&quot;: true,&#xd;
              &quot;is_current&quot;: true,&#xd;
              &quot;label&quot;: &quot;home&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;notes&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;note&quot;: &quot;update new&quot;,&#xd;
              &quot;title&quot;: &quot;updated title 2&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;family&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;related_to&quot;: ${idContactFamilyExtractor1},&#xd;
              &quot;label&quot;: &quot;some other label&quot;,&#xd;
              &quot;relative_type&quot;: 1&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;sources&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;label&quot;: &quot;KW Website&quot;,&#xd;
              &quot;is_archived&quot;: 0,&#xd;
              &quot;vendor&quot;: &quot;ow&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;emails&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;email&quot;: &quot;ematestemail.28@gmail.com&quot;,&#xd;
              &quot;label&quot;: &quot;work&quot;,&#xd;
              &quot;is_primary&quot;: true,&#xd;
              &quot;is_valid&quot;: true&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;social-accounts&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;social_network_id&quot;: 1,&#xd;
              &quot;identifier&quot;: &quot;example1&quot;,&#xd;
              &quot;url&quot;: &quot;https://www.facebook.com/example2&quot;&#xd;
            }&#xd;
          },&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;social_network_id&quot;: 1,&#xd;
              &quot;identifier&quot;: &quot;example4&quot;,&#xd;
              &quot;url&quot;: &quot;https://www.facebook.com/example1&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;object-custom-fields&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;custom_field&quot;: &quot;4 notes&quot;,&#xd;
              &quot;custom_field_value&quot;: &quot;another&quot;,&#xd;
              &quot;custom_field_tag&quot;: {&#xd;
                &quot;tag&quot;: &quot;blender&quot;,&#xd;
                &quot;color&quot;: &quot;blue&quot;&#xd;
              }&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      }&#xd;
    }&#xd;
  }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49587">201</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON LeadContact Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">idLeadContactExtractor</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">data.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="data.type" enabled="true">
            <stringProp name="JSON_PATH">$.data.type</stringProp>
            <stringProp name="EXPECTED_VALUE">contacts</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$..attributes.prefix" enabled="true">
            <stringProp name="JSON_PATH">$..attributes.prefix</stringProp>
            <stringProp name="EXPECTED_VALUE">Mr</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$..attributes.first_name" enabled="true">
            <stringProp name="JSON_PATH">$..attributes.first_name</stringProp>
            <stringProp name="EXPECTED_VALUE">Telly</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$..attributes.middle_name" enabled="true">
            <stringProp name="JSON_PATH">$..attributes.middle_name</stringProp>
            <stringProp name="EXPECTED_VALUE">Senior</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$..attributes.last_name" enabled="true">
            <stringProp name="JSON_PATH">$..attributes.last_name</stringProp>
            <stringProp name="EXPECTED_VALUE">Beier</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$..attributes.preferred_name" enabled="true">
            <stringProp name="JSON_PATH">$..attributes.preferred_name</stringProp>
            <stringProp name="EXPECTED_VALUE">Telly Beier</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$..attributes.legal_name" enabled="true">
            <stringProp name="JSON_PATH">$..attributes.legal_name</stringProp>
            <stringProp name="EXPECTED_VALUE">Telly Senior Beier</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$..attributes.date_of_birth" enabled="true">
            <stringProp name="JSON_PATH">$..attributes.date_of_birth</stringProp>
            <stringProp name="EXPECTED_VALUE">2019-05-25</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$..attributes.motivations" enabled="true">
            <stringProp name="JSON_PATH">$..attributes.motivations</stringProp>
            <stringProp name="EXPECTED_VALUE">[&quot;moving-up&quot;,&quot;downsizing&quot;,&quot;vacation-home&quot;,&quot;first-home&quot;,&quot;schools&quot;,&quot;relocation&quot;,&quot;retirement&quot;,&quot;personal&quot;,&quot;financial&quot;]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[0].type (custom-fields)" enabled="true">
            <stringProp name="JSON_PATH">$.included[0].type</stringProp>
            <stringProp name="EXPECTED_VALUE">custom-fields</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[0].attributes.name (custom-fields)" enabled="true">
            <stringProp name="JSON_PATH">$.included[0].attributes.name</stringProp>
            <stringProp name="EXPECTED_VALUE">available_to_contact_date</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[5].type (addresses)" enabled="true">
            <stringProp name="JSON_PATH">$.included[5].type</stringProp>
            <stringProp name="EXPECTED_VALUE">addresses</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[5].attributes.address_line_1 (addresses)" enabled="true">
            <stringProp name="JSON_PATH">$.included[5].attributes.address_line_1</stringProp>
            <stringProp name="EXPECTED_VALUE">wow</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[5].attributes.address_line_2 (addresses)" enabled="true">
            <stringProp name="JSON_PATH">$.included[5].attributes.address_line_2</stringProp>
            <stringProp name="EXPECTED_VALUE">wow</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[5].attributes.address_line_3 (addresses)" enabled="true">
            <stringProp name="JSON_PATH">$.included[5].attributes.address_line_3</stringProp>
            <stringProp name="EXPECTED_VALUE">wow</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[5].attributes.address_line_4 (addresses)" enabled="true">
            <stringProp name="JSON_PATH">$.included[5].attributes.address_line_4</stringProp>
            <stringProp name="EXPECTED_VALUE">wow</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[7].type (emails)" enabled="true">
            <stringProp name="JSON_PATH">$.included[7].type</stringProp>
            <stringProp name="EXPECTED_VALUE">emails</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[7].attributes.email (emails)" enabled="true">
            <stringProp name="JSON_PATH">$.included[7].attributes.email</stringProp>
            <stringProp name="EXPECTED_VALUE">ematestemail.28@gmail.com</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[7].attributes.overridden (emails)" enabled="true">
            <stringProp name="JSON_PATH">$.included[7].attributes.overridden</stringProp>
            <stringProp name="EXPECTED_VALUE">1</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[7].attributes.label (emails)" enabled="true">
            <stringProp name="JSON_PATH">$.included[7].attributes.label</stringProp>
            <stringProp name="EXPECTED_VALUE">work</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[7].attributes.is_primary (emails)" enabled="true">
            <stringProp name="JSON_PATH">$.included[7].attributes.is_primary</stringProp>
            <stringProp name="EXPECTED_VALUE">true</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[7].attributes.is_valid (emails)" enabled="true">
            <stringProp name="JSON_PATH">$.included[7].attributes.is_valid</stringProp>
            <stringProp name="EXPECTED_VALUE">true</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[8].type (family)" enabled="true">
            <stringProp name="JSON_PATH">$.included[8].type</stringProp>
            <stringProp name="EXPECTED_VALUE">family</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[8].attributes.label (family)" enabled="true">
            <stringProp name="JSON_PATH">$.included[8].attributes.label</stringProp>
            <stringProp name="EXPECTED_VALUE">some other label</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[8].attributes.relative_type (family)" enabled="true">
            <stringProp name="JSON_PATH">$.included[8].attributes.relative_type</stringProp>
            <stringProp name="EXPECTED_VALUE">1</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[9].type (notes)" enabled="true">
            <stringProp name="JSON_PATH">$.included[9].type</stringProp>
            <stringProp name="EXPECTED_VALUE">notes</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[9].attributes.noteable_type (notes)" enabled="true">
            <stringProp name="JSON_PATH">$.included[9].attributes.noteable_type</stringProp>
            <stringProp name="EXPECTED_VALUE">contacts</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[9].attributes.note (notes)" enabled="true">
            <stringProp name="JSON_PATH">$.included[9].attributes.note</stringProp>
            <stringProp name="EXPECTED_VALUE">update new</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[10].type (object-custom-fields)" enabled="true">
            <stringProp name="JSON_PATH">$.included[10].type</stringProp>
            <stringProp name="EXPECTED_VALUE">object-custom-fields</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[10].attributes.object_type (object-custom-fields)" enabled="true">
            <stringProp name="JSON_PATH">$.included[10].attributes.object_type</stringProp>
            <stringProp name="EXPECTED_VALUE">contacts</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[10].attributes.custom_field_type (object-custom-fields)" enabled="true">
            <stringProp name="JSON_PATH">$.included[10].attributes.custom_field_type</stringProp>
            <stringProp name="EXPECTED_VALUE">1</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[10].relationships.custom_field.data.type (object-custom-fields)" enabled="true">
            <stringProp name="JSON_PATH">$.included[10].relationships.custom-field.data.type</stringProp>
            <stringProp name="EXPECTED_VALUE">custom-fields</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[15].type (phones)" enabled="true">
            <stringProp name="JSON_PATH">$.included[15].type</stringProp>
            <stringProp name="EXPECTED_VALUE">phones</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[15].attributes.number (phones)" enabled="true">
            <stringProp name="JSON_PATH">$.included[15].attributes.number</stringProp>
            <stringProp name="EXPECTED_VALUE">202-555-7341</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[15].attributes.formatted_number (phones)" enabled="true">
            <stringProp name="JSON_PATH">$.included[15].attributes.formatted_number</stringProp>
            <stringProp name="EXPECTED_VALUE">+1 202-555-7341</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[15].attributes.label (phones)" enabled="true">
            <stringProp name="JSON_PATH">$.included[15].attributes.label</stringProp>
            <stringProp name="EXPECTED_VALUE">Home</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[16].type (social-accounts)" enabled="true">
            <stringProp name="JSON_PATH">$.included[16].type</stringProp>
            <stringProp name="EXPECTED_VALUE">social-accounts</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[16].attributes.social_network_id (social-accounts)" enabled="true">
            <stringProp name="JSON_PATH">$.included[16].attributes.social_network_id</stringProp>
            <stringProp name="EXPECTED_VALUE">1</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[16].attributes.identifier (social-accounts)" enabled="true">
            <stringProp name="JSON_PATH">$.included[16].attributes.identifier</stringProp>
            <stringProp name="EXPECTED_VALUE">example1</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[16].attributes.url (social-accounts)" enabled="true">
            <stringProp name="JSON_PATH">$.included[16].attributes.url</stringProp>
            <stringProp name="EXPECTED_VALUE">https://www.facebook.com/example2</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[18].type (sources)" enabled="true">
            <stringProp name="JSON_PATH">$.included[18].type</stringProp>
            <stringProp name="EXPECTED_VALUE">sources</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[18].attributes.label (sources)" enabled="true">
            <stringProp name="JSON_PATH">$.included[18].attributes.label</stringProp>
            <stringProp name="EXPECTED_VALUE">KW Website</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[18].attributes.is_archived (sources)" enabled="true">
            <stringProp name="JSON_PATH">$.included[18].attributes.is_archived</stringProp>
            <stringProp name="EXPECTED_VALUE">false</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[19].type (system-metas)" enabled="true">
            <stringProp name="JSON_PATH">$.included[19].type</stringProp>
            <stringProp name="EXPECTED_VALUE">system-metas</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[19].attributes.name (system-metas)" enabled="true">
            <stringProp name="JSON_PATH">$.included[19].attributes.name</stringProp>
            <stringProp name="EXPECTED_VALUE">PieSync</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[19].attributes.variable (system-metas)" enabled="true">
            <stringProp name="JSON_PATH">$.included[19].attributes.variable</stringProp>
            <stringProp name="EXPECTED_VALUE">piesync_trash</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[20].type (contact-leads)" enabled="true">
            <stringProp name="JSON_PATH">$.included[20].type</stringProp>
            <stringProp name="EXPECTED_VALUE">contact-leads</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[20].attributes.route_id (contact-leads)" enabled="true">
            <stringProp name="JSON_PATH">$.included[20].attributes.route_id</stringProp>
            <stringProp name="EXPECTED_VALUE">3</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[20].attributes.description (contact-leads)" enabled="true">
            <stringProp name="JSON_PATH">$.included[20].attributes.description</stringProp>
            <stringProp name="EXPECTED_VALUE">desc</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON ID Address Extractor1" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">idAddressExtractor1</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.included[5].id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON ID Email Extractor1" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">idEmailExtractor1</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.included[7].id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON ID Family Extractor1" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">idFamilyExtractor1</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.included[8].id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON ID Phone Extractor1" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">idPhoneExtractor1</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.included[15].id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON ID Note Extractor1" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">idNoteExtractor1</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.included[9].id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON ID SocialAccount Extractor1" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">idSocialAccountExtractor1</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.included[16].id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON ID Source Extractor1" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">idSourceExtractor1</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.included[18].id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Show Contact Request" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts/${idContactExtractor}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Support Recruits Request" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts?hasRecruits=1</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Support Contact Recruits Request" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts?hasRecruits=1&amp;include=contact-recruit</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Support Contact Recruits Request 1" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts?sort=last_name&amp;include=tags,company,object-custom-fields,phones,addresses,contact-recruit&amp;page[offset]=0&amp;page[limit]=30&amp;filter[phase][!is]=null&amp;hasRecruits=1&amp;filter[phase][%21is]=null</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Support Contact Recruits Request 2" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts?sort=last_name&amp;include=tags,company,object-custom-fields,phones,addresses,contact-recruit&amp;page[offset]=0&amp;page[limit]=30&amp;filter[last_name][like]=Drajat&amp;filter[phase][!is]=null&amp;hasRecruits=1&amp;filter[phase][%21is]=null</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Set Profile Photo" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
&quot;data&quot;: {&#xd;
  &quot;attributes&quot;: {&#xd;
    &quot;url&quot;: &quot;https://images.pexels.com/photos/67636/rose-blue-flower-rose-blooms-67636.jpeg?auto=compress&amp;cs=tinysrgb&amp;dpr=2&amp;h=650&amp;w=940&quot;&#xd;
  }&#xd;
}&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts/${idContactExtractor}/profile-photo</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Export Contacts 1" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts/export/contacts</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49588">202</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Export Contacts 2" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts/export/labels</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49588">202</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Update Contact Request" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;attributes&quot;: {&#xd;
      &quot;prefix&quot;: &quot;Ms&quot;,&#xd;
      &quot;first_name&quot;: &quot;Telly test&quot;,&#xd;
      &quot;middle_name&quot;: &quot;Senior test&quot;,&#xd;
      &quot;last_name&quot;: &quot;Beier test&quot;,&#xd;
      &quot;preferred_name&quot;: &quot;Telly Beier test&quot;,&#xd;
      &quot;legal_name&quot;: &quot;Telly Senior Beier test&quot;,&#xd;
      &quot;suffix&quot;: &quot;I&quot;,&#xd;
      &quot;date_of_birth&quot;: &quot;2018-05-25&quot;,&#xd;
      &quot;timeframe&quot;: &quot;1 to 12 months&quot;,&#xd;
      &quot;contact_types&quot;: [&#xd;
        &quot;buyer&quot;,&#xd;
        &quot;seller&quot;&#xd;
      ],&#xd;
      &quot;motivations&quot;: [&#xd;
        &quot;moving-up&quot;,&#xd;
        &quot;downsizing&quot;&#xd;
      ],&#xd;
      &quot;phase&quot;: 1,&#xd;
      &quot;primary_motivation_note&quot;: &quot;Telly.Beier&apos;s primary note&quot;,&#xd;
      &quot;is_pre_approved&quot;: true,&#xd;
      &quot;is_primary&quot;: true,&#xd;
      &quot;status&quot;: 1,&#xd;
      &quot;stage&quot;: &quot;prospect&quot;,&#xd;
      &quot;lead_type&quot;: &quot;rent&quot;,&#xd;
      &quot;is_starred&quot;: false,&#xd;
      &quot;available_to_contact_date&quot;: &quot;2019-05-25&quot;,&#xd;
      &quot;pre_approved_amount&quot;: 6,&#xd;
      &quot;number_in_household&quot;: 13,&#xd;
      &quot;background_info&quot;: &quot;bg info&quot;,&#xd;
      &quot;profession_title&quot;: &quot;Teller&quot;,&#xd;
      &quot;profession_department&quot;: &quot;Logistics&quot;,&#xd;
      &quot;is_connected&quot;: true,&#xd;
	 &quot;system-metas&quot;: [&#xd;
        {&#xd;
          &quot;id&quot;: 0,&#xd;
          &quot;name&quot;: &quot;piesync&quot;,&#xd;
          &quot;variable&quot;: &quot;piesync_trash&quot;,&#xd;
          &quot;type&quot;: &quot;1&quot;,&#xd;
          &quot;value&quot;: &quot;true&quot;&#xd;
        }&#xd;
      ],&#xd;
      &quot;team_id&quot;: 1,&#xd;
      &quot;primary_address&quot;: &quot;address 1&quot;,&#xd;
      &quot;language&quot;: &quot;en&quot;,&#xd;
      &quot;initial_contact_date&quot;: &quot;2017-06-23 20:27:16&quot;&#xd;
    },&#xd;
    &quot;relationships&quot;: {&#xd;
      &quot;contact-leads&quot;: {&#xd;
        &quot;data&quot;: {&#xd;
          &quot;id&quot;: 12,&#xd;
          &quot;attributes&quot;: {&#xd;
            &quot;route_id&quot;: 3,&#xd;
            &quot;is_buyer&quot;: 1,&#xd;
            &quot;is_team&quot;: 1,&#xd;
            &quot;seller_listing_address&quot;: &quot;917 4th St. Millville, NJ 08332&quot;,&#xd;
            &quot;buyer_price_min&quot;: 71000,&#xd;
            &quot;buyer_price_max&quot;: 121000,&#xd;
            &quot;is_assigned&quot;: 1,&#xd;
            &quot;assignment&quot;: &quot;as&quot;,&#xd;
            &quot;leader_id&quot;: 13,&#xd;
            &quot;status&quot;: 10,&#xd;
            &quot;preferred_contact_by&quot;: &quot;email&quot;,&#xd;
            &quot;about&quot;: &quot;about&quot;,&#xd;
            &quot;description&quot;: &quot;desc&quot;&#xd;
          }&#xd;
        }&#xd;
      },&#xd;
      &quot;addresses&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
          	&quot;id&quot;:&quot;${idAddressExtractor}&quot;,&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;address_line_1&quot;: &quot;wow test&quot;,&#xd;
              &quot;address_line_2&quot;: &quot;wow test&quot;,&#xd;
              &quot;address_line_3&quot;: &quot;wow test&quot;,&#xd;
              &quot;address_line_4&quot;: &quot;wow test&quot;,&#xd;
              &quot;city&quot;: &quot;wow&quot;,&#xd;
              &quot;city_locality&quot;: &quot;cupiditate 4&quot;,&#xd;
              &quot;state_region&quot;: &quot;wow&quot;,&#xd;
              &quot;country&quot;: &quot;Indonesia&quot;,&#xd;
              &quot;postal_code&quot;: &quot;16810&quot;,&#xd;
              &quot;lat&quot;: -57.359989,&#xd;
              &quot;lng&quot;: 54.022906,&#xd;
              &quot;is_current&quot;: false,&#xd;
              &quot;ownership_status&quot;: 2,&#xd;
              &quot;description&quot;: &quot;Best place in the world 14&quot;,&#xd;
              &quot;neighborhood&quot;: &quot;some neighborhood&quot;,&#xd;
              &quot;is_primary&quot;: true,&#xd;
              &quot;label&quot;: &quot;home&quot;,&#xd;
              &quot;is_mailing_address&quot;: true&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;phones&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
          	&quot;id&quot;:&quot;${idPhoneExtractor}&quot;,&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;number&quot;: &quot;202-555-9999&quot;,&#xd;
              &quot;country_code&quot;: &quot;US&quot;,&#xd;
              &quot;formatted_number&quot;: &quot;202-555-9999&quot;,&#xd;
              &quot;is_primary&quot;: true,&#xd;
              &quot;is_current&quot;: true,&#xd;
              &quot;label&quot;: &quot;Work&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;notes&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
          	&quot;id&quot;:&quot;${idNoteExtractor}&quot;,&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;note&quot;: &quot;update new test&quot;,&#xd;
              &quot;title&quot;: &quot;updated title 2&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;family&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;id&quot;:&quot;${idFamilyExtractor}&quot;,	&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;related_to&quot;: ${idContactFamilyExtractor},&#xd;
              &quot;label&quot;: &quot;some other label test&quot;,&#xd;
              &quot;relative_type&quot;: 23&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;sources&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
          	&quot;id&quot;:&quot;${idSourceExtractor}&quot;,&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;label&quot;: &quot;KW Website test&quot;,&#xd;
              &quot;is_archived&quot;: 1,&#xd;
              &quot;vendor&quot;: &quot;ow&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;emails&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
          	&quot;id&quot;:&quot;${idEmailExtractor}&quot;,&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;email&quot;: &quot;ematestemail.30@gmail.com&quot;,&#xd;
              &quot;label&quot;: &quot;work test&quot;,&#xd;
              &quot;is_primary&quot;: true,&#xd;
              &quot;is_valid&quot;: true&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;social-accounts&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;id&quot;:&quot;${idSocialAccountExtractor}&quot;,	&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;social_network_id&quot;: 1,&#xd;
              &quot;identifier&quot;: &quot;example1 test&quot;,&#xd;
              &quot;url&quot;: &quot;https://www.facebook.com/example3&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;object-custom-fields&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;custom_field&quot;: &quot;4 notes&quot;,&#xd;
              &quot;custom_field_value&quot;: &quot;another&quot;,&#xd;
              &quot;custom_field_tag&quot;: {&#xd;
                &quot;tag&quot;: &quot;blender&quot;,&#xd;
                &quot;color&quot;: &quot;blue&quot;&#xd;
              }&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      }&#xd;
    }&#xd;
  }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts/${idContactExtractor}</stringProp>
          <stringProp name="HTTPSampler.method">PATCH</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="data.type" enabled="true">
            <stringProp name="JSON_PATH">$.data.type</stringProp>
            <stringProp name="EXPECTED_VALUE">contacts</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$..attributes.prefix" enabled="true">
            <stringProp name="JSON_PATH">$..attributes.prefix</stringProp>
            <stringProp name="EXPECTED_VALUE">Ms</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$..attributes.first_name" enabled="true">
            <stringProp name="JSON_PATH">$..attributes.first_name</stringProp>
            <stringProp name="EXPECTED_VALUE">Telly test</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$..attributes.middle_name" enabled="true">
            <stringProp name="JSON_PATH">$..attributes.middle_name</stringProp>
            <stringProp name="EXPECTED_VALUE">Senior test</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$..attributes.last_name" enabled="true">
            <stringProp name="JSON_PATH">$..attributes.last_name</stringProp>
            <stringProp name="EXPECTED_VALUE">Beier test</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$..attributes.preferred_name" enabled="true">
            <stringProp name="JSON_PATH">$..attributes.preferred_name</stringProp>
            <stringProp name="EXPECTED_VALUE">Telly Beier test</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$..attributes.legal_name" enabled="true">
            <stringProp name="JSON_PATH">$..attributes.legal_name</stringProp>
            <stringProp name="EXPECTED_VALUE">Telly Senior Beier test</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$..attributes.date_of_birth" enabled="true">
            <stringProp name="JSON_PATH">$..attributes.date_of_birth</stringProp>
            <stringProp name="EXPECTED_VALUE">2018-05-25</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$..attributes.contact_types" enabled="true">
            <stringProp name="JSON_PATH">$..attributes.contact_types</stringProp>
            <stringProp name="EXPECTED_VALUE">[[&quot;buyer&quot;,&quot;seller&quot;]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$..attributes.motivations" enabled="true">
            <stringProp name="JSON_PATH">$..attributes.motivations</stringProp>
            <stringProp name="EXPECTED_VALUE">[&quot;moving-up&quot;,&quot;downsizing&quot;]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[0].type (custom-fields)" enabled="true">
            <stringProp name="JSON_PATH">$.included[0].type</stringProp>
            <stringProp name="EXPECTED_VALUE">custom-fields</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[0].attributes.name (custom-fields)" enabled="true">
            <stringProp name="JSON_PATH">$.included[0].attributes.name</stringProp>
            <stringProp name="EXPECTED_VALUE">available_to_contact_date</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[5].type (addresses)" enabled="true">
            <stringProp name="JSON_PATH">$.included[5].type</stringProp>
            <stringProp name="EXPECTED_VALUE">addresses</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[5].attributes.address_line_1 (addresses)" enabled="true">
            <stringProp name="JSON_PATH">$.included[5].attributes.address_line_1</stringProp>
            <stringProp name="EXPECTED_VALUE">wow test</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[5].attributes.address_line_2 (addresses)" enabled="true">
            <stringProp name="JSON_PATH">$.included[5].attributes.address_line_2</stringProp>
            <stringProp name="EXPECTED_VALUE">wow test</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[5].attributes.address_line_3 (addresses)" enabled="true">
            <stringProp name="JSON_PATH">$.included[5].attributes.address_line_3</stringProp>
            <stringProp name="EXPECTED_VALUE">wow test</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[5].attributes.address_line_4 (addresses)" enabled="true">
            <stringProp name="JSON_PATH">$.included[5].attributes.address_line_4</stringProp>
            <stringProp name="EXPECTED_VALUE">wow test</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[6].type (emails)" enabled="true">
            <stringProp name="JSON_PATH">$.included[6].type</stringProp>
            <stringProp name="EXPECTED_VALUE">emails</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[6].attributes.email (emails)" enabled="true">
            <stringProp name="JSON_PATH">$.included[6].attributes.email</stringProp>
            <stringProp name="EXPECTED_VALUE">ematestemail.30@gmail.com</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[6].attributes.overridden (emails)" enabled="true">
            <stringProp name="JSON_PATH">$.included[6].attributes.overridden</stringProp>
            <stringProp name="EXPECTED_VALUE">1</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[6].attributes.label (emails)" enabled="true">
            <stringProp name="JSON_PATH">$.included[6].attributes.label</stringProp>
            <stringProp name="EXPECTED_VALUE">work test</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[6].attributes.is_primary (emails)" enabled="true">
            <stringProp name="JSON_PATH">$.included[6].attributes.is_primary</stringProp>
            <stringProp name="EXPECTED_VALUE">true</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[6].attributes.is_valid (emails)" enabled="true">
            <stringProp name="JSON_PATH">$.included[6].attributes.is_valid</stringProp>
            <stringProp name="EXPECTED_VALUE">true</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[7].type (family)" enabled="true">
            <stringProp name="JSON_PATH">$.included[7].type</stringProp>
            <stringProp name="EXPECTED_VALUE">family</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[7].attributes.label (family)" enabled="true">
            <stringProp name="JSON_PATH">$.included[7].attributes.label</stringProp>
            <stringProp name="EXPECTED_VALUE">some other label test</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[7].attributes.relative_type (family)" enabled="true">
            <stringProp name="JSON_PATH">$.included[7].attributes.relative_type</stringProp>
            <stringProp name="EXPECTED_VALUE">23</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[8].type (notes)" enabled="true">
            <stringProp name="JSON_PATH">$.included[8].type</stringProp>
            <stringProp name="EXPECTED_VALUE">notes</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[8].attributes.noteable_type (notes)" enabled="true">
            <stringProp name="JSON_PATH">$.included[8].attributes.noteable_type</stringProp>
            <stringProp name="EXPECTED_VALUE">contacts</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[8].attributes.note (notes)" enabled="true">
            <stringProp name="JSON_PATH">$.included[8].attributes.note</stringProp>
            <stringProp name="EXPECTED_VALUE">update new test</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[9].type (object-custom-fields)" enabled="true">
            <stringProp name="JSON_PATH">$.included[9].type</stringProp>
            <stringProp name="EXPECTED_VALUE">object-custom-fields</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[9].attributes.object_type (object-custom-fields)" enabled="true">
            <stringProp name="JSON_PATH">$.included[9].attributes.object_type</stringProp>
            <stringProp name="EXPECTED_VALUE">contacts</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[9].attributes.custom_field_type (object-custom-fields)" enabled="true">
            <stringProp name="JSON_PATH">$.included[9].attributes.custom_field_type</stringProp>
            <stringProp name="EXPECTED_VALUE">1</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[9].relationships.custom_field.data.type (object-custom-fields)" enabled="true">
            <stringProp name="JSON_PATH">$.included[9].relationships.custom-field.data.type</stringProp>
            <stringProp name="EXPECTED_VALUE">custom-fields</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[14].type (phones)" enabled="true">
            <stringProp name="JSON_PATH">$.included[14].type</stringProp>
            <stringProp name="EXPECTED_VALUE">phones</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[14].attributes.number (phones)" enabled="true">
            <stringProp name="JSON_PATH">$.included[14].attributes.number</stringProp>
            <stringProp name="EXPECTED_VALUE">202-555-9999</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[14].attributes.formatted_number (phones)" enabled="true">
            <stringProp name="JSON_PATH">$.included[14].attributes.formatted_number</stringProp>
            <stringProp name="EXPECTED_VALUE">+1 202-555-9999</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[14].attributes.label (phones)" enabled="true">
            <stringProp name="JSON_PATH">$.included[14].attributes.label</stringProp>
            <stringProp name="EXPECTED_VALUE">Work</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[15].type (social-accounts)" enabled="true">
            <stringProp name="JSON_PATH">$.included[15].type</stringProp>
            <stringProp name="EXPECTED_VALUE">social-accounts</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[15].attributes.social_network_id (social-accounts)" enabled="true">
            <stringProp name="JSON_PATH">$.included[15].attributes.social_network_id</stringProp>
            <stringProp name="EXPECTED_VALUE">1</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[15].attributes.identifier (social-accounts)" enabled="true">
            <stringProp name="JSON_PATH">$.included[15].attributes.identifier</stringProp>
            <stringProp name="EXPECTED_VALUE">example1 test</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[15].attributes.url (social-accounts)" enabled="true">
            <stringProp name="JSON_PATH">$.included[15].attributes.url</stringProp>
            <stringProp name="EXPECTED_VALUE">https://www.facebook.com/example3</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[17].type (sources)" enabled="true">
            <stringProp name="JSON_PATH">$.included[17].type</stringProp>
            <stringProp name="EXPECTED_VALUE">sources</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[17].attributes.label (sources)" enabled="true">
            <stringProp name="JSON_PATH">$.included[17].attributes.label</stringProp>
            <stringProp name="EXPECTED_VALUE">KW Website test</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[17].attributes.is_archived (sources)" enabled="true">
            <stringProp name="JSON_PATH">$.included[17].attributes.is_archived</stringProp>
            <stringProp name="EXPECTED_VALUE">true</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[18].type (system-metas)" enabled="true">
            <stringProp name="JSON_PATH">$.included[18].type</stringProp>
            <stringProp name="EXPECTED_VALUE">system-metas</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[18].attributes.name (system-metas)" enabled="true">
            <stringProp name="JSON_PATH">$.included[18].attributes.name</stringProp>
            <stringProp name="EXPECTED_VALUE">PieSync</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[18].attributes.variable (system-metas)" enabled="true">
            <stringProp name="JSON_PATH">$.included[18].attributes.variable</stringProp>
            <stringProp name="EXPECTED_VALUE">piesync_trash</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Update lead Contact Request" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;attributes&quot;: {&#xd;
      &quot;prefix&quot;: &quot;Ms&quot;,&#xd;
      &quot;first_name&quot;: &quot;Telly test&quot;,&#xd;
      &quot;middle_name&quot;: &quot;Senior test&quot;,&#xd;
      &quot;last_name&quot;: &quot;Beier test&quot;,&#xd;
      &quot;preferred_name&quot;: &quot;Telly Beier test&quot;,&#xd;
      &quot;legal_name&quot;: &quot;Telly Senior Beier test&quot;,&#xd;
      &quot;suffix&quot;: &quot;I&quot;,&#xd;
      &quot;date_of_birth&quot;: &quot;2018-05-25&quot;,&#xd;
      &quot;timeframe&quot;: &quot;1 to 12 months&quot;,&#xd;
      &quot;contact_types&quot;: [&#xd;
        &quot;buyer&quot;,&#xd;
        &quot;seller&quot;&#xd;
      ],&#xd;
      &quot;motivations&quot;: [&#xd;
        &quot;moving-up&quot;,&#xd;
        &quot;downsizing&quot;&#xd;
      ],&#xd;
      &quot;phase&quot;: 1,&#xd;
      &quot;primary_motivation_note&quot;: &quot;Telly.Beier&apos;s primary note&quot;,&#xd;
      &quot;is_pre_approved&quot;: true,&#xd;
      &quot;is_primary&quot;: true,&#xd;
      &quot;status&quot;: 1,&#xd;
      &quot;stage&quot;: &quot;prospect&quot;,&#xd;
      &quot;lead_type&quot;: &quot;rent&quot;,&#xd;
      &quot;is_starred&quot;: false,&#xd;
      &quot;available_to_contact_date&quot;: &quot;2019-05-25&quot;,&#xd;
      &quot;pre_approved_amount&quot;: 6,&#xd;
      &quot;number_in_household&quot;: 13,&#xd;
      &quot;background_info&quot;: &quot;bg info&quot;,&#xd;
      &quot;profession_title&quot;: &quot;Teller&quot;,&#xd;
      &quot;profession_department&quot;: &quot;Logistics&quot;,&#xd;
      &quot;is_connected&quot;: true,&#xd;
	 &quot;system-metas&quot;: [&#xd;
        {&#xd;
          &quot;id&quot;: 0,&#xd;
          &quot;name&quot;: &quot;piesync&quot;,&#xd;
          &quot;variable&quot;: &quot;piesync_trash&quot;,&#xd;
          &quot;type&quot;: &quot;1&quot;,&#xd;
          &quot;value&quot;: &quot;true&quot;&#xd;
        }&#xd;
      ],&#xd;
      &quot;team_id&quot;: 1,&#xd;
      &quot;primary_address&quot;: &quot;address 1&quot;,&#xd;
      &quot;language&quot;: &quot;en&quot;,&#xd;
      &quot;initial_contact_date&quot;: &quot;2017-06-23 20:27:16&quot;&#xd;
    },&#xd;
    &quot;relationships&quot;: {&#xd;
      &quot;contact-leads&quot;: {&#xd;
        &quot;data&quot;: {&#xd;
          &quot;id&quot;: 12,&#xd;
          &quot;attributes&quot;: {&#xd;
            &quot;route_id&quot;: 3,&#xd;
            &quot;is_buyer&quot;: 1,&#xd;
            &quot;is_team&quot;: 1,&#xd;
            &quot;seller_listing_address&quot;: &quot;917 4th St. Millville, NJ 08332&quot;,&#xd;
            &quot;buyer_price_min&quot;: 71000,&#xd;
            &quot;buyer_price_max&quot;: 121000,&#xd;
            &quot;is_assigned&quot;: 1,&#xd;
            &quot;assignment&quot;: &quot;as&quot;,&#xd;
            &quot;leader_id&quot;: 13,&#xd;
            &quot;status&quot;: 10,&#xd;
            &quot;preferred_contact_by&quot;: &quot;email&quot;,&#xd;
            &quot;about&quot;: &quot;about&quot;,&#xd;
            &quot;description&quot;: &quot;desc&quot;&#xd;
          }&#xd;
        }&#xd;
      },&#xd;
      &quot;addresses&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
          	&quot;id&quot;:&quot;${idAddressExtractor1}&quot;,&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;address_line_1&quot;: &quot;wow test&quot;,&#xd;
              &quot;address_line_2&quot;: &quot;wow test&quot;,&#xd;
              &quot;address_line_3&quot;: &quot;wow test&quot;,&#xd;
              &quot;address_line_4&quot;: &quot;wow test&quot;,&#xd;
              &quot;city&quot;: &quot;wow&quot;,&#xd;
              &quot;city_locality&quot;: &quot;cupiditate 4&quot;,&#xd;
              &quot;state_region&quot;: &quot;wow&quot;,&#xd;
              &quot;country&quot;: &quot;Indonesia&quot;,&#xd;
              &quot;postal_code&quot;: &quot;16810&quot;,&#xd;
              &quot;lat&quot;: -57.359989,&#xd;
              &quot;lng&quot;: 54.022906,&#xd;
              &quot;is_current&quot;: false,&#xd;
              &quot;ownership_status&quot;: 2,&#xd;
              &quot;description&quot;: &quot;Best place in the world 14&quot;,&#xd;
              &quot;neighborhood&quot;: &quot;some neighborhood&quot;,&#xd;
              &quot;is_primary&quot;: true,&#xd;
              &quot;label&quot;: &quot;home&quot;,&#xd;
              &quot;is_mailing_address&quot;: true&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;phones&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
          	&quot;id&quot;:&quot;${idPhoneExtractor1}&quot;,&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;number&quot;: &quot;202-555-9999&quot;,&#xd;
              &quot;country_code&quot;: &quot;US&quot;,&#xd;
              &quot;formatted_number&quot;: &quot;202-555-9999&quot;,&#xd;
              &quot;is_primary&quot;: true,&#xd;
              &quot;is_current&quot;: true,&#xd;
              &quot;label&quot;: &quot;Work&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;notes&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
          	&quot;id&quot;:&quot;${idNoteExtractor1}&quot;,&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;note&quot;: &quot;update new test 4&quot;,&#xd;
              &quot;title&quot;: &quot;updated title 4&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;family&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;id&quot;:&quot;${idFamilyExtractor1}&quot;,&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;related_to&quot;: ${idContactFamilyExtractor},&#xd;
              &quot;label&quot;: &quot;some other label test&quot;,&#xd;
              &quot;relative_type&quot;: 1&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;sources&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
          &quot;id&quot;:&quot;${idSourceExtractor1}&quot;,	&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;label&quot;: &quot;KW Website test 1&quot;,&#xd;
              &quot;is_archived&quot;: 1,&#xd;
              &quot;vendor&quot;: &quot;ow&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;emails&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
          	&quot;id&quot;:&quot;${idEmailExtractor1}&quot;,&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;email&quot;: &quot;ematestemail.30@gmail.com&quot;,&#xd;
              &quot;label&quot;: &quot;work test&quot;,&#xd;
              &quot;is_primary&quot;: true,&#xd;
              &quot;is_valid&quot;: true&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;social-accounts&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
          &quot;id&quot;:&quot;${idSocialAccountExtractor1}&quot;,		&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;social_network_id&quot;: 1,&#xd;
              &quot;identifier&quot;: &quot;example1 test&quot;,&#xd;
              &quot;url&quot;: &quot;https://www.facebook.com/example3&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;object-custom-fields&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;custom_field&quot;: &quot;4 notes&quot;,&#xd;
              &quot;custom_field_value&quot;: &quot;another&quot;,&#xd;
              &quot;custom_field_tag&quot;: {&#xd;
                &quot;tag&quot;: &quot;blender&quot;,&#xd;
                &quot;color&quot;: &quot;blue&quot;&#xd;
              }&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      }&#xd;
    }&#xd;
  }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts/${idLeadContactExtractor}</stringProp>
          <stringProp name="HTTPSampler.method">PATCH</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="data.type" enabled="true">
            <stringProp name="JSON_PATH">$.data.type</stringProp>
            <stringProp name="EXPECTED_VALUE">contacts</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$..attributes.prefix" enabled="true">
            <stringProp name="JSON_PATH">$..attributes.prefix</stringProp>
            <stringProp name="EXPECTED_VALUE">Ms</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$..attributes.first_name" enabled="true">
            <stringProp name="JSON_PATH">$..attributes.first_name</stringProp>
            <stringProp name="EXPECTED_VALUE">Telly test</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$..attributes.middle_name" enabled="true">
            <stringProp name="JSON_PATH">$..attributes.middle_name</stringProp>
            <stringProp name="EXPECTED_VALUE">Senior test</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$..attributes.last_name" enabled="true">
            <stringProp name="JSON_PATH">$..attributes.last_name</stringProp>
            <stringProp name="EXPECTED_VALUE">Beier test</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$..attributes.preferred_name" enabled="true">
            <stringProp name="JSON_PATH">$..attributes.preferred_name</stringProp>
            <stringProp name="EXPECTED_VALUE">Telly Beier test</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$..attributes.legal_name" enabled="true">
            <stringProp name="JSON_PATH">$..attributes.legal_name</stringProp>
            <stringProp name="EXPECTED_VALUE">Telly Senior Beier test</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$..attributes.date_of_birth" enabled="true">
            <stringProp name="JSON_PATH">$..attributes.date_of_birth</stringProp>
            <stringProp name="EXPECTED_VALUE">2018-05-25</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$..attributes.contact_types" enabled="true">
            <stringProp name="JSON_PATH">$..attributes.contact_types</stringProp>
            <stringProp name="EXPECTED_VALUE">[[&quot;buyer&quot;,&quot;seller&quot;]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$..attributes.motivations" enabled="true">
            <stringProp name="JSON_PATH">$..attributes.motivations</stringProp>
            <stringProp name="EXPECTED_VALUE">[&quot;moving-up&quot;,&quot;downsizing&quot;]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[0].type (custom-fields)" enabled="true">
            <stringProp name="JSON_PATH">$.included[0].type</stringProp>
            <stringProp name="EXPECTED_VALUE">custom-fields</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[0].attributes.name (custom-fields)" enabled="true">
            <stringProp name="JSON_PATH">$.included[0].attributes.name</stringProp>
            <stringProp name="EXPECTED_VALUE">available_to_contact_date</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[6].type (addresses)" enabled="true">
            <stringProp name="JSON_PATH">$.included[5].type</stringProp>
            <stringProp name="EXPECTED_VALUE">addresses</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[6].attributes.address_line_1 (addresses)" enabled="true">
            <stringProp name="JSON_PATH">$.included[5].attributes.address_line_1</stringProp>
            <stringProp name="EXPECTED_VALUE">wow test</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[6].attributes.address_line_2 (addresses)" enabled="true">
            <stringProp name="JSON_PATH">$.included[5].attributes.address_line_2</stringProp>
            <stringProp name="EXPECTED_VALUE">wow test</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[6].attributes.address_line_3 (addresses)" enabled="true">
            <stringProp name="JSON_PATH">$.included[5].attributes.address_line_3</stringProp>
            <stringProp name="EXPECTED_VALUE">wow test</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[6].attributes.address_line_4 (addresses)" enabled="true">
            <stringProp name="JSON_PATH">$.included[5].attributes.address_line_4</stringProp>
            <stringProp name="EXPECTED_VALUE">wow test</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[7].type (emails)" enabled="true">
            <stringProp name="JSON_PATH">$.included[7].type</stringProp>
            <stringProp name="EXPECTED_VALUE">emails</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[7].attributes.email (emails)" enabled="true">
            <stringProp name="JSON_PATH">$.included[7].attributes.email</stringProp>
            <stringProp name="EXPECTED_VALUE">ematestemail.30@gmail.com</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[7].attributes.overridden (emails)" enabled="true">
            <stringProp name="JSON_PATH">$.included[7].attributes.overridden</stringProp>
            <stringProp name="EXPECTED_VALUE">1</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[7].attributes.label (emails)" enabled="true">
            <stringProp name="JSON_PATH">$.included[7].attributes.label</stringProp>
            <stringProp name="EXPECTED_VALUE">work test</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[7].attributes.is_primary (emails)" enabled="true">
            <stringProp name="JSON_PATH">$.included[7].attributes.is_primary</stringProp>
            <stringProp name="EXPECTED_VALUE">true</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[7].attributes.is_valid (emails)" enabled="true">
            <stringProp name="JSON_PATH">$.included[7].attributes.is_valid</stringProp>
            <stringProp name="EXPECTED_VALUE">true</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[8].type (family)" enabled="true">
            <stringProp name="JSON_PATH">$.included[8].type</stringProp>
            <stringProp name="EXPECTED_VALUE">family</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[8].attributes.label (family)" enabled="true">
            <stringProp name="JSON_PATH">$.included[8].attributes.label</stringProp>
            <stringProp name="EXPECTED_VALUE">some other label test</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[8].attributes.relative_type (family)" enabled="true">
            <stringProp name="JSON_PATH">$.included[8].attributes.relative_type</stringProp>
            <stringProp name="EXPECTED_VALUE">1</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[9].type (notes)" enabled="true">
            <stringProp name="JSON_PATH">$.included[9].type</stringProp>
            <stringProp name="EXPECTED_VALUE">notes</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[9].attributes.noteable_type (notes)" enabled="true">
            <stringProp name="JSON_PATH">$.included[9].attributes.noteable_type</stringProp>
            <stringProp name="EXPECTED_VALUE">contacts</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[9].attributes.note (notes)" enabled="true">
            <stringProp name="JSON_PATH">$.included[9].attributes.note</stringProp>
            <stringProp name="EXPECTED_VALUE">update new test 4</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[10].type (object-custom-fields)" enabled="true">
            <stringProp name="JSON_PATH">$.included[10].type</stringProp>
            <stringProp name="EXPECTED_VALUE">object-custom-fields</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[10].attributes.object_type (object-custom-fields)" enabled="true">
            <stringProp name="JSON_PATH">$.included[10].attributes.object_type</stringProp>
            <stringProp name="EXPECTED_VALUE">contacts</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[10].attributes.custom_field_type (object-custom-fields)" enabled="true">
            <stringProp name="JSON_PATH">$.included[10].attributes.custom_field_type</stringProp>
            <stringProp name="EXPECTED_VALUE">1</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[10].relationships.custom_field.data.type (object-custom-fields)" enabled="true">
            <stringProp name="JSON_PATH">$.included[10].relationships.custom-field.data.type</stringProp>
            <stringProp name="EXPECTED_VALUE">custom-fields</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[15].type (phones)" enabled="true">
            <stringProp name="JSON_PATH">$.included[15].type</stringProp>
            <stringProp name="EXPECTED_VALUE">phones</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[15].attributes.number (phones)" enabled="true">
            <stringProp name="JSON_PATH">$.included[15].attributes.number</stringProp>
            <stringProp name="EXPECTED_VALUE">202-555-9999</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[15].attributes.formatted_number (phones)" enabled="true">
            <stringProp name="JSON_PATH">$.included[15].attributes.formatted_number</stringProp>
            <stringProp name="EXPECTED_VALUE">+1 202-555-9999</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[15].attributes.label (phones)" enabled="true">
            <stringProp name="JSON_PATH">$.included[15].attributes.label</stringProp>
            <stringProp name="EXPECTED_VALUE">Work</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[16].type (social-accounts)" enabled="true">
            <stringProp name="JSON_PATH">$.included[16].type</stringProp>
            <stringProp name="EXPECTED_VALUE">social-accounts</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[16].attributes.social_network_id (social-accounts)" enabled="true">
            <stringProp name="JSON_PATH">$.included[16].attributes.social_network_id</stringProp>
            <stringProp name="EXPECTED_VALUE">1</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[16].attributes.identifier (social-accounts)" enabled="true">
            <stringProp name="JSON_PATH">$.included[16].attributes.identifier</stringProp>
            <stringProp name="EXPECTED_VALUE">example1 test</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[16].attributes.url (social-accounts)" enabled="true">
            <stringProp name="JSON_PATH">$.included[16].attributes.url</stringProp>
            <stringProp name="EXPECTED_VALUE">https://www.facebook.com/example3</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[18].type (sources)" enabled="true">
            <stringProp name="JSON_PATH">$.included[18].type</stringProp>
            <stringProp name="EXPECTED_VALUE">sources</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[18].attributes.label (sources)" enabled="true">
            <stringProp name="JSON_PATH">$.included[18].attributes.label</stringProp>
            <stringProp name="EXPECTED_VALUE">KW Website test 1</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[18].attributes.is_archived (sources)" enabled="true">
            <stringProp name="JSON_PATH">$.included[18].attributes.is_archived</stringProp>
            <stringProp name="EXPECTED_VALUE">true</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[19].type (system-metas)" enabled="true">
            <stringProp name="JSON_PATH">$.included[19].type</stringProp>
            <stringProp name="EXPECTED_VALUE">system-metas</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[19].attributes.name (system-metas)" enabled="true">
            <stringProp name="JSON_PATH">$.included[19].attributes.name</stringProp>
            <stringProp name="EXPECTED_VALUE">PieSync</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[19].attributes.variable (system-metas)" enabled="true">
            <stringProp name="JSON_PATH">$.included[19].attributes.variable</stringProp>
            <stringProp name="EXPECTED_VALUE">piesync_trash</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[20].type (contact-leads)" enabled="true">
            <stringProp name="JSON_PATH">$.included[20].type</stringProp>
            <stringProp name="EXPECTED_VALUE">contact-leads</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[20].attributes.route_id (contact-leads)" enabled="true">
            <stringProp name="JSON_PATH">$.included[20].attributes.route_id</stringProp>
            <stringProp name="EXPECTED_VALUE">3</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.included[20].attributes.description (contact-leads)" enabled="true">
            <stringProp name="JSON_PATH">$.included[20].attributes.description</stringProp>
            <stringProp name="EXPECTED_VALUE">desc</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Delete Contact Request" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts/${idContactExtractor}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49590">204</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Delete lead Contact Request" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts/${idLeadContactExtractor}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49590">204</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Delete Contact Familiy Request" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts/${idContactFamilyExtractor}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49590">204</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Delete Contact Familiy Request 1" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts/${idContactFamilyExtractor1}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49590">204</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report v2" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Get Contacts Address Module Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">Bearer ${__property(v_access_token)}</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept</stringProp>
              <stringProp name="Header.value">application/vnd.api+json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">cache-control</stringProp>
              <stringProp name="Header.value">no-cache</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">X-Api-Override-Phone</stringProp>
              <stringProp name="Header.value">1</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">x-Api-Override-Email</stringProp>
              <stringProp name="Header.value">1</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">X-Partial-Record-Validation</stringProp>
              <stringProp name="Header.value">1</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Create Contact Request" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;attributes&quot;: {&#xd;
      &quot;prefix&quot;: &quot;Mr&quot;,&#xd;
      &quot;first_name&quot;: &quot;Telly&quot;,&#xd;
      &quot;middle_name&quot;: &quot;Senior&quot;,&#xd;
      &quot;last_name&quot;: &quot;Beier&quot;,&#xd;
      &quot;preferred_name&quot;: &quot;Telly Beier&quot;,&#xd;
      &quot;legal_name&quot;: &quot;Telly Senior Beier&quot;&#xd;
    },&#xd;
    &quot;relationships&quot;: {&#xd;
      &quot;addresses&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;address_line_1&quot;: &quot;address_line_1&quot;,&#xd;
              &quot;address_line_2&quot;: &quot;address_line_2&quot;,&#xd;
              &quot;address_line_3&quot;: &quot;address_line_3&quot;,&#xd;
              &quot;address_line_4&quot;: &quot;address_line_4&quot;,&#xd;
              &quot;city&quot;: &quot;city&quot;,&#xd;
              &quot;city_locality&quot;: &quot;city locality&quot;,&#xd;
              &quot;state_region&quot;: &quot;state_region&quot;,&#xd;
              &quot;country&quot;: &quot;country&quot;,&#xd;
              &quot;postal_code&quot;: &quot;16810&quot;,&#xd;
              &quot;lat&quot;: -57.359989,&#xd;
              &quot;lng&quot;: 54.022906,&#xd;
              &quot;is_current&quot;: false,&#xd;
              &quot;ownership_status&quot;: 2,&#xd;
              &quot;description&quot;: &quot;Best place in the world 14&quot;,&#xd;
              &quot;neighborhood&quot;: &quot;some neighborhood&quot;,&#xd;
              &quot;is_primary&quot;: true,&#xd;
              &quot;label&quot;: &quot;home&quot;,&#xd;
              &quot;is_mailing_address&quot;: true&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      }&#xd;
    }&#xd;
  }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49587">201</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON IdContact Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">idContactExtractor</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">data.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Get country Request" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts/search?filter[addresses.country][like]=country</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Get city  Request" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts/search?filter[addresses.city][like]=city</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Get city_locality  Request" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts/search?filter[addresses.city_locality][like]=city locality</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Get description  Request" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts/search?filter[addresses.description][like]=Best place in the world 14</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Get label  Request" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts/search?filter[addresses.label][like]=home</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Get state_region  Request" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts/search?filter[addresses.state_region][like]=state_region</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Get address_line_1 Request" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts/search?filter[addresses.address_line_1][like]=address_line_1</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Get address_line_2 Request" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts/search?filter[addresses.address_line_2][like]=address_line_2</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Get address_line_3 Request" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts/search?filter[addresses.address_line_3][like]=address_line_3</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Get address_line_4 Request" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts/search?filter[addresses.address_line_4][like]=address_line_4</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Get postal_code Request" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts/search?filter[addresses.postal_code][like]=16810</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Get ownership_status Request" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts/search?filter[addresses.city][like]=city</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Delete Contact Request" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts/${idContactExtractor}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49590">204</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report v2" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Delete Archived Group v2" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">Bearer ${__property(v_access_token)}</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept</stringProp>
              <stringProp name="Header.value">application/vnd.api+json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">cache-control</stringProp>
              <stringProp name="Header.value">no-cache</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">X-Api-Override-Phone</stringProp>
              <stringProp name="Header.value">1</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">x-Api-Override-Email</stringProp>
              <stringProp name="Header.value">1</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">X-Partial-Record-Validation</stringProp>
              <stringProp name="Header.value">1</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Create Contact Request" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;attributes&quot;: {&#xd;
      &quot;prefix&quot;: &quot;Mr&quot;,&#xd;
      &quot;first_name&quot;: &quot;Telly&quot;,&#xd;
      &quot;middle_name&quot;: &quot;Senior&quot;,&#xd;
      &quot;last_name&quot;: &quot;Beier&quot;,&#xd;
      &quot;preferred_name&quot;: &quot;Telly Beier&quot;,&#xd;
      &quot;legal_name&quot;: &quot;Telly Senior Beier&quot;,&#xd;
      &quot;suffix&quot;: &quot;I&quot;,&#xd;
      &quot;date_of_birth&quot;: &quot;2019-05-25&quot;,&#xd;
      &quot;timeframe&quot;: &quot;1 to 12 months&quot;,&#xd;
      &quot;contact_types&quot;: [&#xd;
        &quot;buyer&quot;,&#xd;
        &quot;seller&quot;,&#xd;
        &quot;vendor&quot;,&#xd;
        &quot;investor&quot;,&#xd;
        &quot;agent&quot;,&#xd;
        &quot;lender&quot;,&#xd;
        &quot;past clients&quot;&#xd;
      ],&#xd;
      &quot;motivations&quot;: [&#xd;
        &quot;moving-up&quot;,&#xd;
        &quot;downsizing&quot;,&#xd;
        &quot;vacation-home&quot;,&#xd;
        &quot;first-home&quot;,&#xd;
        &quot;schools&quot;,&#xd;
        &quot;relocation&quot;,&#xd;
        &quot;retirement&quot;,&#xd;
        &quot;personal&quot;,&#xd;
        &quot;financial&quot;&#xd;
      ],&#xd;
      &quot;phase&quot;: 1,&#xd;
      &quot;primary_motivation_note&quot;: &quot;Telly.Beier&apos;s primary note&quot;,&#xd;
      &quot;is_pre_approved&quot;: true,&#xd;
      &quot;is_primary&quot;: true,&#xd;
      &quot;status&quot;: 1,&#xd;
      &quot;stage&quot;: &quot;prospect&quot;,&#xd;
      &quot;lead_type&quot;: &quot;rent&quot;,&#xd;
      &quot;is_starred&quot;: false,&#xd;
      &quot;available_to_contact_date&quot;: &quot;2019-05-25&quot;,&#xd;
      &quot;pre_approved_amount&quot;: 6,&#xd;
      &quot;number_in_household&quot;: 13,&#xd;
      &quot;background_info&quot;: &quot;bg info&quot;,&#xd;
      &quot;profession_title&quot;: &quot;Teller&quot;,&#xd;
      &quot;profession_department&quot;: &quot;Logistics&quot;,&#xd;
      &quot;is_connected&quot;: true,&#xd;
	 &quot;system-metas&quot;: [&#xd;
        {&#xd;
          &quot;id&quot;: 0,&#xd;
          &quot;name&quot;: &quot;piesync&quot;,&#xd;
          &quot;variable&quot;: &quot;piesync_trash&quot;,&#xd;
          &quot;type&quot;: &quot;1&quot;,&#xd;
          &quot;value&quot;: &quot;true&quot;&#xd;
        }&#xd;
      ],&#xd;
      &quot;team_id&quot;: 1,&#xd;
      &quot;primary_address&quot;: &quot;address 1&quot;,&#xd;
      &quot;language&quot;: &quot;en&quot;,&#xd;
      &quot;initial_contact_date&quot;: &quot;2017-06-23 20:27:16&quot;&#xd;
    },&#xd;
    &quot;relationships&quot;: {&#xd;
      &quot;contact-leads&quot;: {&#xd;
        &quot;data&quot;: {&#xd;
          &quot;id&quot;: 12,&#xd;
          &quot;attributes&quot;: {&#xd;
            &quot;route_id&quot;: 3,&#xd;
            &quot;is_buyer&quot;: 1,&#xd;
            &quot;is_team&quot;: 1,&#xd;
            &quot;seller_listing_address&quot;: &quot;917 4th St. Millville, NJ 08332&quot;,&#xd;
            &quot;buyer_price_min&quot;: 71000,&#xd;
            &quot;buyer_price_max&quot;: 121000,&#xd;
            &quot;is_assigned&quot;: 1,&#xd;
            &quot;assignment&quot;: &quot;as&quot;,&#xd;
            &quot;leader_id&quot;: 13,&#xd;
            &quot;status&quot;: 10,&#xd;
            &quot;preferred_contact_by&quot;: &quot;email&quot;,&#xd;
            &quot;about&quot;: &quot;about&quot;,&#xd;
            &quot;description&quot;: &quot;desc&quot;&#xd;
          }&#xd;
        }&#xd;
      },&#xd;
      &quot;addresses&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;address_line_1&quot;: &quot;wow&quot;,&#xd;
              &quot;address_line_2&quot;: &quot;wow&quot;,&#xd;
              &quot;address_line_3&quot;: &quot;wow&quot;,&#xd;
              &quot;address_line_4&quot;: &quot;wow&quot;,&#xd;
              &quot;city&quot;: &quot;wow&quot;,&#xd;
              &quot;city_locality&quot;: &quot;cupiditate 4&quot;,&#xd;
              &quot;state_region&quot;: &quot;wow&quot;,&#xd;
              &quot;country&quot;: &quot;Indonesia&quot;,&#xd;
              &quot;postal_code&quot;: &quot;16810&quot;,&#xd;
              &quot;lat&quot;: -57.359989,&#xd;
              &quot;lng&quot;: 54.022906,&#xd;
              &quot;is_current&quot;: false,&#xd;
              &quot;ownership_status&quot;: 2,&#xd;
              &quot;description&quot;: &quot;Best place in the world 14&quot;,&#xd;
              &quot;neighborhood&quot;: &quot;some neighborhood&quot;,&#xd;
              &quot;is_primary&quot;: true,&#xd;
              &quot;label&quot;: &quot;home&quot;,&#xd;
              &quot;is_mailing_address&quot;: true&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;phones&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;number&quot;: &quot;202-555-7341&quot;,&#xd;
              &quot;country_code&quot;: &quot;US&quot;,&#xd;
              &quot;formatted_number&quot;: &quot;202-555-7341&quot;,&#xd;
              &quot;is_primary&quot;: true,&#xd;
              &quot;is_current&quot;: true,&#xd;
              &quot;label&quot;: &quot;home&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;notes&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;note&quot;: &quot;update new&quot;,&#xd;
              &quot;title&quot;: &quot;updated title 2&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;sources&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;label&quot;: &quot;KW Website&quot;,&#xd;
              &quot;is_archived&quot;: 0,&#xd;
              &quot;vendor&quot;: &quot;ow&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;emails&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;email&quot;: &quot;ematestemail.28@gmail.com&quot;,&#xd;
              &quot;label&quot;: &quot;work&quot;,&#xd;
              &quot;is_primary&quot;: true,&#xd;
              &quot;is_valid&quot;: true&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;social-accounts&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;social_network_id&quot;: 1,&#xd;
              &quot;identifier&quot;: &quot;example1&quot;,&#xd;
              &quot;url&quot;: &quot;https://www.facebook.com/example2&quot;&#xd;
            }&#xd;
          },&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;social_network_id&quot;: 1,&#xd;
              &quot;identifier&quot;: &quot;example4&quot;,&#xd;
              &quot;url&quot;: &quot;https://www.facebook.com/example1&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;object-custom-fields&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;custom_field&quot;: &quot;4 notes&quot;,&#xd;
              &quot;custom_field_value&quot;: &quot;another&quot;,&#xd;
              &quot;custom_field_tag&quot;: {&#xd;
                &quot;tag&quot;: &quot;blender&quot;,&#xd;
                &quot;color&quot;: &quot;blue&quot;&#xd;
              }&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      }&#xd;
    }&#xd;
  }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49587">201</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON IdContact Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">idContactExtractor</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">data.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
          <stringProp name="ConstantTimer.delay">2000</stringProp>
        </ConstantTimer>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Search Last Contact Request" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts/search?sort=-created_at</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.data[0].id" enabled="true">
            <stringProp name="JSON_PATH">$.data[0].id</stringProp>
            <stringProp name="EXPECTED_VALUE">${idContactExtractor}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Delete Contact Request" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts/${idContactExtractor}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49590">204</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
          <stringProp name="ConstantTimer.delay">2000</stringProp>
        </ConstantTimer>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Search Last Contact Archived Request" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts/search?sort=-created_at&amp;archived=1</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.data[0].id" enabled="true">
            <stringProp name="JSON_PATH">$.data[0].id</stringProp>
            <stringProp name="EXPECTED_VALUE">${idContactExtractor}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree v2" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report v2" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Delete Permanent Group v2" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">Bearer ${__property(v_access_token)}</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept</stringProp>
              <stringProp name="Header.value">application/vnd.api+json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">cache-control</stringProp>
              <stringProp name="Header.value">no-cache</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">X-Api-Override-Phone</stringProp>
              <stringProp name="Header.value">1</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">x-Api-Override-Email</stringProp>
              <stringProp name="Header.value">1</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">X-Partial-Record-Validation</stringProp>
              <stringProp name="Header.value">1</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">X-API-PERMANENT-DELETE</stringProp>
              <stringProp name="Header.value">1</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Create Contact Request" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;attributes&quot;: {&#xd;
      &quot;prefix&quot;: &quot;Mr&quot;,&#xd;
      &quot;first_name&quot;: &quot;Telly&quot;,&#xd;
      &quot;middle_name&quot;: &quot;Senior&quot;,&#xd;
      &quot;last_name&quot;: &quot;Beier&quot;,&#xd;
      &quot;preferred_name&quot;: &quot;Telly Beier&quot;,&#xd;
      &quot;legal_name&quot;: &quot;Telly Senior Beier&quot;,&#xd;
      &quot;suffix&quot;: &quot;I&quot;,&#xd;
      &quot;date_of_birth&quot;: &quot;2019-05-25&quot;,&#xd;
      &quot;timeframe&quot;: &quot;1 to 12 months&quot;,&#xd;
      &quot;contact_types&quot;: [&#xd;
        &quot;buyer&quot;,&#xd;
        &quot;seller&quot;,&#xd;
        &quot;vendor&quot;,&#xd;
        &quot;investor&quot;,&#xd;
        &quot;agent&quot;,&#xd;
        &quot;lender&quot;,&#xd;
        &quot;past clients&quot;&#xd;
      ],&#xd;
      &quot;motivations&quot;: [&#xd;
        &quot;moving-up&quot;,&#xd;
        &quot;downsizing&quot;,&#xd;
        &quot;vacation-home&quot;,&#xd;
        &quot;first-home&quot;,&#xd;
        &quot;schools&quot;,&#xd;
        &quot;relocation&quot;,&#xd;
        &quot;retirement&quot;,&#xd;
        &quot;personal&quot;,&#xd;
        &quot;financial&quot;&#xd;
      ],&#xd;
      &quot;phase&quot;: 1,&#xd;
      &quot;primary_motivation_note&quot;: &quot;Telly.Beier&apos;s primary note&quot;,&#xd;
      &quot;is_pre_approved&quot;: true,&#xd;
      &quot;is_primary&quot;: true,&#xd;
      &quot;status&quot;: 1,&#xd;
      &quot;stage&quot;: &quot;prospect&quot;,&#xd;
      &quot;lead_type&quot;: &quot;rent&quot;,&#xd;
      &quot;is_starred&quot;: false,&#xd;
      &quot;available_to_contact_date&quot;: &quot;2019-05-25&quot;,&#xd;
      &quot;pre_approved_amount&quot;: 6,&#xd;
      &quot;number_in_household&quot;: 13,&#xd;
      &quot;background_info&quot;: &quot;bg info&quot;,&#xd;
      &quot;profession_title&quot;: &quot;Teller&quot;,&#xd;
      &quot;profession_department&quot;: &quot;Logistics&quot;,&#xd;
      &quot;is_connected&quot;: true,&#xd;
	 &quot;system-metas&quot;: [&#xd;
        {&#xd;
          &quot;id&quot;: 0,&#xd;
          &quot;name&quot;: &quot;piesync&quot;,&#xd;
          &quot;variable&quot;: &quot;piesync_trash&quot;,&#xd;
          &quot;type&quot;: &quot;1&quot;,&#xd;
          &quot;value&quot;: &quot;true&quot;&#xd;
        }&#xd;
      ],&#xd;
      &quot;team_id&quot;: 1,&#xd;
      &quot;primary_address&quot;: &quot;address 1&quot;,&#xd;
      &quot;language&quot;: &quot;en&quot;,&#xd;
      &quot;initial_contact_date&quot;: &quot;2017-06-23 20:27:16&quot;&#xd;
    },&#xd;
    &quot;relationships&quot;: {&#xd;
      &quot;contact-leads&quot;: {&#xd;
        &quot;data&quot;: {&#xd;
          &quot;id&quot;: 12,&#xd;
          &quot;attributes&quot;: {&#xd;
            &quot;route_id&quot;: 3,&#xd;
            &quot;is_buyer&quot;: 1,&#xd;
            &quot;is_team&quot;: 1,&#xd;
            &quot;seller_listing_address&quot;: &quot;917 4th St. Millville, NJ 08332&quot;,&#xd;
            &quot;buyer_price_min&quot;: 71000,&#xd;
            &quot;buyer_price_max&quot;: 121000,&#xd;
            &quot;is_assigned&quot;: 1,&#xd;
            &quot;assignment&quot;: &quot;as&quot;,&#xd;
            &quot;leader_id&quot;: 13,&#xd;
            &quot;status&quot;: 10,&#xd;
            &quot;preferred_contact_by&quot;: &quot;email&quot;,&#xd;
            &quot;about&quot;: &quot;about&quot;,&#xd;
            &quot;description&quot;: &quot;desc&quot;&#xd;
          }&#xd;
        }&#xd;
      },&#xd;
      &quot;addresses&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;address_line_1&quot;: &quot;wow&quot;,&#xd;
              &quot;address_line_2&quot;: &quot;wow&quot;,&#xd;
              &quot;address_line_3&quot;: &quot;wow&quot;,&#xd;
              &quot;address_line_4&quot;: &quot;wow&quot;,&#xd;
              &quot;city&quot;: &quot;wow&quot;,&#xd;
              &quot;city_locality&quot;: &quot;cupiditate 4&quot;,&#xd;
              &quot;state_region&quot;: &quot;wow&quot;,&#xd;
              &quot;country&quot;: &quot;Indonesia&quot;,&#xd;
              &quot;postal_code&quot;: &quot;16810&quot;,&#xd;
              &quot;lat&quot;: -57.359989,&#xd;
              &quot;lng&quot;: 54.022906,&#xd;
              &quot;is_current&quot;: false,&#xd;
              &quot;ownership_status&quot;: 2,&#xd;
              &quot;description&quot;: &quot;Best place in the world 14&quot;,&#xd;
              &quot;neighborhood&quot;: &quot;some neighborhood&quot;,&#xd;
              &quot;is_primary&quot;: true,&#xd;
              &quot;label&quot;: &quot;home&quot;,&#xd;
              &quot;is_mailing_address&quot;: true&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;phones&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;number&quot;: &quot;202-555-7341&quot;,&#xd;
              &quot;country_code&quot;: &quot;US&quot;,&#xd;
              &quot;formatted_number&quot;: &quot;202-555-7341&quot;,&#xd;
              &quot;is_primary&quot;: true,&#xd;
              &quot;is_current&quot;: true,&#xd;
              &quot;label&quot;: &quot;home&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;notes&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;note&quot;: &quot;update new&quot;,&#xd;
              &quot;title&quot;: &quot;updated title 2&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;sources&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;label&quot;: &quot;KW Website&quot;,&#xd;
              &quot;is_archived&quot;: 0,&#xd;
              &quot;vendor&quot;: &quot;ow&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;emails&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;email&quot;: &quot;ematestemail.28@gmail.com&quot;,&#xd;
              &quot;label&quot;: &quot;work&quot;,&#xd;
              &quot;is_primary&quot;: true,&#xd;
              &quot;is_valid&quot;: true&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;social-accounts&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;social_network_id&quot;: 1,&#xd;
              &quot;identifier&quot;: &quot;example1&quot;,&#xd;
              &quot;url&quot;: &quot;https://www.facebook.com/example2&quot;&#xd;
            }&#xd;
          },&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;social_network_id&quot;: 1,&#xd;
              &quot;identifier&quot;: &quot;example4&quot;,&#xd;
              &quot;url&quot;: &quot;https://www.facebook.com/example1&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;object-custom-fields&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;custom_field&quot;: &quot;4 notes&quot;,&#xd;
              &quot;custom_field_value&quot;: &quot;another&quot;,&#xd;
              &quot;custom_field_tag&quot;: {&#xd;
                &quot;tag&quot;: &quot;blender&quot;,&#xd;
                &quot;color&quot;: &quot;blue&quot;&#xd;
              }&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      }&#xd;
    }&#xd;
  }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49587">201</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON IdContact Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">idContactExtractor</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">data.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
          <stringProp name="ConstantTimer.delay">2000</stringProp>
        </ConstantTimer>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Search Last Contact Request" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts/search?sort=-created_at</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.data[0].id" enabled="true">
            <stringProp name="JSON_PATH">$.data[0].id</stringProp>
            <stringProp name="EXPECTED_VALUE">${idContactExtractor}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Delete Contact Request" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts/${idContactExtractor}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49590">204</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
          <stringProp name="ConstantTimer.delay">2000</stringProp>
        </ConstantTimer>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Search Last Contact Archived Request" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts/search?sort=-created_at&amp;archived=1</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.data[0].id" enabled="true">
            <stringProp name="JSON_PATH">$.data[0].id</stringProp>
            <stringProp name="EXPECTED_VALUE">${idContactExtractor}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">true</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree v2" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report v2" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Delete-Restore Multi contact Module Group v2" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">Bearer ${__property(v_access_token)}</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">x-api-sync</stringProp>
              <stringProp name="Header.value">1</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept</stringProp>
              <stringProp name="Header.value">application/vnd.api+json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">cache-control</stringProp>
              <stringProp name="Header.value">no-cache</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">X-API-RESTORE</stringProp>
              <stringProp name="Header.value">1</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Create Contact 1 Request" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;attributes&quot;: {&#xd;
      &quot;prefix&quot;: &quot;Mr&quot;,&#xd;
      &quot;first_name&quot;: &quot;Telly&quot;,&#xd;
      &quot;middle_name&quot;: &quot;Senior&quot;,&#xd;
      &quot;last_name&quot;: &quot;Beier&quot;,&#xd;
      &quot;preferred_name&quot;: &quot;Telly Beier&quot;,&#xd;
      &quot;legal_name&quot;: &quot;Telly Senior Beier&quot;,&#xd;
      &quot;suffix&quot;: &quot;I&quot;,&#xd;
      &quot;date_of_birth&quot;: &quot;2019-05-25&quot;,&#xd;
      &quot;timeframe&quot;: &quot;1 to 12 months&quot;,&#xd;
      &quot;contact_types&quot;: [&#xd;
        &quot;buyer&quot;,&#xd;
        &quot;seller&quot;,&#xd;
        &quot;vendor&quot;,&#xd;
        &quot;investor&quot;,&#xd;
        &quot;agent&quot;,&#xd;
        &quot;lender&quot;,&#xd;
        &quot;past clients&quot;&#xd;
      ],&#xd;
      &quot;motivations&quot;: [&#xd;
        &quot;moving-up&quot;,&#xd;
        &quot;downsizing&quot;,&#xd;
        &quot;vacation-home&quot;,&#xd;
        &quot;first-home&quot;,&#xd;
        &quot;schools&quot;,&#xd;
        &quot;relocation&quot;,&#xd;
        &quot;retirement&quot;,&#xd;
        &quot;personal&quot;,&#xd;
        &quot;financial&quot;&#xd;
      ],&#xd;
      &quot;phase&quot;: 1,&#xd;
      &quot;primary_motivation_note&quot;: &quot;Telly.Beier&apos;s primary note&quot;,&#xd;
      &quot;is_pre_approved&quot;: true,&#xd;
      &quot;is_primary&quot;: true,&#xd;
      &quot;status&quot;: 1,&#xd;
      &quot;stage&quot;: &quot;prospect&quot;,&#xd;
      &quot;lead_type&quot;: &quot;rent&quot;,&#xd;
      &quot;is_starred&quot;: false,&#xd;
      &quot;available_to_contact_date&quot;: &quot;2019-05-25&quot;,&#xd;
      &quot;pre_approved_amount&quot;: 6,&#xd;
      &quot;number_in_household&quot;: 13,&#xd;
      &quot;background_info&quot;: &quot;bg info&quot;,&#xd;
      &quot;profession_title&quot;: &quot;Teller&quot;,&#xd;
      &quot;profession_department&quot;: &quot;Logistics&quot;,&#xd;
      &quot;is_connected&quot;: true,&#xd;
	 &quot;system-metas&quot;: [&#xd;
        {&#xd;
          &quot;id&quot;: 0,&#xd;
          &quot;name&quot;: &quot;piesync&quot;,&#xd;
          &quot;variable&quot;: &quot;piesync_trash&quot;,&#xd;
          &quot;type&quot;: &quot;1&quot;,&#xd;
          &quot;value&quot;: &quot;true&quot;&#xd;
        }&#xd;
      ],&#xd;
      &quot;team_id&quot;: 1,&#xd;
      &quot;primary_address&quot;: &quot;address 1&quot;,&#xd;
      &quot;language&quot;: &quot;en&quot;,&#xd;
      &quot;initial_contact_date&quot;: &quot;2017-06-23 20:27:16&quot;&#xd;
    },&#xd;
    &quot;relationships&quot;: {&#xd;
      &quot;contact-leads&quot;: {&#xd;
        &quot;data&quot;: {&#xd;
          &quot;id&quot;: 12,&#xd;
          &quot;attributes&quot;: {&#xd;
            &quot;route_id&quot;: 3,&#xd;
            &quot;is_buyer&quot;: 1,&#xd;
            &quot;is_team&quot;: 1,&#xd;
            &quot;seller_listing_address&quot;: &quot;917 4th St. Millville, NJ 08332&quot;,&#xd;
            &quot;buyer_price_min&quot;: 71000,&#xd;
            &quot;buyer_price_max&quot;: 121000,&#xd;
            &quot;is_assigned&quot;: 1,&#xd;
            &quot;assignment&quot;: &quot;as&quot;,&#xd;
            &quot;leader_id&quot;: 13,&#xd;
            &quot;status&quot;: 10,&#xd;
            &quot;preferred_contact_by&quot;: &quot;email&quot;,&#xd;
            &quot;about&quot;: &quot;about&quot;,&#xd;
            &quot;description&quot;: &quot;desc&quot;&#xd;
          }&#xd;
        }&#xd;
      },&#xd;
      &quot;addresses&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;address_line_1&quot;: &quot;wow&quot;,&#xd;
              &quot;address_line_2&quot;: &quot;wow&quot;,&#xd;
              &quot;address_line_3&quot;: &quot;wow&quot;,&#xd;
              &quot;address_line_4&quot;: &quot;wow&quot;,&#xd;
              &quot;city&quot;: &quot;wow&quot;,&#xd;
              &quot;city_locality&quot;: &quot;cupiditate 4&quot;,&#xd;
              &quot;state_region&quot;: &quot;wow&quot;,&#xd;
              &quot;country&quot;: &quot;Indonesia&quot;,&#xd;
              &quot;postal_code&quot;: &quot;16810&quot;,&#xd;
              &quot;lat&quot;: -57.359989,&#xd;
              &quot;lng&quot;: 54.022906,&#xd;
              &quot;is_current&quot;: false,&#xd;
              &quot;ownership_status&quot;: 2,&#xd;
              &quot;description&quot;: &quot;Best place in the world 14&quot;,&#xd;
              &quot;neighborhood&quot;: &quot;some neighborhood&quot;,&#xd;
              &quot;is_primary&quot;: true,&#xd;
              &quot;label&quot;: &quot;home&quot;,&#xd;
              &quot;is_mailing_address&quot;: true&#xd;
            }&#xd;
          },&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;address_line_1&quot;: &quot;232&quot;,&#xd;
              &quot;address_line_2&quot;: &quot;wow&quot;,&#xd;
              &quot;address_line_3&quot;: &quot;wow&quot;,&#xd;
              &quot;address_line_4&quot;: &quot;wow&quot;,&#xd;
              &quot;city&quot;: &quot;wow&quot;,&#xd;
              &quot;city_locality&quot;: &quot;cupiditate 4&quot;,&#xd;
              &quot;state_region&quot;: &quot;wow&quot;,&#xd;
              &quot;country&quot;: &quot;Indonesia&quot;,&#xd;
              &quot;postal_code&quot;: &quot;16810&quot;,&#xd;
              &quot;lat&quot;: -57.359989,&#xd;
              &quot;lng&quot;: 54.022906,&#xd;
              &quot;is_current&quot;: false,&#xd;
              &quot;ownership_status&quot;: 2,&#xd;
              &quot;description&quot;: &quot;Best place in the world 14&quot;,&#xd;
              &quot;neighborhood&quot;: &quot;some neighborhood&quot;,&#xd;
              &quot;is_primary&quot;: true,&#xd;
              &quot;label&quot;: &quot;home&quot;,&#xd;
              &quot;is_mailing_address&quot;: true&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;phones&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;number&quot;: &quot;202-555-7341&quot;,&#xd;
              &quot;country_code&quot;: &quot;US&quot;,&#xd;
              &quot;formatted_number&quot;: &quot;202-555-7341&quot;,&#xd;
              &quot;is_primary&quot;: true,&#xd;
              &quot;is_current&quot;: true,&#xd;
              &quot;label&quot;: &quot;home&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;notes&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;note&quot;: &quot;update new&quot;,&#xd;
              &quot;title&quot;: &quot;updated title 2&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;sources&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;label&quot;: &quot;KW Website&quot;,&#xd;
              &quot;is_archived&quot;: 0,&#xd;
              &quot;vendor&quot;: &quot;ow&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;social-accounts&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;social_network_id&quot;: 1,&#xd;
              &quot;identifier&quot;: &quot;example1&quot;,&#xd;
              &quot;url&quot;: &quot;https://www.facebook.com/example2&quot;&#xd;
            }&#xd;
          },&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;social_network_id&quot;: 1,&#xd;
              &quot;identifier&quot;: &quot;example4&quot;,&#xd;
              &quot;url&quot;: &quot;https://www.facebook.com/example1&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;object-custom-fields&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;custom_field&quot;: &quot;4 notes&quot;,&#xd;
              &quot;custom_field_value&quot;: &quot;another&quot;,&#xd;
              &quot;custom_field_tag&quot;: {&#xd;
                &quot;tag&quot;: &quot;blender&quot;,&#xd;
                &quot;color&quot;: &quot;blue&quot;&#xd;
              }&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      }&#xd;
    }&#xd;
  }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49587">201</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON idContact Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">idContactExtractor1</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">data.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
          <stringProp name="ConstantTimer.delay">500</stringProp>
        </ConstantTimer>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Create Contact 2 Request" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;attributes&quot;: {&#xd;
      &quot;prefix&quot;: &quot;Mr&quot;,&#xd;
      &quot;first_name&quot;: &quot;Telly&quot;,&#xd;
      &quot;middle_name&quot;: &quot;Senior&quot;,&#xd;
      &quot;last_name&quot;: &quot;Beier&quot;,&#xd;
      &quot;preferred_name&quot;: &quot;Telly Beier&quot;,&#xd;
      &quot;legal_name&quot;: &quot;Telly Senior Beier&quot;,&#xd;
      &quot;suffix&quot;: &quot;I&quot;,&#xd;
      &quot;date_of_birth&quot;: &quot;2019-05-25&quot;,&#xd;
      &quot;timeframe&quot;: &quot;1 to 12 months&quot;,&#xd;
      &quot;contact_types&quot;: [&#xd;
        &quot;buyer&quot;,&#xd;
        &quot;seller&quot;,&#xd;
        &quot;vendor&quot;,&#xd;
        &quot;investor&quot;,&#xd;
        &quot;agent&quot;,&#xd;
        &quot;lender&quot;,&#xd;
        &quot;past clients&quot;&#xd;
      ],&#xd;
      &quot;motivations&quot;: [&#xd;
        &quot;moving-up&quot;,&#xd;
        &quot;downsizing&quot;,&#xd;
        &quot;vacation-home&quot;,&#xd;
        &quot;first-home&quot;,&#xd;
        &quot;schools&quot;,&#xd;
        &quot;relocation&quot;,&#xd;
        &quot;retirement&quot;,&#xd;
        &quot;personal&quot;,&#xd;
        &quot;financial&quot;&#xd;
      ],&#xd;
      &quot;phase&quot;: 1,&#xd;
      &quot;primary_motivation_note&quot;: &quot;Telly.Beier&apos;s primary note&quot;,&#xd;
      &quot;is_pre_approved&quot;: true,&#xd;
      &quot;is_primary&quot;: true,&#xd;
      &quot;status&quot;: 1,&#xd;
      &quot;stage&quot;: &quot;prospect&quot;,&#xd;
      &quot;lead_type&quot;: &quot;rent&quot;,&#xd;
      &quot;is_starred&quot;: false,&#xd;
      &quot;available_to_contact_date&quot;: &quot;2019-05-25&quot;,&#xd;
      &quot;pre_approved_amount&quot;: 6,&#xd;
      &quot;number_in_household&quot;: 13,&#xd;
      &quot;background_info&quot;: &quot;bg info&quot;,&#xd;
      &quot;profession_title&quot;: &quot;Teller&quot;,&#xd;
      &quot;profession_department&quot;: &quot;Logistics&quot;,&#xd;
      &quot;is_connected&quot;: true,&#xd;
	 &quot;system-metas&quot;: [&#xd;
        {&#xd;
          &quot;id&quot;: 0,&#xd;
          &quot;name&quot;: &quot;piesync&quot;,&#xd;
          &quot;variable&quot;: &quot;piesync_trash&quot;,&#xd;
          &quot;type&quot;: &quot;1&quot;,&#xd;
          &quot;value&quot;: &quot;true&quot;&#xd;
        }&#xd;
      ],&#xd;
      &quot;team_id&quot;: 1,&#xd;
      &quot;primary_address&quot;: &quot;address 1&quot;,&#xd;
      &quot;language&quot;: &quot;en&quot;,&#xd;
      &quot;initial_contact_date&quot;: &quot;2017-06-23 20:27:16&quot;&#xd;
    },&#xd;
    &quot;relationships&quot;: {&#xd;
      &quot;contact-leads&quot;: {&#xd;
        &quot;data&quot;: {&#xd;
          &quot;id&quot;: 12,&#xd;
          &quot;attributes&quot;: {&#xd;
            &quot;route_id&quot;: 3,&#xd;
            &quot;is_buyer&quot;: 1,&#xd;
            &quot;is_team&quot;: 1,&#xd;
            &quot;seller_listing_address&quot;: &quot;917 4th St. Millville, NJ 08332&quot;,&#xd;
            &quot;buyer_price_min&quot;: 71000,&#xd;
            &quot;buyer_price_max&quot;: 121000,&#xd;
            &quot;is_assigned&quot;: 1,&#xd;
            &quot;assignment&quot;: &quot;as&quot;,&#xd;
            &quot;leader_id&quot;: 13,&#xd;
            &quot;status&quot;: 10,&#xd;
            &quot;preferred_contact_by&quot;: &quot;email&quot;,&#xd;
            &quot;about&quot;: &quot;about&quot;,&#xd;
            &quot;description&quot;: &quot;desc&quot;&#xd;
          }&#xd;
        }&#xd;
      },&#xd;
      &quot;addresses&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;address_line_1&quot;: &quot;wow&quot;,&#xd;
              &quot;address_line_2&quot;: &quot;wow&quot;,&#xd;
              &quot;address_line_3&quot;: &quot;wow&quot;,&#xd;
              &quot;address_line_4&quot;: &quot;wow&quot;,&#xd;
              &quot;city&quot;: &quot;wow&quot;,&#xd;
              &quot;city_locality&quot;: &quot;cupiditate 4&quot;,&#xd;
              &quot;state_region&quot;: &quot;wow&quot;,&#xd;
              &quot;country&quot;: &quot;Indonesia&quot;,&#xd;
              &quot;postal_code&quot;: &quot;16810&quot;,&#xd;
              &quot;lat&quot;: -57.359989,&#xd;
              &quot;lng&quot;: 54.022906,&#xd;
              &quot;is_current&quot;: false,&#xd;
              &quot;ownership_status&quot;: 2,&#xd;
              &quot;description&quot;: &quot;Best place in the world 14&quot;,&#xd;
              &quot;neighborhood&quot;: &quot;some neighborhood&quot;,&#xd;
              &quot;is_primary&quot;: true,&#xd;
              &quot;label&quot;: &quot;home&quot;,&#xd;
              &quot;is_mailing_address&quot;: true&#xd;
            }&#xd;
          },&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;address_line_1&quot;: &quot;232&quot;,&#xd;
              &quot;address_line_2&quot;: &quot;wow&quot;,&#xd;
              &quot;address_line_3&quot;: &quot;wow&quot;,&#xd;
              &quot;address_line_4&quot;: &quot;wow&quot;,&#xd;
              &quot;city&quot;: &quot;wow&quot;,&#xd;
              &quot;city_locality&quot;: &quot;cupiditate 4&quot;,&#xd;
              &quot;state_region&quot;: &quot;wow&quot;,&#xd;
              &quot;country&quot;: &quot;Indonesia&quot;,&#xd;
              &quot;postal_code&quot;: &quot;16810&quot;,&#xd;
              &quot;lat&quot;: -57.359989,&#xd;
              &quot;lng&quot;: 54.022906,&#xd;
              &quot;is_current&quot;: false,&#xd;
              &quot;ownership_status&quot;: 2,&#xd;
              &quot;description&quot;: &quot;Best place in the world 14&quot;,&#xd;
              &quot;neighborhood&quot;: &quot;some neighborhood&quot;,&#xd;
              &quot;is_primary&quot;: true,&#xd;
              &quot;label&quot;: &quot;home&quot;,&#xd;
              &quot;is_mailing_address&quot;: true&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;phones&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;number&quot;: &quot;202-555-7341&quot;,&#xd;
              &quot;country_code&quot;: &quot;US&quot;,&#xd;
              &quot;formatted_number&quot;: &quot;202-555-7341&quot;,&#xd;
              &quot;is_primary&quot;: true,&#xd;
              &quot;is_current&quot;: true,&#xd;
              &quot;label&quot;: &quot;home&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;notes&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;note&quot;: &quot;update new&quot;,&#xd;
              &quot;title&quot;: &quot;updated title 2&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;sources&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;label&quot;: &quot;KW Website&quot;,&#xd;
              &quot;is_archived&quot;: 0,&#xd;
              &quot;vendor&quot;: &quot;ow&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;social-accounts&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;social_network_id&quot;: 1,&#xd;
              &quot;identifier&quot;: &quot;example1&quot;,&#xd;
              &quot;url&quot;: &quot;https://www.facebook.com/example2&quot;&#xd;
            }&#xd;
          },&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;social_network_id&quot;: 1,&#xd;
              &quot;identifier&quot;: &quot;example4&quot;,&#xd;
              &quot;url&quot;: &quot;https://www.facebook.com/example1&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;object-custom-fields&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;custom_field&quot;: &quot;4 notes&quot;,&#xd;
              &quot;custom_field_value&quot;: &quot;another&quot;,&#xd;
              &quot;custom_field_tag&quot;: {&#xd;
                &quot;tag&quot;: &quot;blender&quot;,&#xd;
                &quot;color&quot;: &quot;blue&quot;&#xd;
              }&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      }&#xd;
    }&#xd;
  }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49587">201</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON idContact Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">idContactExtractor2</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">data.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
          <stringProp name="ConstantTimer.delay">500</stringProp>
        </ConstantTimer>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Create Contact 3 Request" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;attributes&quot;: {&#xd;
      &quot;prefix&quot;: &quot;Mr&quot;,&#xd;
      &quot;first_name&quot;: &quot;Telly&quot;,&#xd;
      &quot;middle_name&quot;: &quot;Senior&quot;,&#xd;
      &quot;last_name&quot;: &quot;Beier&quot;,&#xd;
      &quot;preferred_name&quot;: &quot;Telly Beier&quot;,&#xd;
      &quot;legal_name&quot;: &quot;Telly Senior Beier&quot;,&#xd;
      &quot;suffix&quot;: &quot;I&quot;,&#xd;
      &quot;date_of_birth&quot;: &quot;2019-05-25&quot;,&#xd;
      &quot;timeframe&quot;: &quot;1 to 12 months&quot;,&#xd;
      &quot;contact_types&quot;: [&#xd;
        &quot;buyer&quot;,&#xd;
        &quot;seller&quot;,&#xd;
        &quot;vendor&quot;,&#xd;
        &quot;investor&quot;,&#xd;
        &quot;agent&quot;,&#xd;
        &quot;lender&quot;,&#xd;
        &quot;past clients&quot;&#xd;
      ],&#xd;
      &quot;motivations&quot;: [&#xd;
        &quot;moving-up&quot;,&#xd;
        &quot;downsizing&quot;,&#xd;
        &quot;vacation-home&quot;,&#xd;
        &quot;first-home&quot;,&#xd;
        &quot;schools&quot;,&#xd;
        &quot;relocation&quot;,&#xd;
        &quot;retirement&quot;,&#xd;
        &quot;personal&quot;,&#xd;
        &quot;financial&quot;&#xd;
      ],&#xd;
      &quot;phase&quot;: 1,&#xd;
      &quot;primary_motivation_note&quot;: &quot;Telly.Beier&apos;s primary note&quot;,&#xd;
      &quot;is_pre_approved&quot;: true,&#xd;
      &quot;is_primary&quot;: true,&#xd;
      &quot;status&quot;: 1,&#xd;
      &quot;stage&quot;: &quot;prospect&quot;,&#xd;
      &quot;lead_type&quot;: &quot;rent&quot;,&#xd;
      &quot;is_starred&quot;: false,&#xd;
      &quot;available_to_contact_date&quot;: &quot;2019-05-25&quot;,&#xd;
      &quot;pre_approved_amount&quot;: 6,&#xd;
      &quot;number_in_household&quot;: 13,&#xd;
      &quot;background_info&quot;: &quot;bg info&quot;,&#xd;
      &quot;profession_title&quot;: &quot;Teller&quot;,&#xd;
      &quot;profession_department&quot;: &quot;Logistics&quot;,&#xd;
      &quot;is_connected&quot;: true,&#xd;
	 &quot;system-metas&quot;: [&#xd;
        {&#xd;
          &quot;id&quot;: 0,&#xd;
          &quot;name&quot;: &quot;piesync&quot;,&#xd;
          &quot;variable&quot;: &quot;piesync_trash&quot;,&#xd;
          &quot;type&quot;: &quot;1&quot;,&#xd;
          &quot;value&quot;: &quot;true&quot;&#xd;
        }&#xd;
      ],&#xd;
      &quot;team_id&quot;: 1,&#xd;
      &quot;primary_address&quot;: &quot;address 1&quot;,&#xd;
      &quot;language&quot;: &quot;en&quot;,&#xd;
      &quot;initial_contact_date&quot;: &quot;2017-06-23 20:27:16&quot;&#xd;
    },&#xd;
    &quot;relationships&quot;: {&#xd;
      &quot;contact-leads&quot;: {&#xd;
        &quot;data&quot;: {&#xd;
          &quot;id&quot;: 12,&#xd;
          &quot;attributes&quot;: {&#xd;
            &quot;route_id&quot;: 3,&#xd;
            &quot;is_buyer&quot;: 1,&#xd;
            &quot;is_team&quot;: 1,&#xd;
            &quot;seller_listing_address&quot;: &quot;917 4th St. Millville, NJ 08332&quot;,&#xd;
            &quot;buyer_price_min&quot;: 71000,&#xd;
            &quot;buyer_price_max&quot;: 121000,&#xd;
            &quot;is_assigned&quot;: 1,&#xd;
            &quot;assignment&quot;: &quot;as&quot;,&#xd;
            &quot;leader_id&quot;: 13,&#xd;
            &quot;status&quot;: 10,&#xd;
            &quot;preferred_contact_by&quot;: &quot;email&quot;,&#xd;
            &quot;about&quot;: &quot;about&quot;,&#xd;
            &quot;description&quot;: &quot;desc&quot;&#xd;
          }&#xd;
        }&#xd;
      },&#xd;
      &quot;addresses&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;address_line_1&quot;: &quot;wow&quot;,&#xd;
              &quot;address_line_2&quot;: &quot;wow&quot;,&#xd;
              &quot;address_line_3&quot;: &quot;wow&quot;,&#xd;
              &quot;address_line_4&quot;: &quot;wow&quot;,&#xd;
              &quot;city&quot;: &quot;wow&quot;,&#xd;
              &quot;city_locality&quot;: &quot;cupiditate 4&quot;,&#xd;
              &quot;state_region&quot;: &quot;wow&quot;,&#xd;
              &quot;country&quot;: &quot;Indonesia&quot;,&#xd;
              &quot;postal_code&quot;: &quot;16810&quot;,&#xd;
              &quot;lat&quot;: -57.359989,&#xd;
              &quot;lng&quot;: 54.022906,&#xd;
              &quot;is_current&quot;: false,&#xd;
              &quot;ownership_status&quot;: 2,&#xd;
              &quot;description&quot;: &quot;Best place in the world 14&quot;,&#xd;
              &quot;neighborhood&quot;: &quot;some neighborhood&quot;,&#xd;
              &quot;is_primary&quot;: true,&#xd;
              &quot;label&quot;: &quot;home&quot;,&#xd;
              &quot;is_mailing_address&quot;: true&#xd;
            }&#xd;
          },&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;address_line_1&quot;: &quot;232&quot;,&#xd;
              &quot;address_line_2&quot;: &quot;wow&quot;,&#xd;
              &quot;address_line_3&quot;: &quot;wow&quot;,&#xd;
              &quot;address_line_4&quot;: &quot;wow&quot;,&#xd;
              &quot;city&quot;: &quot;wow&quot;,&#xd;
              &quot;city_locality&quot;: &quot;cupiditate 4&quot;,&#xd;
              &quot;state_region&quot;: &quot;wow&quot;,&#xd;
              &quot;country&quot;: &quot;Indonesia&quot;,&#xd;
              &quot;postal_code&quot;: &quot;16810&quot;,&#xd;
              &quot;lat&quot;: -57.359989,&#xd;
              &quot;lng&quot;: 54.022906,&#xd;
              &quot;is_current&quot;: false,&#xd;
              &quot;ownership_status&quot;: 2,&#xd;
              &quot;description&quot;: &quot;Best place in the world 14&quot;,&#xd;
              &quot;neighborhood&quot;: &quot;some neighborhood&quot;,&#xd;
              &quot;is_primary&quot;: true,&#xd;
              &quot;label&quot;: &quot;home&quot;,&#xd;
              &quot;is_mailing_address&quot;: true&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;phones&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;number&quot;: &quot;202-555-7341&quot;,&#xd;
              &quot;country_code&quot;: &quot;US&quot;,&#xd;
              &quot;formatted_number&quot;: &quot;202-555-7341&quot;,&#xd;
              &quot;is_primary&quot;: true,&#xd;
              &quot;is_current&quot;: true,&#xd;
              &quot;label&quot;: &quot;home&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;notes&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;note&quot;: &quot;update new&quot;,&#xd;
              &quot;title&quot;: &quot;updated title 2&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;sources&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;label&quot;: &quot;KW Website&quot;,&#xd;
              &quot;is_archived&quot;: 0,&#xd;
              &quot;vendor&quot;: &quot;ow&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;social-accounts&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;social_network_id&quot;: 1,&#xd;
              &quot;identifier&quot;: &quot;example1&quot;,&#xd;
              &quot;url&quot;: &quot;https://www.facebook.com/example2&quot;&#xd;
            }&#xd;
          },&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;social_network_id&quot;: 1,&#xd;
              &quot;identifier&quot;: &quot;example4&quot;,&#xd;
              &quot;url&quot;: &quot;https://www.facebook.com/example1&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;object-custom-fields&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;custom_field&quot;: &quot;4 notes&quot;,&#xd;
              &quot;custom_field_value&quot;: &quot;another&quot;,&#xd;
              &quot;custom_field_tag&quot;: {&#xd;
                &quot;tag&quot;: &quot;blender&quot;,&#xd;
                &quot;color&quot;: &quot;blue&quot;&#xd;
              }&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      }&#xd;
    }&#xd;
  }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49587">201</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON idContact Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">idContactExtractor3</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">data.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Delete Multi Contact Request" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;: [&#xd;
    {&#xd;
      &quot;id&quot;: ${idContactExtractor1},&#xd;
      &quot;type&quot;: &quot;contacts&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: ${idContactExtractor2},&#xd;
      &quot;type&quot;: &quot;contacts&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: ${idContactExtractor3},&#xd;
      &quot;type&quot;: &quot;contacts&quot;&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts/</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Restore  Multi Contact Request" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;: [&#xd;
    {&#xd;
      &quot;id&quot;: ${idContactExtractor1},&#xd;
      &quot;type&quot;: &quot;contacts&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: ${idContactExtractor2},&#xd;
      &quot;type&quot;: &quot;contacts&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: ${idContactExtractor3},&#xd;
      &quot;type&quot;: &quot;contacts&quot;&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts/multiple-restore</stringProp>
          <stringProp name="HTTPSampler.method">PATCH</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.meta.restore_count" enabled="true">
            <stringProp name="JSON_PATH">$.meta.restore_count</stringProp>
            <stringProp name="EXPECTED_VALUE">3</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.meta.status[0].id" enabled="true">
            <stringProp name="JSON_PATH">$.meta.status[0].id</stringProp>
            <stringProp name="EXPECTED_VALUE">${idContactExtractor1}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.meta.status[0].is_restored" enabled="true">
            <stringProp name="JSON_PATH">$.meta.status[0].is_restored</stringProp>
            <stringProp name="EXPECTED_VALUE">true</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.meta.status[1].id" enabled="true">
            <stringProp name="JSON_PATH">$.meta.status[1].id</stringProp>
            <stringProp name="EXPECTED_VALUE">${idContactExtractor2}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.meta.status[1].is_restored" enabled="true">
            <stringProp name="JSON_PATH">$.meta.status[1].is_restored</stringProp>
            <stringProp name="EXPECTED_VALUE">true</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.meta.status[2].id" enabled="true">
            <stringProp name="JSON_PATH">$.meta.status[2].id</stringProp>
            <stringProp name="EXPECTED_VALUE">${idContactExtractor3}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.meta.status[1].is_restored" enabled="true">
            <stringProp name="JSON_PATH">$.meta.status[1].is_restored</stringProp>
            <stringProp name="EXPECTED_VALUE">true</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread System Metas Update Piesync Module Group v2" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">Bearer ${__property(v_access_token)}</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">x-api-sync</stringProp>
              <stringProp name="Header.value">1</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept</stringProp>
              <stringProp name="Header.value">application/vnd.api+json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">cache-control</stringProp>
              <stringProp name="Header.value">no-cache</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">X-API-RESTORE</stringProp>
              <stringProp name="Header.value">1</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Create Contact 1 Request" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;attributes&quot;: {&#xd;
      &quot;prefix&quot;: &quot;Mr&quot;,&#xd;
      &quot;first_name&quot;: &quot;Telly&quot;,&#xd;
      &quot;middle_name&quot;: &quot;Senior&quot;,&#xd;
      &quot;last_name&quot;: &quot;Beier&quot;,&#xd;
      &quot;preferred_name&quot;: &quot;Telly Beier&quot;,&#xd;
      &quot;legal_name&quot;: &quot;Telly Senior Beier&quot;,&#xd;
      &quot;suffix&quot;: &quot;I&quot;,&#xd;
      &quot;date_of_birth&quot;: &quot;2019-05-25&quot;,&#xd;
      &quot;timeframe&quot;: &quot;1 to 12 months&quot;,&#xd;
      &quot;contact_types&quot;: [&#xd;
        &quot;buyer&quot;,&#xd;
        &quot;seller&quot;,&#xd;
        &quot;vendor&quot;,&#xd;
        &quot;investor&quot;,&#xd;
        &quot;agent&quot;,&#xd;
        &quot;lender&quot;,&#xd;
        &quot;past clients&quot;&#xd;
      ],&#xd;
      &quot;motivations&quot;: [&#xd;
        &quot;moving-up&quot;,&#xd;
        &quot;downsizing&quot;,&#xd;
        &quot;vacation-home&quot;,&#xd;
        &quot;first-home&quot;,&#xd;
        &quot;schools&quot;,&#xd;
        &quot;relocation&quot;,&#xd;
        &quot;retirement&quot;,&#xd;
        &quot;personal&quot;,&#xd;
        &quot;financial&quot;&#xd;
      ],&#xd;
      &quot;phase&quot;: 1,&#xd;
      &quot;primary_motivation_note&quot;: &quot;Telly.Beier&apos;s primary note&quot;,&#xd;
      &quot;is_pre_approved&quot;: true,&#xd;
      &quot;is_primary&quot;: true,&#xd;
      &quot;status&quot;: 1,&#xd;
      &quot;stage&quot;: &quot;prospect&quot;,&#xd;
      &quot;lead_type&quot;: &quot;rent&quot;,&#xd;
      &quot;is_starred&quot;: false,&#xd;
      &quot;available_to_contact_date&quot;: &quot;2019-05-25&quot;,&#xd;
      &quot;pre_approved_amount&quot;: 6,&#xd;
      &quot;number_in_household&quot;: 13,&#xd;
      &quot;background_info&quot;: &quot;bg info&quot;,&#xd;
      &quot;profession_title&quot;: &quot;Teller&quot;,&#xd;
      &quot;profession_department&quot;: &quot;Logistics&quot;,&#xd;
      &quot;is_connected&quot;: true,&#xd;
	 &quot;system-metas&quot;: [&#xd;
        {&#xd;
          &quot;id&quot;: 0,&#xd;
          &quot;name&quot;: &quot;piesync&quot;,&#xd;
          &quot;variable&quot;: &quot;piesync_trash&quot;,&#xd;
          &quot;type&quot;: &quot;1&quot;,&#xd;
          &quot;value&quot;: &quot;true&quot;&#xd;
        }&#xd;
      ],&#xd;
      &quot;team_id&quot;: 1,&#xd;
      &quot;primary_address&quot;: &quot;address 1&quot;,&#xd;
      &quot;language&quot;: &quot;en&quot;,&#xd;
      &quot;initial_contact_date&quot;: &quot;2017-06-23 20:27:16&quot;&#xd;
    },&#xd;
    &quot;relationships&quot;: {&#xd;
      &quot;contact-leads&quot;: {&#xd;
        &quot;data&quot;: {&#xd;
          &quot;id&quot;: 12,&#xd;
          &quot;attributes&quot;: {&#xd;
            &quot;route_id&quot;: 3,&#xd;
            &quot;is_buyer&quot;: 1,&#xd;
            &quot;is_team&quot;: 1,&#xd;
            &quot;seller_listing_address&quot;: &quot;917 4th St. Millville, NJ 08332&quot;,&#xd;
            &quot;buyer_price_min&quot;: 71000,&#xd;
            &quot;buyer_price_max&quot;: 121000,&#xd;
            &quot;is_assigned&quot;: 1,&#xd;
            &quot;assignment&quot;: &quot;as&quot;,&#xd;
            &quot;leader_id&quot;: 13,&#xd;
            &quot;status&quot;: 10,&#xd;
            &quot;preferred_contact_by&quot;: &quot;email&quot;,&#xd;
            &quot;about&quot;: &quot;about&quot;,&#xd;
            &quot;description&quot;: &quot;desc&quot;&#xd;
          }&#xd;
        }&#xd;
      },&#xd;
      &quot;addresses&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;address_line_1&quot;: &quot;wow&quot;,&#xd;
              &quot;address_line_2&quot;: &quot;wow&quot;,&#xd;
              &quot;address_line_3&quot;: &quot;wow&quot;,&#xd;
              &quot;address_line_4&quot;: &quot;wow&quot;,&#xd;
              &quot;city&quot;: &quot;wow&quot;,&#xd;
              &quot;city_locality&quot;: &quot;cupiditate 4&quot;,&#xd;
              &quot;state_region&quot;: &quot;wow&quot;,&#xd;
              &quot;country&quot;: &quot;Indonesia&quot;,&#xd;
              &quot;postal_code&quot;: &quot;16810&quot;,&#xd;
              &quot;lat&quot;: -57.359989,&#xd;
              &quot;lng&quot;: 54.022906,&#xd;
              &quot;is_current&quot;: false,&#xd;
              &quot;ownership_status&quot;: 2,&#xd;
              &quot;description&quot;: &quot;Best place in the world 14&quot;,&#xd;
              &quot;neighborhood&quot;: &quot;some neighborhood&quot;,&#xd;
              &quot;is_primary&quot;: true,&#xd;
              &quot;label&quot;: &quot;home&quot;,&#xd;
              &quot;is_mailing_address&quot;: true&#xd;
            }&#xd;
          },&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;address_line_1&quot;: &quot;232&quot;,&#xd;
              &quot;address_line_2&quot;: &quot;wow&quot;,&#xd;
              &quot;address_line_3&quot;: &quot;wow&quot;,&#xd;
              &quot;address_line_4&quot;: &quot;wow&quot;,&#xd;
              &quot;city&quot;: &quot;wow&quot;,&#xd;
              &quot;city_locality&quot;: &quot;cupiditate 4&quot;,&#xd;
              &quot;state_region&quot;: &quot;wow&quot;,&#xd;
              &quot;country&quot;: &quot;Indonesia&quot;,&#xd;
              &quot;postal_code&quot;: &quot;16810&quot;,&#xd;
              &quot;lat&quot;: -57.359989,&#xd;
              &quot;lng&quot;: 54.022906,&#xd;
              &quot;is_current&quot;: false,&#xd;
              &quot;ownership_status&quot;: 2,&#xd;
              &quot;description&quot;: &quot;Best place in the world 14&quot;,&#xd;
              &quot;neighborhood&quot;: &quot;some neighborhood&quot;,&#xd;
              &quot;is_primary&quot;: true,&#xd;
              &quot;label&quot;: &quot;home&quot;,&#xd;
              &quot;is_mailing_address&quot;: true&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;phones&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;number&quot;: &quot;202-555-7341&quot;,&#xd;
              &quot;country_code&quot;: &quot;US&quot;,&#xd;
              &quot;formatted_number&quot;: &quot;202-555-7341&quot;,&#xd;
              &quot;is_primary&quot;: true,&#xd;
              &quot;is_current&quot;: true,&#xd;
              &quot;label&quot;: &quot;home&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;notes&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;note&quot;: &quot;update new&quot;,&#xd;
              &quot;title&quot;: &quot;updated title 2&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;sources&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;label&quot;: &quot;KW Website&quot;,&#xd;
              &quot;is_archived&quot;: 0,&#xd;
              &quot;vendor&quot;: &quot;ow&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;social-accounts&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;social_network_id&quot;: 1,&#xd;
              &quot;identifier&quot;: &quot;example1&quot;,&#xd;
              &quot;url&quot;: &quot;https://www.facebook.com/example2&quot;&#xd;
            }&#xd;
          },&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;social_network_id&quot;: 1,&#xd;
              &quot;identifier&quot;: &quot;example4&quot;,&#xd;
              &quot;url&quot;: &quot;https://www.facebook.com/example1&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;object-custom-fields&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;custom_field&quot;: &quot;4 notes&quot;,&#xd;
              &quot;custom_field_value&quot;: &quot;another&quot;,&#xd;
              &quot;custom_field_tag&quot;: {&#xd;
                &quot;tag&quot;: &quot;blender&quot;,&#xd;
                &quot;color&quot;: &quot;blue&quot;&#xd;
              }&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      }&#xd;
    }&#xd;
  }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49587">201</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON idContact Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">idContactExtractor1</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">data.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
          <stringProp name="ConstantTimer.delay">500</stringProp>
        </ConstantTimer>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Create Contact 2 Request" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;attributes&quot;: {&#xd;
      &quot;prefix&quot;: &quot;Mr&quot;,&#xd;
      &quot;first_name&quot;: &quot;Telly&quot;,&#xd;
      &quot;middle_name&quot;: &quot;Senior&quot;,&#xd;
      &quot;last_name&quot;: &quot;Beier&quot;,&#xd;
      &quot;preferred_name&quot;: &quot;Telly Beier&quot;,&#xd;
      &quot;legal_name&quot;: &quot;Telly Senior Beier&quot;,&#xd;
      &quot;suffix&quot;: &quot;I&quot;,&#xd;
      &quot;date_of_birth&quot;: &quot;2019-05-25&quot;,&#xd;
      &quot;timeframe&quot;: &quot;1 to 12 months&quot;,&#xd;
      &quot;contact_types&quot;: [&#xd;
        &quot;buyer&quot;,&#xd;
        &quot;seller&quot;,&#xd;
        &quot;vendor&quot;,&#xd;
        &quot;investor&quot;,&#xd;
        &quot;agent&quot;,&#xd;
        &quot;lender&quot;,&#xd;
        &quot;past clients&quot;&#xd;
      ],&#xd;
      &quot;motivations&quot;: [&#xd;
        &quot;moving-up&quot;,&#xd;
        &quot;downsizing&quot;,&#xd;
        &quot;vacation-home&quot;,&#xd;
        &quot;first-home&quot;,&#xd;
        &quot;schools&quot;,&#xd;
        &quot;relocation&quot;,&#xd;
        &quot;retirement&quot;,&#xd;
        &quot;personal&quot;,&#xd;
        &quot;financial&quot;&#xd;
      ],&#xd;
      &quot;phase&quot;: 1,&#xd;
      &quot;primary_motivation_note&quot;: &quot;Telly.Beier&apos;s primary note&quot;,&#xd;
      &quot;is_pre_approved&quot;: true,&#xd;
      &quot;is_primary&quot;: true,&#xd;
      &quot;status&quot;: 1,&#xd;
      &quot;stage&quot;: &quot;prospect&quot;,&#xd;
      &quot;lead_type&quot;: &quot;rent&quot;,&#xd;
      &quot;is_starred&quot;: false,&#xd;
      &quot;available_to_contact_date&quot;: &quot;2019-05-25&quot;,&#xd;
      &quot;pre_approved_amount&quot;: 6,&#xd;
      &quot;number_in_household&quot;: 13,&#xd;
      &quot;background_info&quot;: &quot;bg info&quot;,&#xd;
      &quot;profession_title&quot;: &quot;Teller&quot;,&#xd;
      &quot;profession_department&quot;: &quot;Logistics&quot;,&#xd;
      &quot;is_connected&quot;: true,&#xd;
	 &quot;system-metas&quot;: [&#xd;
        {&#xd;
          &quot;id&quot;: 0,&#xd;
          &quot;name&quot;: &quot;piesync&quot;,&#xd;
          &quot;variable&quot;: &quot;piesync_trash&quot;,&#xd;
          &quot;type&quot;: &quot;1&quot;,&#xd;
          &quot;value&quot;: &quot;true&quot;&#xd;
        }&#xd;
      ],&#xd;
      &quot;team_id&quot;: 1,&#xd;
      &quot;primary_address&quot;: &quot;address 1&quot;,&#xd;
      &quot;language&quot;: &quot;en&quot;,&#xd;
      &quot;initial_contact_date&quot;: &quot;2017-06-23 20:27:16&quot;&#xd;
    },&#xd;
    &quot;relationships&quot;: {&#xd;
      &quot;contact-leads&quot;: {&#xd;
        &quot;data&quot;: {&#xd;
          &quot;id&quot;: 12,&#xd;
          &quot;attributes&quot;: {&#xd;
            &quot;route_id&quot;: 3,&#xd;
            &quot;is_buyer&quot;: 1,&#xd;
            &quot;is_team&quot;: 1,&#xd;
            &quot;seller_listing_address&quot;: &quot;917 4th St. Millville, NJ 08332&quot;,&#xd;
            &quot;buyer_price_min&quot;: 71000,&#xd;
            &quot;buyer_price_max&quot;: 121000,&#xd;
            &quot;is_assigned&quot;: 1,&#xd;
            &quot;assignment&quot;: &quot;as&quot;,&#xd;
            &quot;leader_id&quot;: 13,&#xd;
            &quot;status&quot;: 10,&#xd;
            &quot;preferred_contact_by&quot;: &quot;email&quot;,&#xd;
            &quot;about&quot;: &quot;about&quot;,&#xd;
            &quot;description&quot;: &quot;desc&quot;&#xd;
          }&#xd;
        }&#xd;
      },&#xd;
      &quot;addresses&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;address_line_1&quot;: &quot;wow&quot;,&#xd;
              &quot;address_line_2&quot;: &quot;wow&quot;,&#xd;
              &quot;address_line_3&quot;: &quot;wow&quot;,&#xd;
              &quot;address_line_4&quot;: &quot;wow&quot;,&#xd;
              &quot;city&quot;: &quot;wow&quot;,&#xd;
              &quot;city_locality&quot;: &quot;cupiditate 4&quot;,&#xd;
              &quot;state_region&quot;: &quot;wow&quot;,&#xd;
              &quot;country&quot;: &quot;Indonesia&quot;,&#xd;
              &quot;postal_code&quot;: &quot;16810&quot;,&#xd;
              &quot;lat&quot;: -57.359989,&#xd;
              &quot;lng&quot;: 54.022906,&#xd;
              &quot;is_current&quot;: false,&#xd;
              &quot;ownership_status&quot;: 2,&#xd;
              &quot;description&quot;: &quot;Best place in the world 14&quot;,&#xd;
              &quot;neighborhood&quot;: &quot;some neighborhood&quot;,&#xd;
              &quot;is_primary&quot;: true,&#xd;
              &quot;label&quot;: &quot;home&quot;,&#xd;
              &quot;is_mailing_address&quot;: true&#xd;
            }&#xd;
          },&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;address_line_1&quot;: &quot;232&quot;,&#xd;
              &quot;address_line_2&quot;: &quot;wow&quot;,&#xd;
              &quot;address_line_3&quot;: &quot;wow&quot;,&#xd;
              &quot;address_line_4&quot;: &quot;wow&quot;,&#xd;
              &quot;city&quot;: &quot;wow&quot;,&#xd;
              &quot;city_locality&quot;: &quot;cupiditate 4&quot;,&#xd;
              &quot;state_region&quot;: &quot;wow&quot;,&#xd;
              &quot;country&quot;: &quot;Indonesia&quot;,&#xd;
              &quot;postal_code&quot;: &quot;16810&quot;,&#xd;
              &quot;lat&quot;: -57.359989,&#xd;
              &quot;lng&quot;: 54.022906,&#xd;
              &quot;is_current&quot;: false,&#xd;
              &quot;ownership_status&quot;: 2,&#xd;
              &quot;description&quot;: &quot;Best place in the world 14&quot;,&#xd;
              &quot;neighborhood&quot;: &quot;some neighborhood&quot;,&#xd;
              &quot;is_primary&quot;: true,&#xd;
              &quot;label&quot;: &quot;home&quot;,&#xd;
              &quot;is_mailing_address&quot;: true&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;phones&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;number&quot;: &quot;202-555-7341&quot;,&#xd;
              &quot;country_code&quot;: &quot;US&quot;,&#xd;
              &quot;formatted_number&quot;: &quot;202-555-7341&quot;,&#xd;
              &quot;is_primary&quot;: true,&#xd;
              &quot;is_current&quot;: true,&#xd;
              &quot;label&quot;: &quot;home&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;notes&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;note&quot;: &quot;update new&quot;,&#xd;
              &quot;title&quot;: &quot;updated title 2&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;sources&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;label&quot;: &quot;KW Website&quot;,&#xd;
              &quot;is_archived&quot;: 0,&#xd;
              &quot;vendor&quot;: &quot;ow&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;social-accounts&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;social_network_id&quot;: 1,&#xd;
              &quot;identifier&quot;: &quot;example1&quot;,&#xd;
              &quot;url&quot;: &quot;https://www.facebook.com/example2&quot;&#xd;
            }&#xd;
          },&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;social_network_id&quot;: 1,&#xd;
              &quot;identifier&quot;: &quot;example4&quot;,&#xd;
              &quot;url&quot;: &quot;https://www.facebook.com/example1&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;object-custom-fields&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;custom_field&quot;: &quot;4 notes&quot;,&#xd;
              &quot;custom_field_value&quot;: &quot;another&quot;,&#xd;
              &quot;custom_field_tag&quot;: {&#xd;
                &quot;tag&quot;: &quot;blender&quot;,&#xd;
                &quot;color&quot;: &quot;blue&quot;&#xd;
              }&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      }&#xd;
    }&#xd;
  }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49587">201</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON idContact Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">idContactExtractor2</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">data.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
          <stringProp name="ConstantTimer.delay">500</stringProp>
        </ConstantTimer>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Create Contact 3 Request" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;attributes&quot;: {&#xd;
      &quot;prefix&quot;: &quot;Mr&quot;,&#xd;
      &quot;first_name&quot;: &quot;Telly&quot;,&#xd;
      &quot;middle_name&quot;: &quot;Senior&quot;,&#xd;
      &quot;last_name&quot;: &quot;Beier&quot;,&#xd;
      &quot;preferred_name&quot;: &quot;Telly Beier&quot;,&#xd;
      &quot;legal_name&quot;: &quot;Telly Senior Beier&quot;,&#xd;
      &quot;suffix&quot;: &quot;I&quot;,&#xd;
      &quot;date_of_birth&quot;: &quot;2019-05-25&quot;,&#xd;
      &quot;timeframe&quot;: &quot;1 to 12 months&quot;,&#xd;
      &quot;contact_types&quot;: [&#xd;
        &quot;buyer&quot;,&#xd;
        &quot;seller&quot;,&#xd;
        &quot;vendor&quot;,&#xd;
        &quot;investor&quot;,&#xd;
        &quot;agent&quot;,&#xd;
        &quot;lender&quot;,&#xd;
        &quot;past clients&quot;&#xd;
      ],&#xd;
      &quot;motivations&quot;: [&#xd;
        &quot;moving-up&quot;,&#xd;
        &quot;downsizing&quot;,&#xd;
        &quot;vacation-home&quot;,&#xd;
        &quot;first-home&quot;,&#xd;
        &quot;schools&quot;,&#xd;
        &quot;relocation&quot;,&#xd;
        &quot;retirement&quot;,&#xd;
        &quot;personal&quot;,&#xd;
        &quot;financial&quot;&#xd;
      ],&#xd;
      &quot;phase&quot;: 1,&#xd;
      &quot;primary_motivation_note&quot;: &quot;Telly.Beier&apos;s primary note&quot;,&#xd;
      &quot;is_pre_approved&quot;: true,&#xd;
      &quot;is_primary&quot;: true,&#xd;
      &quot;status&quot;: 1,&#xd;
      &quot;stage&quot;: &quot;prospect&quot;,&#xd;
      &quot;lead_type&quot;: &quot;rent&quot;,&#xd;
      &quot;is_starred&quot;: false,&#xd;
      &quot;available_to_contact_date&quot;: &quot;2019-05-25&quot;,&#xd;
      &quot;pre_approved_amount&quot;: 6,&#xd;
      &quot;number_in_household&quot;: 13,&#xd;
      &quot;background_info&quot;: &quot;bg info&quot;,&#xd;
      &quot;profession_title&quot;: &quot;Teller&quot;,&#xd;
      &quot;profession_department&quot;: &quot;Logistics&quot;,&#xd;
      &quot;is_connected&quot;: true,&#xd;
	 &quot;system-metas&quot;: [&#xd;
        {&#xd;
          &quot;id&quot;: 0,&#xd;
          &quot;name&quot;: &quot;piesync&quot;,&#xd;
          &quot;variable&quot;: &quot;piesync_trash&quot;,&#xd;
          &quot;type&quot;: &quot;1&quot;,&#xd;
          &quot;value&quot;: &quot;true&quot;&#xd;
        }&#xd;
      ],&#xd;
      &quot;team_id&quot;: 1,&#xd;
      &quot;primary_address&quot;: &quot;address 1&quot;,&#xd;
      &quot;language&quot;: &quot;en&quot;,&#xd;
      &quot;initial_contact_date&quot;: &quot;2017-06-23 20:27:16&quot;&#xd;
    },&#xd;
    &quot;relationships&quot;: {&#xd;
      &quot;contact-leads&quot;: {&#xd;
        &quot;data&quot;: {&#xd;
          &quot;id&quot;: 12,&#xd;
          &quot;attributes&quot;: {&#xd;
            &quot;route_id&quot;: 3,&#xd;
            &quot;is_buyer&quot;: 1,&#xd;
            &quot;is_team&quot;: 1,&#xd;
            &quot;seller_listing_address&quot;: &quot;917 4th St. Millville, NJ 08332&quot;,&#xd;
            &quot;buyer_price_min&quot;: 71000,&#xd;
            &quot;buyer_price_max&quot;: 121000,&#xd;
            &quot;is_assigned&quot;: 1,&#xd;
            &quot;assignment&quot;: &quot;as&quot;,&#xd;
            &quot;leader_id&quot;: 13,&#xd;
            &quot;status&quot;: 10,&#xd;
            &quot;preferred_contact_by&quot;: &quot;email&quot;,&#xd;
            &quot;about&quot;: &quot;about&quot;,&#xd;
            &quot;description&quot;: &quot;desc&quot;&#xd;
          }&#xd;
        }&#xd;
      },&#xd;
      &quot;addresses&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;address_line_1&quot;: &quot;wow&quot;,&#xd;
              &quot;address_line_2&quot;: &quot;wow&quot;,&#xd;
              &quot;address_line_3&quot;: &quot;wow&quot;,&#xd;
              &quot;address_line_4&quot;: &quot;wow&quot;,&#xd;
              &quot;city&quot;: &quot;wow&quot;,&#xd;
              &quot;city_locality&quot;: &quot;cupiditate 4&quot;,&#xd;
              &quot;state_region&quot;: &quot;wow&quot;,&#xd;
              &quot;country&quot;: &quot;Indonesia&quot;,&#xd;
              &quot;postal_code&quot;: &quot;16810&quot;,&#xd;
              &quot;lat&quot;: -57.359989,&#xd;
              &quot;lng&quot;: 54.022906,&#xd;
              &quot;is_current&quot;: false,&#xd;
              &quot;ownership_status&quot;: 2,&#xd;
              &quot;description&quot;: &quot;Best place in the world 14&quot;,&#xd;
              &quot;neighborhood&quot;: &quot;some neighborhood&quot;,&#xd;
              &quot;is_primary&quot;: true,&#xd;
              &quot;label&quot;: &quot;home&quot;,&#xd;
              &quot;is_mailing_address&quot;: true&#xd;
            }&#xd;
          },&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;address_line_1&quot;: &quot;232&quot;,&#xd;
              &quot;address_line_2&quot;: &quot;wow&quot;,&#xd;
              &quot;address_line_3&quot;: &quot;wow&quot;,&#xd;
              &quot;address_line_4&quot;: &quot;wow&quot;,&#xd;
              &quot;city&quot;: &quot;wow&quot;,&#xd;
              &quot;city_locality&quot;: &quot;cupiditate 4&quot;,&#xd;
              &quot;state_region&quot;: &quot;wow&quot;,&#xd;
              &quot;country&quot;: &quot;Indonesia&quot;,&#xd;
              &quot;postal_code&quot;: &quot;16810&quot;,&#xd;
              &quot;lat&quot;: -57.359989,&#xd;
              &quot;lng&quot;: 54.022906,&#xd;
              &quot;is_current&quot;: false,&#xd;
              &quot;ownership_status&quot;: 2,&#xd;
              &quot;description&quot;: &quot;Best place in the world 14&quot;,&#xd;
              &quot;neighborhood&quot;: &quot;some neighborhood&quot;,&#xd;
              &quot;is_primary&quot;: true,&#xd;
              &quot;label&quot;: &quot;home&quot;,&#xd;
              &quot;is_mailing_address&quot;: true&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;phones&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;number&quot;: &quot;202-555-7341&quot;,&#xd;
              &quot;country_code&quot;: &quot;US&quot;,&#xd;
              &quot;formatted_number&quot;: &quot;202-555-7341&quot;,&#xd;
              &quot;is_primary&quot;: true,&#xd;
              &quot;is_current&quot;: true,&#xd;
              &quot;label&quot;: &quot;home&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;notes&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;note&quot;: &quot;update new&quot;,&#xd;
              &quot;title&quot;: &quot;updated title 2&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;sources&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;label&quot;: &quot;KW Website&quot;,&#xd;
              &quot;is_archived&quot;: 0,&#xd;
              &quot;vendor&quot;: &quot;ow&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;social-accounts&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;social_network_id&quot;: 1,&#xd;
              &quot;identifier&quot;: &quot;example1&quot;,&#xd;
              &quot;url&quot;: &quot;https://www.facebook.com/example2&quot;&#xd;
            }&#xd;
          },&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;social_network_id&quot;: 1,&#xd;
              &quot;identifier&quot;: &quot;example4&quot;,&#xd;
              &quot;url&quot;: &quot;https://www.facebook.com/example1&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;object-custom-fields&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;custom_field&quot;: &quot;4 notes&quot;,&#xd;
              &quot;custom_field_value&quot;: &quot;another&quot;,&#xd;
              &quot;custom_field_tag&quot;: {&#xd;
                &quot;tag&quot;: &quot;blender&quot;,&#xd;
                &quot;color&quot;: &quot;blue&quot;&#xd;
              }&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      }&#xd;
    }&#xd;
  }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49587">201</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON idContact Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">idContactExtractor3</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">data.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Update Multi System Metas Contact Request" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;data&quot;: [&#xd;
        {&#xd;
            &quot;id&quot;: ${idContactExtractor1},&#xd;
            &quot;attributes&quot;: {&#xd;
                &quot;first_name&quot;: &quot;T1&quot;&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;id&quot;: ${idContactExtractor2},&#xd;
            &quot;attributes&quot;: {&#xd;
                &quot;first_name&quot;: &quot;T2&quot;&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;id&quot;: ${idContactExtractor3},&#xd;
            &quot;attributes&quot;: {&#xd;
                &quot;first_name&quot;: &quot;T3&quot;&#xd;
            }&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts/multiple-update?include=system-metas</stringProp>
          <stringProp name="HTTPSampler.method">PATCH</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49588">202</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Delete Multi Contact Request" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;: [&#xd;
    {&#xd;
      &quot;id&quot;: ${idContactExtractor1},&#xd;
      &quot;type&quot;: &quot;contacts&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: ${idContactExtractor2},&#xd;
      &quot;type&quot;: &quot;contacts&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: ${idContactExtractor3},&#xd;
      &quot;type&quot;: &quot;contacts&quot;&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts/</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread System Metas Create Piesync Module Group v2" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">Bearer ${__property(v_access_token)}</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">x-api-sync</stringProp>
              <stringProp name="Header.value">1</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept</stringProp>
              <stringProp name="Header.value">application/vnd.api+json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">cache-control</stringProp>
              <stringProp name="Header.value">no-cache</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">X-API-RESTORE</stringProp>
              <stringProp name="Header.value">1</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Create Multi System Metas Contact Request" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;data&quot;: [&#xd;
        {&#xd;
            &quot;attributes&quot;: {&#xd;
                &quot;first_name&quot;: &quot;T1&quot;&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;attributes&quot;: {&#xd;
                &quot;first_name&quot;: &quot;T2&quot;&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;attributes&quot;: {&#xd;
                &quot;first_name&quot;: &quot;T3&quot;&#xd;
            }&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts/multiple-store?include=system-metas</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49587">201</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="idContactExtractor1" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">idContactExtractor1</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.data[0].id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="idContactExtractor2" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">idContactExtractor2</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.data[1].id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="idContactExtractor3" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">idContactExtractor3</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.data[2].id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Delete Multi Contact Request" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;: [&#xd;
    {&#xd;
      &quot;id&quot;: ${idContactExtractor1},&#xd;
      &quot;type&quot;: &quot;contacts&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: ${idContactExtractor2},&#xd;
      &quot;type&quot;: &quot;contacts&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: ${idContactExtractor3},&#xd;
      &quot;type&quot;: &quot;contacts&quot;&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts/</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Partial Delete Contacts Module Group v2" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">Bearer ${__property(v_access_token)}</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">x-api-sync</stringProp>
              <stringProp name="Header.value">1</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept</stringProp>
              <stringProp name="Header.value">application/vnd.api+json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">cache-control</stringProp>
              <stringProp name="Header.value">no-cache</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">X-Partial-Record-Validation</stringProp>
              <stringProp name="Header.value">1</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Create Contact Request" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;attributes&quot;: {&#xd;
      &quot;prefix&quot;: &quot;Miss&quot;,&#xd;
      &quot;first_name&quot;: &quot;Marina&quot;,&#xd;
      &quot;middle_name&quot;: &quot;Joanny&quot;,&#xd;
      &quot;last_name&quot;: &quot;Gibson&quot;,&#xd;
      &quot;preferred_name&quot;: &quot;Marina Gibson&quot;,&#xd;
      &quot;legal_name&quot;: &quot;Marina Joanny Gibson&quot;,&#xd;
      &quot;suffix&quot;: &quot;I&quot;,&#xd;
      &quot;date_of_birth&quot;: &quot;2019-05-10&quot;,&#xd;
      &quot;contact_types&quot;: [&#xd;
        &quot;buyer&quot;,&#xd;
        &quot;seller&quot;,&#xd;
        &quot;vendor&quot;,&#xd;
        &quot;investor&quot;,&#xd;
        &quot;agent&quot;,&#xd;
        &quot;lender&quot;,&#xd;
        &quot;past clients&quot;&#xd;
      ],&#xd;
      &quot;motivations&quot;: [&#xd;
        &quot;moving-up&quot;,&#xd;
        &quot;downsizing&quot;,&#xd;
        &quot;vacation-home&quot;,&#xd;
        &quot;first-home&quot;,&#xd;
        &quot;schools&quot;,&#xd;
        &quot;relocation&quot;,&#xd;
        &quot;retirement&quot;,&#xd;
        &quot;personal&quot;,&#xd;
        &quot;financial&quot;&#xd;
      ],&#xd;
      &quot;primary_motivation_note&quot;: &quot;Deleniti et nesciunt possimus qui cumque qui mollitia consequatur.&quot;,&#xd;
      &quot;is_pre_approved&quot;: true,&#xd;
      &quot;is_primary&quot;: true,&#xd;
      &quot;status&quot;: 1,&#xd;
      &quot;stage&quot;: &quot;prospect&quot;,&#xd;
      &quot;lead_type&quot;: &quot;rent&quot;,&#xd;
      &quot;is_starred&quot;: false,&#xd;
      &quot;available_to_contact_date&quot;: &quot;2017-10-03&quot;,&#xd;
      &quot;buyer_type&quot;: null,&#xd;
      &quot;pre_approved_amount&quot;: 0,&#xd;
      &quot;number_in_household&quot;: 0,&#xd;
      &quot;background_info&quot;: null,&#xd;
      &quot;initial_contact_date&quot;: &quot;2017-06-23 20:27:16&quot;,&#xd;
      &quot;profession_title&quot;: &quot;Teller&quot;,&#xd;
      &quot;profession_department&quot;: &quot;Logistics&quot;,&#xd;
      &quot;is_connected&quot;: true,&#xd;
      &quot;timeframe&quot;: &quot;1 to 6 months&quot;,&#xd;
      &quot;system-metas&quot;: [&#xd;
        {&#xd;
          &quot;id&quot;: 0,&#xd;
          &quot;name&quot;: &quot;piesync&quot;,&#xd;
          &quot;variable&quot;: &quot;piesync_trash&quot;,&#xd;
          &quot;type&quot;: &quot;1&quot;,&#xd;
          &quot;value&quot;: &quot;true&quot;&#xd;
        }&#xd;
      ],&#xd;
      &quot;primary_address&quot;: &quot;13067-4569, US, Kulaschester, 3054 Dickens Common&quot;,&#xd;
      &quot;owned_by&quot;: &quot;1870&quot;,&#xd;
      &quot;assigned_to&quot;: [&#xd;
        {&#xd;
          &quot;team_id&quot;: &quot;24385&quot;,&#xd;
          &quot;kwuid&quot;: [&#xd;
            &quot;487242&quot;&#xd;
          ]&#xd;
        }&#xd;
      ]&#xd;
    },&#xd;
    &quot;relationships&quot;: {&#xd;
      &quot;company&quot;: {&#xd;
        &quot;data&quot;: {&#xd;
          &quot;id&quot;: &quot;&quot;,&#xd;
          &quot;attributes&quot;: {&#xd;
            &quot;name&quot;: &quot;Acme Inc&quot;,&#xd;
            &quot;address&quot;: &quot;3114 Farrell Mall South Cliffordville, OH 12336-2071&quot;&#xd;
          }&#xd;
        }&#xd;
      },&#xd;
      &quot;social-accounts&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;id&quot;: &quot;&quot;,&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;social_network_id&quot;: 1,&#xd;
              &quot;identifier&quot;: &quot;example1&quot;,&#xd;
              &quot;url&quot;: &quot;https://www.facebook.com/example1&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;addresses&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;id&quot;: &quot;&quot;,&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;address_line_1&quot;: &quot;11036 Konopelski Shore Suite 447&quot;,&#xd;
              &quot;address_line_2&quot;: &quot;Suite 679&quot;,&#xd;
              &quot;address_line_3&quot;: &quot;Apt. 046&quot;,&#xd;
              &quot;address_line_4&quot;: &quot;Suite 557&quot;,&#xd;
              &quot;city&quot;: &quot;Boylehaven&quot;,&#xd;
              &quot;city_locality&quot;: &quot;cupiditate&quot;,&#xd;
              &quot;state_region&quot;: &quot;Missouri&quot;,&#xd;
              &quot;country&quot;: &quot;Iran&quot;,&#xd;
              &quot;postal_code&quot;: &quot;82371&quot;,&#xd;
              &quot;lat&quot;: -57.359989,&#xd;
              &quot;lng&quot;: 54.022906,&#xd;
              &quot;is_current&quot;: false,&#xd;
              &quot;ownership_status&quot;: 2,&#xd;
              &quot;description&quot;: &quot;Best place in the world&quot;,&#xd;
              &quot;neighborhood&quot;: &quot;some neighborhood&quot;,&#xd;
              &quot;is_primary&quot;: false,&#xd;
              &quot;label&quot;: &quot;home&quot;,&#xd;
              &quot;is_mailing_address&quot;: true&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;phones&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;id&quot;: &quot;&quot;,&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;number&quot;: &quot;+1 514-794-7740&quot;,&#xd;
              &quot;country_code&quot;: &quot;US&quot;,&#xd;
              &quot;formatted_number&quot;: &quot;+1 514-794-7740&quot;,&#xd;
              &quot;is_primary&quot;: true,&#xd;
              &quot;is_current&quot;: true,&#xd;
              &quot;label&quot;: &quot;home&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;object-custom-fields&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;custom_field&quot;: &quot;notes1111111111111&quot;,&#xd;
              &quot;custom_field_value&quot;: &quot;Meet at property event.&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;sources&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;type&quot;: &quot;sources&quot;,&#xd;
            &quot;id&quot;: &quot;1&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;notes&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;type&quot;: &quot;notes&quot;,&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;note&quot;: &quot;My note for this contact.&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      }&#xd;
    }&#xd;
  }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49587">201</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">idContactExtractor</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">data.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Create Contact Request" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;attributes&quot;: {&#xd;
      &quot;prefix&quot;: &quot;Miss&quot;,&#xd;
      &quot;first_name&quot;: &quot;Marina&quot;,&#xd;
      &quot;middle_name&quot;: &quot;Joanny&quot;,&#xd;
      &quot;last_name&quot;: &quot;Gibson&quot;,&#xd;
      &quot;preferred_name&quot;: &quot;Marina Gibson&quot;,&#xd;
      &quot;legal_name&quot;: &quot;Marina Joanny Gibson&quot;,&#xd;
      &quot;suffix&quot;: &quot;I&quot;,&#xd;
      &quot;date_of_birth&quot;: &quot;2019-05-10&quot;,&#xd;
      &quot;contact_types&quot;: [&#xd;
        &quot;buyer&quot;,&#xd;
        &quot;seller&quot;,&#xd;
        &quot;vendor&quot;,&#xd;
        &quot;investor&quot;,&#xd;
        &quot;agent&quot;,&#xd;
        &quot;lender&quot;,&#xd;
        &quot;past clients&quot;&#xd;
      ],&#xd;
      &quot;motivations&quot;: [&#xd;
        &quot;moving-up&quot;,&#xd;
        &quot;downsizing&quot;,&#xd;
        &quot;vacation-home&quot;,&#xd;
        &quot;first-home&quot;,&#xd;
        &quot;schools&quot;,&#xd;
        &quot;relocation&quot;,&#xd;
        &quot;retirement&quot;,&#xd;
        &quot;personal&quot;,&#xd;
        &quot;financial&quot;&#xd;
      ],&#xd;
      &quot;primary_motivation_note&quot;: &quot;Deleniti et nesciunt possimus qui cumque qui mollitia consequatur.&quot;,&#xd;
      &quot;is_pre_approved&quot;: true,&#xd;
      &quot;is_primary&quot;: true,&#xd;
      &quot;status&quot;: 1,&#xd;
      &quot;stage&quot;: &quot;prospect&quot;,&#xd;
      &quot;lead_type&quot;: &quot;rent&quot;,&#xd;
      &quot;is_starred&quot;: false,&#xd;
      &quot;available_to_contact_date&quot;: &quot;2017-10-03&quot;,&#xd;
      &quot;buyer_type&quot;: null,&#xd;
      &quot;pre_approved_amount&quot;: 0,&#xd;
      &quot;number_in_household&quot;: 0,&#xd;
      &quot;background_info&quot;: null,&#xd;
      &quot;initial_contact_date&quot;: &quot;2017-06-23 20:27:16&quot;,&#xd;
      &quot;profession_title&quot;: &quot;Teller&quot;,&#xd;
      &quot;profession_department&quot;: &quot;Logistics&quot;,&#xd;
      &quot;is_connected&quot;: true,&#xd;
      &quot;timeframe&quot;: &quot;1 to 6 months&quot;,&#xd;
      &quot;system-metas&quot;: [&#xd;
        {&#xd;
          &quot;id&quot;: 0,&#xd;
          &quot;name&quot;: &quot;piesync&quot;,&#xd;
          &quot;variable&quot;: &quot;piesync_trash&quot;,&#xd;
          &quot;type&quot;: &quot;1&quot;,&#xd;
          &quot;value&quot;: &quot;true&quot;&#xd;
        }&#xd;
      ],&#xd;
      &quot;primary_address&quot;: &quot;13067-4569, US, Kulaschester, 3054 Dickens Common&quot;,&#xd;
      &quot;owned_by&quot;: &quot;1870&quot;,&#xd;
      &quot;assigned_to&quot;: [&#xd;
        {&#xd;
          &quot;team_id&quot;: &quot;24385&quot;,&#xd;
          &quot;kwuid&quot;: [&#xd;
            &quot;487242&quot;&#xd;
          ]&#xd;
        }&#xd;
      ]&#xd;
    },&#xd;
    &quot;relationships&quot;: {&#xd;
      &quot;company&quot;: {&#xd;
        &quot;data&quot;: {&#xd;
          &quot;id&quot;: &quot;&quot;,&#xd;
          &quot;attributes&quot;: {&#xd;
            &quot;name&quot;: &quot;Acme Inc&quot;,&#xd;
            &quot;address&quot;: &quot;3114 Farrell Mall South Cliffordville, OH 12336-2071&quot;&#xd;
          }&#xd;
        }&#xd;
      },&#xd;
      &quot;social-accounts&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;id&quot;: &quot;&quot;,&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;social_network_id&quot;: 1,&#xd;
              &quot;identifier&quot;: &quot;example1&quot;,&#xd;
              &quot;url&quot;: &quot;https://www.facebook.com/example1&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;addresses&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;id&quot;: &quot;&quot;,&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;address_line_1&quot;: &quot;11036 Konopelski Shore Suite 447&quot;,&#xd;
              &quot;address_line_2&quot;: &quot;Suite 679&quot;,&#xd;
              &quot;address_line_3&quot;: &quot;Apt. 046&quot;,&#xd;
              &quot;address_line_4&quot;: &quot;Suite 557&quot;,&#xd;
              &quot;city&quot;: &quot;Boylehaven&quot;,&#xd;
              &quot;city_locality&quot;: &quot;cupiditate&quot;,&#xd;
              &quot;state_region&quot;: &quot;Missouri&quot;,&#xd;
              &quot;country&quot;: &quot;Iran&quot;,&#xd;
              &quot;postal_code&quot;: &quot;82371&quot;,&#xd;
              &quot;lat&quot;: -57.359989,&#xd;
              &quot;lng&quot;: 54.022906,&#xd;
              &quot;is_current&quot;: false,&#xd;
              &quot;ownership_status&quot;: 2,&#xd;
              &quot;description&quot;: &quot;Best place in the world&quot;,&#xd;
              &quot;neighborhood&quot;: &quot;some neighborhood&quot;,&#xd;
              &quot;is_primary&quot;: false,&#xd;
              &quot;label&quot;: &quot;home&quot;,&#xd;
              &quot;is_mailing_address&quot;: true&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;phones&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;id&quot;: &quot;&quot;,&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;number&quot;: &quot;+1 514-794-7740&quot;,&#xd;
              &quot;country_code&quot;: &quot;US&quot;,&#xd;
              &quot;formatted_number&quot;: &quot;+1 514-794-7740&quot;,&#xd;
              &quot;is_primary&quot;: true,&#xd;
              &quot;is_current&quot;: true,&#xd;
              &quot;label&quot;: &quot;home&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;object-custom-fields&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;custom_field&quot;: &quot;notes1111111111111&quot;,&#xd;
              &quot;custom_field_value&quot;: &quot;Meet at property event.&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;sources&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;type&quot;: &quot;sources&quot;,&#xd;
            &quot;id&quot;: &quot;1&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;notes&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;type&quot;: &quot;notes&quot;,&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;note&quot;: &quot;My note for this contact.&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      }&#xd;
    }&#xd;
  }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49587">201</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">idContactExtractor1</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">data.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Delete Contact Request" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts/${idContactExtractor}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49590">204</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP update multi Contact Request" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;data&quot;: [&#xd;
        {&#xd;
            &quot;id&quot;: ${idContactExtractor},&#xd;
            &quot;attributes&quot;: {&#xd;
                &quot;first_name&quot;: &quot;T1&quot;&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;id&quot;: ${idContactExtractor1},&#xd;
            &quot;attributes&quot;: {&#xd;
                &quot;first_name&quot;: &quot;T2&quot;&#xd;
            }&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts/multiple-update</stringProp>
          <stringProp name="HTTPSampler.method">PATCH</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49587">201</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.meta.errors[0].data_index" enabled="true">
            <stringProp name="JSON_PATH">$.meta.errors[0].data_index</stringProp>
            <stringProp name="EXPECTED_VALUE">0</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.meta.errors[0].type" enabled="true">
            <stringProp name="JSON_PATH">$.meta.errors[0].type</stringProp>
            <stringProp name="EXPECTED_VALUE">ValidationError</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.meta.errors[0].status" enabled="true">
            <stringProp name="JSON_PATH">$.meta.errors[0].status</stringProp>
            <stringProp name="EXPECTED_VALUE">422</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.meta.errors[0].errors[0].field" enabled="true">
            <stringProp name="JSON_PATH">$.meta.errors[0].errors[0].field</stringProp>
            <stringProp name="EXPECTED_VALUE">data.0.id</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.meta.errors[0].errors[0].code" enabled="true">
            <stringProp name="JSON_PATH">$.meta.errors[0].errors[0].code</stringProp>
            <stringProp name="EXPECTED_VALUE">ExistsForUser</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.meta.errors[0].errors[0].message" enabled="true">
            <stringProp name="JSON_PATH">$.meta.errors[0].errors[0].message</stringProp>
            <stringProp name="EXPECTED_VALUE">The selected contacts id is not exists for user</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.meta.errors[0].errors[0].pointer" enabled="true">
            <stringProp name="JSON_PATH">$.meta.errors[0].errors[0].pointer</stringProp>
            <stringProp name="EXPECTED_VALUE">/data/0/id</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.meta.errors[0].error_count" enabled="true">
            <stringProp name="JSON_PATH">$.meta.errors[0].error_count</stringProp>
            <stringProp name="EXPECTED_VALUE">1</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.data[0].type" enabled="true">
            <stringProp name="JSON_PATH">$.data[0].type</stringProp>
            <stringProp name="EXPECTED_VALUE">contacts</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="$.data[0].id" enabled="true">
            <stringProp name="JSON_PATH">$.data[0].id</stringProp>
            <stringProp name="EXPECTED_VALUE">${idContactExtractor1}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report v1" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Soft Delete Contacts Module Group v2" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">Bearer ${__property(v_access_token)}</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">x-api-sync</stringProp>
              <stringProp name="Header.value">1</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept</stringProp>
              <stringProp name="Header.value">application/vnd.api+json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">cache-control</stringProp>
              <stringProp name="Header.value">no-cache</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">X-API-RESTORE</stringProp>
              <stringProp name="Header.value">1</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Create Contact Request" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;attributes&quot;: {&#xd;
      &quot;prefix&quot;: &quot;Mr&quot;,&#xd;
      &quot;first_name&quot;: &quot;Telly&quot;,&#xd;
      &quot;middle_name&quot;: &quot;Senior&quot;,&#xd;
      &quot;last_name&quot;: &quot;Beier&quot;,&#xd;
      &quot;preferred_name&quot;: &quot;Telly Beier&quot;,&#xd;
      &quot;legal_name&quot;: &quot;Telly Senior Beier&quot;,&#xd;
      &quot;suffix&quot;: &quot;I&quot;,&#xd;
      &quot;date_of_birth&quot;: &quot;2019-05-25&quot;,&#xd;
      &quot;timeframe&quot;: &quot;1 to 12 months&quot;,&#xd;
      &quot;contact_types&quot;: [&#xd;
        &quot;buyer&quot;,&#xd;
        &quot;seller&quot;,&#xd;
        &quot;vendor&quot;,&#xd;
        &quot;investor&quot;,&#xd;
        &quot;agent&quot;,&#xd;
        &quot;lender&quot;,&#xd;
        &quot;past clients&quot;&#xd;
      ],&#xd;
      &quot;motivations&quot;: [&#xd;
        &quot;moving-up&quot;,&#xd;
        &quot;downsizing&quot;,&#xd;
        &quot;vacation-home&quot;,&#xd;
        &quot;first-home&quot;,&#xd;
        &quot;schools&quot;,&#xd;
        &quot;relocation&quot;,&#xd;
        &quot;retirement&quot;,&#xd;
        &quot;personal&quot;,&#xd;
        &quot;financial&quot;&#xd;
      ],&#xd;
      &quot;phase&quot;: 1,&#xd;
      &quot;primary_motivation_note&quot;: &quot;Telly.Beier&apos;s primary note&quot;,&#xd;
      &quot;is_pre_approved&quot;: true,&#xd;
      &quot;is_primary&quot;: true,&#xd;
      &quot;status&quot;: 1,&#xd;
      &quot;stage&quot;: &quot;prospect&quot;,&#xd;
      &quot;lead_type&quot;: &quot;rent&quot;,&#xd;
      &quot;is_starred&quot;: false,&#xd;
      &quot;available_to_contact_date&quot;: &quot;2019-05-25&quot;,&#xd;
      &quot;pre_approved_amount&quot;: 6,&#xd;
      &quot;number_in_household&quot;: 13,&#xd;
      &quot;background_info&quot;: &quot;bg info&quot;,&#xd;
      &quot;profession_title&quot;: &quot;Teller&quot;,&#xd;
      &quot;profession_department&quot;: &quot;Logistics&quot;,&#xd;
      &quot;is_connected&quot;: true,&#xd;
	 &quot;system-metas&quot;: [&#xd;
        {&#xd;
          &quot;id&quot;: 0,&#xd;
          &quot;name&quot;: &quot;piesync&quot;,&#xd;
          &quot;variable&quot;: &quot;piesync_trash&quot;,&#xd;
          &quot;type&quot;: &quot;1&quot;,&#xd;
          &quot;value&quot;: &quot;true&quot;&#xd;
        }&#xd;
      ],&#xd;
      &quot;team_id&quot;: 1,&#xd;
      &quot;primary_address&quot;: &quot;address 1&quot;,&#xd;
      &quot;language&quot;: &quot;en&quot;,&#xd;
      &quot;initial_contact_date&quot;: &quot;2017-06-23 20:27:16&quot;&#xd;
    },&#xd;
    &quot;relationships&quot;: {&#xd;
      &quot;contact-leads&quot;: {&#xd;
        &quot;data&quot;: {&#xd;
          &quot;id&quot;: 12,&#xd;
          &quot;attributes&quot;: {&#xd;
            &quot;route_id&quot;: 3,&#xd;
            &quot;is_buyer&quot;: 1,&#xd;
            &quot;is_team&quot;: 1,&#xd;
            &quot;seller_listing_address&quot;: &quot;917 4th St. Millville, NJ 08332&quot;,&#xd;
            &quot;buyer_price_min&quot;: 71000,&#xd;
            &quot;buyer_price_max&quot;: 121000,&#xd;
            &quot;is_assigned&quot;: 1,&#xd;
            &quot;assignment&quot;: &quot;as&quot;,&#xd;
            &quot;leader_id&quot;: 13,&#xd;
            &quot;status&quot;: 10,&#xd;
            &quot;preferred_contact_by&quot;: &quot;email&quot;,&#xd;
            &quot;about&quot;: &quot;about&quot;,&#xd;
            &quot;description&quot;: &quot;desc&quot;&#xd;
          }&#xd;
        }&#xd;
      },&#xd;
      &quot;addresses&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;address_line_1&quot;: &quot;wow&quot;,&#xd;
              &quot;address_line_2&quot;: &quot;wow&quot;,&#xd;
              &quot;address_line_3&quot;: &quot;wow&quot;,&#xd;
              &quot;address_line_4&quot;: &quot;wow&quot;,&#xd;
              &quot;city&quot;: &quot;wow&quot;,&#xd;
              &quot;city_locality&quot;: &quot;cupiditate 4&quot;,&#xd;
              &quot;state_region&quot;: &quot;wow&quot;,&#xd;
              &quot;country&quot;: &quot;Indonesia&quot;,&#xd;
              &quot;postal_code&quot;: &quot;16810&quot;,&#xd;
              &quot;lat&quot;: -57.359989,&#xd;
              &quot;lng&quot;: 54.022906,&#xd;
              &quot;is_current&quot;: false,&#xd;
              &quot;ownership_status&quot;: 2,&#xd;
              &quot;description&quot;: &quot;Best place in the world 14&quot;,&#xd;
              &quot;neighborhood&quot;: &quot;some neighborhood&quot;,&#xd;
              &quot;is_primary&quot;: true,&#xd;
              &quot;label&quot;: &quot;home&quot;,&#xd;
              &quot;is_mailing_address&quot;: true&#xd;
            }&#xd;
          },&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;address_line_1&quot;: &quot;232&quot;,&#xd;
              &quot;address_line_2&quot;: &quot;wow&quot;,&#xd;
              &quot;address_line_3&quot;: &quot;wow&quot;,&#xd;
              &quot;address_line_4&quot;: &quot;wow&quot;,&#xd;
              &quot;city&quot;: &quot;wow&quot;,&#xd;
              &quot;city_locality&quot;: &quot;cupiditate 4&quot;,&#xd;
              &quot;state_region&quot;: &quot;wow&quot;,&#xd;
              &quot;country&quot;: &quot;Indonesia&quot;,&#xd;
              &quot;postal_code&quot;: &quot;16810&quot;,&#xd;
              &quot;lat&quot;: -57.359989,&#xd;
              &quot;lng&quot;: 54.022906,&#xd;
              &quot;is_current&quot;: false,&#xd;
              &quot;ownership_status&quot;: 2,&#xd;
              &quot;description&quot;: &quot;Best place in the world 14&quot;,&#xd;
              &quot;neighborhood&quot;: &quot;some neighborhood&quot;,&#xd;
              &quot;is_primary&quot;: true,&#xd;
              &quot;label&quot;: &quot;home&quot;,&#xd;
              &quot;is_mailing_address&quot;: true&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;phones&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;number&quot;: &quot;202-555-7341&quot;,&#xd;
              &quot;country_code&quot;: &quot;US&quot;,&#xd;
              &quot;formatted_number&quot;: &quot;202-555-7341&quot;,&#xd;
              &quot;is_primary&quot;: true,&#xd;
              &quot;is_current&quot;: true,&#xd;
              &quot;label&quot;: &quot;home&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;notes&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;note&quot;: &quot;update new&quot;,&#xd;
              &quot;title&quot;: &quot;updated title 2&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;sources&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;label&quot;: &quot;KW Website&quot;,&#xd;
              &quot;is_archived&quot;: 0,&#xd;
              &quot;vendor&quot;: &quot;ow&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;social-accounts&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;social_network_id&quot;: 1,&#xd;
              &quot;identifier&quot;: &quot;example1&quot;,&#xd;
              &quot;url&quot;: &quot;https://www.facebook.com/example2&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;object-custom-fields&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;custom_field&quot;: &quot;4 notes&quot;,&#xd;
              &quot;custom_field_value&quot;: &quot;another&quot;,&#xd;
              &quot;custom_field_tag&quot;: {&#xd;
                &quot;tag&quot;: &quot;blender&quot;,&#xd;
                &quot;color&quot;: &quot;blue&quot;&#xd;
              }&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      }&#xd;
    }&#xd;
  }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49587">201</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">idContactExtractor</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">data.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Update Contact Request" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;attributes&quot;: {&#xd;
      &quot;prefix&quot;: &quot;Mr&quot;,&#xd;
      &quot;first_name&quot;: &quot;Telly&quot;,&#xd;
      &quot;middle_name&quot;: &quot;Senior&quot;,&#xd;
      &quot;last_name&quot;: &quot;Beier&quot;,&#xd;
      &quot;preferred_name&quot;: &quot;Telly Beier&quot;,&#xd;
      &quot;legal_name&quot;: &quot;Telly Senior Beier&quot;,&#xd;
      &quot;suffix&quot;: &quot;I&quot;,&#xd;
      &quot;date_of_birth&quot;: &quot;2019-05-25&quot;,&#xd;
      &quot;timeframe&quot;: &quot;1 to 12 months&quot;,&#xd;
      &quot;contact_types&quot;: [&#xd;
        &quot;buyer&quot;,&#xd;
        &quot;seller&quot;,&#xd;
        &quot;vendor&quot;,&#xd;
        &quot;investor&quot;,&#xd;
        &quot;agent&quot;,&#xd;
        &quot;lender&quot;,&#xd;
        &quot;past clients&quot;&#xd;
      ],&#xd;
      &quot;motivations&quot;: [&#xd;
        &quot;moving-up&quot;,&#xd;
        &quot;downsizing&quot;,&#xd;
        &quot;vacation-home&quot;,&#xd;
        &quot;first-home&quot;,&#xd;
        &quot;schools&quot;,&#xd;
        &quot;relocation&quot;,&#xd;
        &quot;retirement&quot;,&#xd;
        &quot;personal&quot;,&#xd;
        &quot;financial&quot;&#xd;
      ],&#xd;
      &quot;phase&quot;: 1,&#xd;
      &quot;primary_motivation_note&quot;: &quot;Telly.Beier&apos;s primary note&quot;,&#xd;
      &quot;is_pre_approved&quot;: true,&#xd;
      &quot;is_primary&quot;: true,&#xd;
      &quot;status&quot;: 1,&#xd;
      &quot;stage&quot;: &quot;prospect&quot;,&#xd;
      &quot;lead_type&quot;: &quot;rent&quot;,&#xd;
      &quot;is_starred&quot;: false,&#xd;
      &quot;available_to_contact_date&quot;: &quot;2019-05-25&quot;,&#xd;
      &quot;pre_approved_amount&quot;: 6,&#xd;
      &quot;number_in_household&quot;: 13,&#xd;
      &quot;background_info&quot;: &quot;bg info&quot;,&#xd;
      &quot;profession_title&quot;: &quot;Teller&quot;,&#xd;
      &quot;profession_department&quot;: &quot;Logistics&quot;,&#xd;
      &quot;is_connected&quot;: true,&#xd;
	 &quot;system-metas&quot;: [&#xd;
        {&#xd;
          &quot;id&quot;: 0,&#xd;
          &quot;name&quot;: &quot;piesync&quot;,&#xd;
          &quot;variable&quot;: &quot;piesync_trash&quot;,&#xd;
          &quot;type&quot;: &quot;1&quot;,&#xd;
          &quot;value&quot;: &quot;true&quot;&#xd;
        }&#xd;
      ],&#xd;
      &quot;team_id&quot;: 1,&#xd;
      &quot;primary_address&quot;: &quot;address 1&quot;,&#xd;
      &quot;language&quot;: &quot;en&quot;,&#xd;
      &quot;initial_contact_date&quot;: &quot;2017-06-23 20:27:16&quot;&#xd;
    },&#xd;
    &quot;relationships&quot;: {&#xd;
      &quot;contact-leads&quot;: {&#xd;
        &quot;data&quot;: {&#xd;
          &quot;id&quot;: 12,&#xd;
          &quot;attributes&quot;: {&#xd;
            &quot;route_id&quot;: 3,&#xd;
            &quot;is_buyer&quot;: 1,&#xd;
            &quot;is_team&quot;: 1,&#xd;
            &quot;seller_listing_address&quot;: &quot;917 4th St. Millville, NJ 08332&quot;,&#xd;
            &quot;buyer_price_min&quot;: 71000,&#xd;
            &quot;buyer_price_max&quot;: 121000,&#xd;
            &quot;is_assigned&quot;: 1,&#xd;
            &quot;assignment&quot;: &quot;as&quot;,&#xd;
            &quot;leader_id&quot;: 13,&#xd;
            &quot;status&quot;: 10,&#xd;
            &quot;preferred_contact_by&quot;: &quot;email&quot;,&#xd;
            &quot;about&quot;: &quot;about&quot;,&#xd;
            &quot;description&quot;: &quot;desc&quot;&#xd;
          }&#xd;
        }&#xd;
      },&#xd;
      &quot;addresses&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;address_line_1&quot;: &quot;wow&quot;,&#xd;
              &quot;address_line_2&quot;: &quot;wow&quot;,&#xd;
              &quot;address_line_3&quot;: &quot;wow&quot;,&#xd;
              &quot;address_line_4&quot;: &quot;wow&quot;,&#xd;
              &quot;city&quot;: &quot;wow&quot;,&#xd;
              &quot;city_locality&quot;: &quot;cupiditate 4&quot;,&#xd;
              &quot;state_region&quot;: &quot;wow&quot;,&#xd;
              &quot;country&quot;: &quot;Indonesia&quot;,&#xd;
              &quot;postal_code&quot;: &quot;16810&quot;,&#xd;
              &quot;lat&quot;: -57.359989,&#xd;
              &quot;lng&quot;: 54.022906,&#xd;
              &quot;is_current&quot;: false,&#xd;
              &quot;ownership_status&quot;: 2,&#xd;
              &quot;description&quot;: &quot;Best place in the world 14&quot;,&#xd;
              &quot;neighborhood&quot;: &quot;some neighborhood&quot;,&#xd;
              &quot;is_primary&quot;: true,&#xd;
              &quot;label&quot;: &quot;home&quot;,&#xd;
              &quot;is_mailing_address&quot;: true&#xd;
            }&#xd;
          },&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;address_line_1&quot;: &quot;232&quot;,&#xd;
              &quot;address_line_2&quot;: &quot;wow&quot;,&#xd;
              &quot;address_line_3&quot;: &quot;wow&quot;,&#xd;
              &quot;address_line_4&quot;: &quot;wow&quot;,&#xd;
              &quot;city&quot;: &quot;wow&quot;,&#xd;
              &quot;city_locality&quot;: &quot;cupiditate 4&quot;,&#xd;
              &quot;state_region&quot;: &quot;wow&quot;,&#xd;
              &quot;country&quot;: &quot;Indonesia&quot;,&#xd;
              &quot;postal_code&quot;: &quot;16810&quot;,&#xd;
              &quot;lat&quot;: -57.359989,&#xd;
              &quot;lng&quot;: 54.022906,&#xd;
              &quot;is_current&quot;: false,&#xd;
              &quot;ownership_status&quot;: 2,&#xd;
              &quot;description&quot;: &quot;Best place in the world 14&quot;,&#xd;
              &quot;neighborhood&quot;: &quot;some neighborhood&quot;,&#xd;
              &quot;is_primary&quot;: true,&#xd;
              &quot;label&quot;: &quot;home&quot;,&#xd;
              &quot;is_mailing_address&quot;: true&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;phones&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;number&quot;: &quot;202-555-7341&quot;,&#xd;
              &quot;country_code&quot;: &quot;US&quot;,&#xd;
              &quot;formatted_number&quot;: &quot;202-555-7341&quot;,&#xd;
              &quot;is_primary&quot;: true,&#xd;
              &quot;is_current&quot;: true,&#xd;
              &quot;label&quot;: &quot;home&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;notes&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;note&quot;: &quot;update new&quot;,&#xd;
              &quot;title&quot;: &quot;updated title 2&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;sources&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;label&quot;: &quot;KW Website&quot;,&#xd;
              &quot;is_archived&quot;: 0,&#xd;
              &quot;vendor&quot;: &quot;ow&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;social-accounts&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;social_network_id&quot;: 1,&#xd;
              &quot;identifier&quot;: &quot;example1&quot;,&#xd;
              &quot;url&quot;: &quot;https://www.facebook.com/example2&quot;&#xd;
            }&#xd;
          },&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;social_network_id&quot;: 1,&#xd;
              &quot;identifier&quot;: &quot;example4&quot;,&#xd;
              &quot;url&quot;: &quot;https://www.facebook.com/example1&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;object-custom-fields&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;custom_field&quot;: &quot;4 notes&quot;,&#xd;
              &quot;custom_field_value&quot;: &quot;another&quot;,&#xd;
              &quot;custom_field_tag&quot;: {&#xd;
                &quot;tag&quot;: &quot;blender&quot;,&#xd;
                &quot;color&quot;: &quot;blue&quot;&#xd;
              }&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      }&#xd;
    }&#xd;
  }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts/${idContactExtractor}</stringProp>
          <stringProp name="HTTPSampler.method">PATCH</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Delete Contact Request" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;attributes&quot;: {&#xd;
      &quot;prefix&quot;: &quot;Miss&quot;,&#xd;
      &quot;first_name&quot;: &quot;Marina&quot;,&#xd;
      &quot;middle_name&quot;: &quot;Joanny&quot;,&#xd;
      &quot;last_name&quot;: &quot;Gibson&quot;,&#xd;
      &quot;preferred_name&quot;: &quot;Marina Gibson&quot;,&#xd;
      &quot;legal_name&quot;: &quot;Marina Joanny Gibson&quot;,&#xd;
      &quot;suffix&quot;: &quot;I&quot;,&#xd;
      &quot;date_of_birth&quot;: &quot;2002-02-02&quot;,&#xd;
      &quot;contact_types&quot;: [&#xd;
        &quot;buyer&quot;,&#xd;
        &quot;seller&quot;,&#xd;
        &quot;vendor&quot;,&#xd;
        &quot;investor&quot;,&#xd;
        &quot;agent&quot;,&#xd;
        &quot;lender&quot;,&#xd;
        &quot;past clients&quot;&#xd;
      ],&#xd;
      &quot;motivations&quot;: [&#xd;
        &quot;moving-up&quot;,&#xd;
        &quot;downsizing&quot;,&#xd;
        &quot;vacation-home&quot;,&#xd;
        &quot;first-home&quot;,&#xd;
        &quot;schools&quot;,&#xd;
        &quot;relocation&quot;,&#xd;
        &quot;retirement&quot;,&#xd;
        &quot;personal&quot;,&#xd;
        &quot;financial&quot;&#xd;
      ],&#xd;
      &quot;primary_motivation_note&quot;: &quot;Deleniti et nesciunt possimus qui cumque qui mollitia consequatur.&quot;,&#xd;
      &quot;is_pre_approved&quot;: true,&#xd;
      &quot;is_primary&quot;: true,&#xd;
      &quot;status&quot;: 1,&#xd;
      &quot;stage&quot;: &quot;prospect&quot;,&#xd;
      &quot;lead_type&quot;: &quot;rent&quot;,&#xd;
      &quot;is_starred&quot;: false,&#xd;
      &quot;available_to_contact_date&quot;: &quot;2017-10-03&quot;,&#xd;
      &quot;buyer_type&quot;: null,&#xd;
      &quot;pre_approved_amount&quot;: 0,&#xd;
      &quot;number_in_household&quot;: 0,&#xd;
      &quot;background_info&quot;: null,&#xd;
      &quot;initial_contact_date&quot;: &quot;2017-06-23 20:27:16&quot;,&#xd;
      &quot;profession_title&quot;: &quot;Teller&quot;,&#xd;
      &quot;profession_department&quot;: &quot;Logistics&quot;,&#xd;
      &quot;is_connected&quot;: true,&#xd;
      &quot;timeframe&quot;: &quot;1 to 6 months&quot;,&#xd;
      &quot;system-metas&quot;: [&#xd;
        {&#xd;
          &quot;id&quot;: 0,&#xd;
          &quot;name&quot;: &quot;piesync&quot;,&#xd;
          &quot;variable&quot;: &quot;piesync_trash&quot;,&#xd;
          &quot;type&quot;: &quot;1&quot;,&#xd;
          &quot;value&quot;: &quot;true&quot;&#xd;
        }&#xd;
      ],&#xd;
      &quot;primary_address&quot;: &quot;13067-4569, US, Kulaschester, 3054 Dickens Common&quot;,&#xd;
      &quot;owned_by&quot;: &quot;1870&quot;,&#xd;
      &quot;assigned_to&quot;: [&#xd;
        {&#xd;
          &quot;team_id&quot;: &quot;24385&quot;,&#xd;
          &quot;kwuid&quot;: [&#xd;
            &quot;487242&quot;&#xd;
          ]&#xd;
        }&#xd;
      ]&#xd;
    },&#xd;
    &quot;relationships&quot;: {&#xd;
      &quot;company&quot;: {&#xd;
        &quot;data&quot;: {&#xd;
          &quot;id&quot;: &quot;&quot;,&#xd;
          &quot;attributes&quot;: {&#xd;
            &quot;name&quot;: &quot;Acme Inc&quot;,&#xd;
            &quot;address&quot;: &quot;3114 Farrell Mall South Cliffordville, OH 12336-2071&quot;&#xd;
          }&#xd;
        }&#xd;
      },&#xd;
      &quot;family&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;id&quot;: &quot;&quot;,&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;related_to&quot;: 12,&#xd;
              &quot;label&quot;: &quot;some label&quot;,&#xd;
              &quot;relative_type&quot;: 1&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;social-accounts&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;id&quot;: &quot;&quot;,&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;social_network_id&quot;: 1,&#xd;
              &quot;identifier&quot;: &quot;example1&quot;,&#xd;
              &quot;url&quot;: &quot;https://www.facebook.com/example1&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;addresses&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;id&quot;: &quot;&quot;,&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;address_line_1&quot;: &quot;11036 Konopelski Shore Suite 447&quot;,&#xd;
              &quot;address_line_2&quot;: &quot;Suite 679&quot;,&#xd;
              &quot;address_line_3&quot;: &quot;Apt. 046&quot;,&#xd;
              &quot;address_line_4&quot;: &quot;Suite 557&quot;,&#xd;
              &quot;city&quot;: &quot;Boylehaven&quot;,&#xd;
              &quot;city_locality&quot;: &quot;cupiditate&quot;,&#xd;
              &quot;state_region&quot;: &quot;Missouri&quot;,&#xd;
              &quot;country&quot;: &quot;Iran&quot;,&#xd;
              &quot;postal_code&quot;: &quot;82371&quot;,&#xd;
              &quot;lat&quot;: -57.359989,&#xd;
              &quot;lng&quot;: 54.022906,&#xd;
              &quot;is_current&quot;: false,&#xd;
              &quot;ownership_status&quot;: 2,&#xd;
              &quot;description&quot;: &quot;Best place in the world&quot;,&#xd;
              &quot;neighborhood&quot;: &quot;some neighborhood&quot;,&#xd;
              &quot;is_primary&quot;: false,&#xd;
              &quot;label&quot;: &quot;home&quot;,&#xd;
              &quot;is_mailing_address&quot;: true&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;phones&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;id&quot;: &quot;&quot;,&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;number&quot;: &quot;+1 514-794-7740&quot;,&#xd;
              &quot;country_code&quot;: &quot;US&quot;,&#xd;
              &quot;formatted_number&quot;: &quot;+1 514-794-7740&quot;,&#xd;
              &quot;is_primary&quot;: true,&#xd;
              &quot;is_current&quot;: true,&#xd;
              &quot;label&quot;: &quot;home&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;tags&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;id&quot;: 3,&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;tag&quot;: &quot;or_tag&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;object-custom-fields&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;custom_field&quot;: &quot;notes11111111111&quot;,&#xd;
              &quot;custom_field_value&quot;: &quot;&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;sources&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;type&quot;: &quot;sources&quot;,&#xd;
            &quot;id&quot;: 1&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;notes&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;type&quot;: &quot;notes&quot;,&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;note&quot;: &quot;&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      }&#xd;
    }&#xd;
  }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts/${idContactExtractor}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49590">204</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Show Contact Request" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts/${idContactExtractor}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Header Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-764937318">HTTP/1.1 404 Not Found</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_headers</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Status Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="51512">404</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Restore Contact Request" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts/${idContactExtractor}</stringProp>
          <stringProp name="HTTPSampler.method">PATCH</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Show Contact Request" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts/${idContactExtractor}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Delete Contact Request" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;attributes&quot;: {&#xd;
      &quot;prefix&quot;: &quot;Miss&quot;,&#xd;
      &quot;first_name&quot;: &quot;Marina&quot;,&#xd;
      &quot;middle_name&quot;: &quot;Joanny&quot;,&#xd;
      &quot;last_name&quot;: &quot;Gibson&quot;,&#xd;
      &quot;preferred_name&quot;: &quot;Marina Gibson&quot;,&#xd;
      &quot;legal_name&quot;: &quot;Marina Joanny Gibson&quot;,&#xd;
      &quot;suffix&quot;: &quot;I&quot;,&#xd;
      &quot;date_of_birth&quot;: &quot;2002-02-02&quot;,&#xd;
      &quot;contact_types&quot;: [&#xd;
        &quot;buyer&quot;,&#xd;
        &quot;seller&quot;,&#xd;
        &quot;vendor&quot;,&#xd;
        &quot;investor&quot;,&#xd;
        &quot;agent&quot;,&#xd;
        &quot;lender&quot;,&#xd;
        &quot;past clients&quot;&#xd;
      ],&#xd;
      &quot;motivations&quot;: [&#xd;
        &quot;moving-up&quot;,&#xd;
        &quot;downsizing&quot;,&#xd;
        &quot;vacation-home&quot;,&#xd;
        &quot;first-home&quot;,&#xd;
        &quot;schools&quot;,&#xd;
        &quot;relocation&quot;,&#xd;
        &quot;retirement&quot;,&#xd;
        &quot;personal&quot;,&#xd;
        &quot;financial&quot;&#xd;
      ],&#xd;
      &quot;primary_motivation_note&quot;: &quot;Deleniti et nesciunt possimus qui cumque qui mollitia consequatur.&quot;,&#xd;
      &quot;is_pre_approved&quot;: true,&#xd;
      &quot;is_primary&quot;: true,&#xd;
      &quot;status&quot;: 1,&#xd;
      &quot;stage&quot;: &quot;prospect&quot;,&#xd;
      &quot;lead_type&quot;: &quot;rent&quot;,&#xd;
      &quot;is_starred&quot;: false,&#xd;
      &quot;available_to_contact_date&quot;: &quot;2017-10-03&quot;,&#xd;
      &quot;buyer_type&quot;: null,&#xd;
      &quot;pre_approved_amount&quot;: 0,&#xd;
      &quot;number_in_household&quot;: 0,&#xd;
      &quot;background_info&quot;: null,&#xd;
      &quot;initial_contact_date&quot;: &quot;2017-06-23 20:27:16&quot;,&#xd;
      &quot;profession_title&quot;: &quot;Teller&quot;,&#xd;
      &quot;profession_department&quot;: &quot;Logistics&quot;,&#xd;
      &quot;is_connected&quot;: true,&#xd;
      &quot;timeframe&quot;: &quot;1 to 6 months&quot;,&#xd;
      &quot;system-metas&quot;: [&#xd;
        {&#xd;
          &quot;id&quot;: 0,&#xd;
          &quot;name&quot;: &quot;piesync&quot;,&#xd;
          &quot;variable&quot;: &quot;piesync_trash&quot;,&#xd;
          &quot;type&quot;: &quot;1&quot;,&#xd;
          &quot;value&quot;: &quot;true&quot;&#xd;
        }&#xd;
      ],&#xd;
      &quot;primary_address&quot;: &quot;13067-4569, US, Kulaschester, 3054 Dickens Common&quot;,&#xd;
      &quot;owned_by&quot;: &quot;1870&quot;,&#xd;
      &quot;assigned_to&quot;: [&#xd;
        {&#xd;
          &quot;team_id&quot;: &quot;24385&quot;,&#xd;
          &quot;kwuid&quot;: [&#xd;
            &quot;487242&quot;&#xd;
          ]&#xd;
        }&#xd;
      ]&#xd;
    },&#xd;
    &quot;relationships&quot;: {&#xd;
      &quot;company&quot;: {&#xd;
        &quot;data&quot;: {&#xd;
          &quot;id&quot;: &quot;&quot;,&#xd;
          &quot;attributes&quot;: {&#xd;
            &quot;name&quot;: &quot;Acme Inc&quot;,&#xd;
            &quot;address&quot;: &quot;3114 Farrell Mall South Cliffordville, OH 12336-2071&quot;&#xd;
          }&#xd;
        }&#xd;
      },&#xd;
      &quot;family&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;id&quot;: &quot;&quot;,&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;related_to&quot;: 12,&#xd;
              &quot;label&quot;: &quot;some label&quot;,&#xd;
              &quot;relative_type&quot;: 1&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;social-accounts&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;id&quot;: &quot;&quot;,&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;social_network_id&quot;: 1,&#xd;
              &quot;identifier&quot;: &quot;example1&quot;,&#xd;
              &quot;url&quot;: &quot;https://www.facebook.com/example1&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;addresses&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;id&quot;: &quot;&quot;,&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;address_line_1&quot;: &quot;11036 Konopelski Shore Suite 447&quot;,&#xd;
              &quot;address_line_2&quot;: &quot;Suite 679&quot;,&#xd;
              &quot;address_line_3&quot;: &quot;Apt. 046&quot;,&#xd;
              &quot;address_line_4&quot;: &quot;Suite 557&quot;,&#xd;
              &quot;city&quot;: &quot;Boylehaven&quot;,&#xd;
              &quot;city_locality&quot;: &quot;cupiditate&quot;,&#xd;
              &quot;state_region&quot;: &quot;Missouri&quot;,&#xd;
              &quot;country&quot;: &quot;Iran&quot;,&#xd;
              &quot;postal_code&quot;: &quot;82371&quot;,&#xd;
              &quot;lat&quot;: -57.359989,&#xd;
              &quot;lng&quot;: 54.022906,&#xd;
              &quot;is_current&quot;: false,&#xd;
              &quot;ownership_status&quot;: 2,&#xd;
              &quot;description&quot;: &quot;Best place in the world&quot;,&#xd;
              &quot;neighborhood&quot;: &quot;some neighborhood&quot;,&#xd;
              &quot;is_primary&quot;: false,&#xd;
              &quot;label&quot;: &quot;home&quot;,&#xd;
              &quot;is_mailing_address&quot;: true&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;phones&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;id&quot;: &quot;&quot;,&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;number&quot;: &quot;+1 514-794-7740&quot;,&#xd;
              &quot;country_code&quot;: &quot;US&quot;,&#xd;
              &quot;formatted_number&quot;: &quot;+1 514-794-7740&quot;,&#xd;
              &quot;is_primary&quot;: true,&#xd;
              &quot;is_current&quot;: true,&#xd;
              &quot;label&quot;: &quot;home&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;tags&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;id&quot;: 3,&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;tag&quot;: &quot;or_tag&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;object-custom-fields&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;custom_field&quot;: &quot;notes11111111111&quot;,&#xd;
              &quot;custom_field_value&quot;: &quot;&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;sources&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;type&quot;: &quot;sources&quot;,&#xd;
            &quot;id&quot;: 1&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;notes&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;type&quot;: &quot;notes&quot;,&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;note&quot;: &quot;&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      }&#xd;
    }&#xd;
  }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts/${idContactExtractor}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49590">204</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report v1" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Soft Delete Multi Contacts Module Group v2" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">Bearer ${__property(v_access_token)}</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">x-api-sync</stringProp>
              <stringProp name="Header.value">1</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept</stringProp>
              <stringProp name="Header.value">application/vnd.api+json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">cache-control</stringProp>
              <stringProp name="Header.value">no-cache</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">X-API-RESTORE</stringProp>
              <stringProp name="Header.value">1</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Create Contact Request" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;attributes&quot;: {&#xd;
      &quot;prefix&quot;: &quot;Mr&quot;,&#xd;
      &quot;first_name&quot;: &quot;Telly&quot;,&#xd;
      &quot;middle_name&quot;: &quot;Senior&quot;,&#xd;
      &quot;last_name&quot;: &quot;Beier&quot;,&#xd;
      &quot;preferred_name&quot;: &quot;Telly Beier&quot;,&#xd;
      &quot;legal_name&quot;: &quot;Telly Senior Beier&quot;,&#xd;
      &quot;suffix&quot;: &quot;I&quot;,&#xd;
      &quot;date_of_birth&quot;: &quot;2019-05-25&quot;,&#xd;
      &quot;timeframe&quot;: &quot;1 to 12 months&quot;,&#xd;
      &quot;contact_types&quot;: [&#xd;
        &quot;buyer&quot;,&#xd;
        &quot;seller&quot;,&#xd;
        &quot;vendor&quot;,&#xd;
        &quot;investor&quot;,&#xd;
        &quot;agent&quot;,&#xd;
        &quot;lender&quot;,&#xd;
        &quot;past clients&quot;&#xd;
      ],&#xd;
      &quot;motivations&quot;: [&#xd;
        &quot;moving-up&quot;,&#xd;
        &quot;downsizing&quot;,&#xd;
        &quot;vacation-home&quot;,&#xd;
        &quot;first-home&quot;,&#xd;
        &quot;schools&quot;,&#xd;
        &quot;relocation&quot;,&#xd;
        &quot;retirement&quot;,&#xd;
        &quot;personal&quot;,&#xd;
        &quot;financial&quot;&#xd;
      ],&#xd;
      &quot;phase&quot;: 1,&#xd;
      &quot;primary_motivation_note&quot;: &quot;Telly.Beier&apos;s primary note&quot;,&#xd;
      &quot;is_pre_approved&quot;: true,&#xd;
      &quot;is_primary&quot;: true,&#xd;
      &quot;status&quot;: 1,&#xd;
      &quot;stage&quot;: &quot;prospect&quot;,&#xd;
      &quot;lead_type&quot;: &quot;rent&quot;,&#xd;
      &quot;is_starred&quot;: false,&#xd;
      &quot;available_to_contact_date&quot;: &quot;2019-05-25&quot;,&#xd;
      &quot;pre_approved_amount&quot;: 6,&#xd;
      &quot;number_in_household&quot;: 13,&#xd;
      &quot;background_info&quot;: &quot;bg info&quot;,&#xd;
      &quot;profession_title&quot;: &quot;Teller&quot;,&#xd;
      &quot;profession_department&quot;: &quot;Logistics&quot;,&#xd;
      &quot;is_connected&quot;: true,&#xd;
	 &quot;system-metas&quot;: [&#xd;
        {&#xd;
          &quot;id&quot;: 0,&#xd;
          &quot;name&quot;: &quot;piesync&quot;,&#xd;
          &quot;variable&quot;: &quot;piesync_trash&quot;,&#xd;
          &quot;type&quot;: &quot;1&quot;,&#xd;
          &quot;value&quot;: &quot;true&quot;&#xd;
        }&#xd;
      ],&#xd;
      &quot;team_id&quot;: 1,&#xd;
      &quot;primary_address&quot;: &quot;address 1&quot;,&#xd;
      &quot;language&quot;: &quot;en&quot;,&#xd;
      &quot;initial_contact_date&quot;: &quot;2017-06-23 20:27:16&quot;&#xd;
    },&#xd;
    &quot;relationships&quot;: {&#xd;
      &quot;contact-leads&quot;: {&#xd;
        &quot;data&quot;: {&#xd;
          &quot;id&quot;: 12,&#xd;
          &quot;attributes&quot;: {&#xd;
            &quot;route_id&quot;: 3,&#xd;
            &quot;is_buyer&quot;: 1,&#xd;
            &quot;is_team&quot;: 1,&#xd;
            &quot;seller_listing_address&quot;: &quot;917 4th St. Millville, NJ 08332&quot;,&#xd;
            &quot;buyer_price_min&quot;: 71000,&#xd;
            &quot;buyer_price_max&quot;: 121000,&#xd;
            &quot;is_assigned&quot;: 1,&#xd;
            &quot;assignment&quot;: &quot;as&quot;,&#xd;
            &quot;leader_id&quot;: 13,&#xd;
            &quot;status&quot;: 10,&#xd;
            &quot;preferred_contact_by&quot;: &quot;email&quot;,&#xd;
            &quot;about&quot;: &quot;about&quot;,&#xd;
            &quot;description&quot;: &quot;desc&quot;&#xd;
          }&#xd;
        }&#xd;
      },&#xd;
      &quot;addresses&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;address_line_1&quot;: &quot;wow&quot;,&#xd;
              &quot;address_line_2&quot;: &quot;wow&quot;,&#xd;
              &quot;address_line_3&quot;: &quot;wow&quot;,&#xd;
              &quot;address_line_4&quot;: &quot;wow&quot;,&#xd;
              &quot;city&quot;: &quot;wow&quot;,&#xd;
              &quot;city_locality&quot;: &quot;cupiditate 4&quot;,&#xd;
              &quot;state_region&quot;: &quot;wow&quot;,&#xd;
              &quot;country&quot;: &quot;Indonesia&quot;,&#xd;
              &quot;postal_code&quot;: &quot;16810&quot;,&#xd;
              &quot;lat&quot;: -57.359989,&#xd;
              &quot;lng&quot;: 54.022906,&#xd;
              &quot;is_current&quot;: false,&#xd;
              &quot;ownership_status&quot;: 2,&#xd;
              &quot;description&quot;: &quot;Best place in the world 14&quot;,&#xd;
              &quot;neighborhood&quot;: &quot;some neighborhood&quot;,&#xd;
              &quot;is_primary&quot;: true,&#xd;
              &quot;label&quot;: &quot;home&quot;,&#xd;
              &quot;is_mailing_address&quot;: true&#xd;
            }&#xd;
          },&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;address_line_1&quot;: &quot;232&quot;,&#xd;
              &quot;address_line_2&quot;: &quot;wow&quot;,&#xd;
              &quot;address_line_3&quot;: &quot;wow&quot;,&#xd;
              &quot;address_line_4&quot;: &quot;wow&quot;,&#xd;
              &quot;city&quot;: &quot;wow&quot;,&#xd;
              &quot;city_locality&quot;: &quot;cupiditate 4&quot;,&#xd;
              &quot;state_region&quot;: &quot;wow&quot;,&#xd;
              &quot;country&quot;: &quot;Indonesia&quot;,&#xd;
              &quot;postal_code&quot;: &quot;16810&quot;,&#xd;
              &quot;lat&quot;: -57.359989,&#xd;
              &quot;lng&quot;: 54.022906,&#xd;
              &quot;is_current&quot;: false,&#xd;
              &quot;ownership_status&quot;: 2,&#xd;
              &quot;description&quot;: &quot;Best place in the world 14&quot;,&#xd;
              &quot;neighborhood&quot;: &quot;some neighborhood&quot;,&#xd;
              &quot;is_primary&quot;: true,&#xd;
              &quot;label&quot;: &quot;home&quot;,&#xd;
              &quot;is_mailing_address&quot;: true&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;phones&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;number&quot;: &quot;202-555-7341&quot;,&#xd;
              &quot;country_code&quot;: &quot;US&quot;,&#xd;
              &quot;formatted_number&quot;: &quot;202-555-7341&quot;,&#xd;
              &quot;is_primary&quot;: true,&#xd;
              &quot;is_current&quot;: true,&#xd;
              &quot;label&quot;: &quot;home&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;notes&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;note&quot;: &quot;update new&quot;,&#xd;
              &quot;title&quot;: &quot;updated title 2&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;sources&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;label&quot;: &quot;KW Website&quot;,&#xd;
              &quot;is_archived&quot;: 0,&#xd;
              &quot;vendor&quot;: &quot;ow&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;social-accounts&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;social_network_id&quot;: 1,&#xd;
              &quot;identifier&quot;: &quot;example1&quot;,&#xd;
              &quot;url&quot;: &quot;https://www.facebook.com/example2&quot;&#xd;
            }&#xd;
          },&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;social_network_id&quot;: 1,&#xd;
              &quot;identifier&quot;: &quot;example4&quot;,&#xd;
              &quot;url&quot;: &quot;https://www.facebook.com/example1&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;object-custom-fields&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;custom_field&quot;: &quot;4 notes&quot;,&#xd;
              &quot;custom_field_value&quot;: &quot;another&quot;,&#xd;
              &quot;custom_field_tag&quot;: {&#xd;
                &quot;tag&quot;: &quot;blender&quot;,&#xd;
                &quot;color&quot;: &quot;blue&quot;&#xd;
              }&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      }&#xd;
    }&#xd;
  }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49587">201</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">idContactExtractor</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">data.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Update Contact Request" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;attributes&quot;: {&#xd;
      &quot;prefix&quot;: &quot;Mr&quot;,&#xd;
      &quot;first_name&quot;: &quot;Telly&quot;,&#xd;
      &quot;middle_name&quot;: &quot;Senior&quot;,&#xd;
      &quot;last_name&quot;: &quot;Beier&quot;,&#xd;
      &quot;preferred_name&quot;: &quot;Telly Beier&quot;,&#xd;
      &quot;legal_name&quot;: &quot;Telly Senior Beier&quot;,&#xd;
      &quot;suffix&quot;: &quot;I&quot;,&#xd;
      &quot;date_of_birth&quot;: &quot;2019-05-25&quot;,&#xd;
      &quot;timeframe&quot;: &quot;1 to 12 months&quot;,&#xd;
      &quot;contact_types&quot;: [&#xd;
        &quot;buyer&quot;,&#xd;
        &quot;seller&quot;,&#xd;
        &quot;vendor&quot;,&#xd;
        &quot;investor&quot;,&#xd;
        &quot;agent&quot;,&#xd;
        &quot;lender&quot;,&#xd;
        &quot;past clients&quot;&#xd;
      ],&#xd;
      &quot;motivations&quot;: [&#xd;
        &quot;moving-up&quot;,&#xd;
        &quot;downsizing&quot;,&#xd;
        &quot;vacation-home&quot;,&#xd;
        &quot;first-home&quot;,&#xd;
        &quot;schools&quot;,&#xd;
        &quot;relocation&quot;,&#xd;
        &quot;retirement&quot;,&#xd;
        &quot;personal&quot;,&#xd;
        &quot;financial&quot;&#xd;
      ],&#xd;
      &quot;phase&quot;: 1,&#xd;
      &quot;primary_motivation_note&quot;: &quot;Telly.Beier&apos;s primary note&quot;,&#xd;
      &quot;is_pre_approved&quot;: true,&#xd;
      &quot;is_primary&quot;: true,&#xd;
      &quot;status&quot;: 1,&#xd;
      &quot;stage&quot;: &quot;prospect&quot;,&#xd;
      &quot;lead_type&quot;: &quot;rent&quot;,&#xd;
      &quot;is_starred&quot;: false,&#xd;
      &quot;available_to_contact_date&quot;: &quot;2019-05-25&quot;,&#xd;
      &quot;pre_approved_amount&quot;: 6,&#xd;
      &quot;number_in_household&quot;: 13,&#xd;
      &quot;background_info&quot;: &quot;bg info&quot;,&#xd;
      &quot;profession_title&quot;: &quot;Teller&quot;,&#xd;
      &quot;profession_department&quot;: &quot;Logistics&quot;,&#xd;
      &quot;is_connected&quot;: true,&#xd;
	 &quot;system-metas&quot;: [&#xd;
        {&#xd;
          &quot;id&quot;: 0,&#xd;
          &quot;name&quot;: &quot;piesync&quot;,&#xd;
          &quot;variable&quot;: &quot;piesync_trash&quot;,&#xd;
          &quot;type&quot;: &quot;1&quot;,&#xd;
          &quot;value&quot;: &quot;true&quot;&#xd;
        }&#xd;
      ],&#xd;
      &quot;team_id&quot;: 1,&#xd;
      &quot;primary_address&quot;: &quot;address 1&quot;,&#xd;
      &quot;language&quot;: &quot;en&quot;,&#xd;
      &quot;initial_contact_date&quot;: &quot;2017-06-23 20:27:16&quot;&#xd;
    },&#xd;
    &quot;relationships&quot;: {&#xd;
      &quot;contact-leads&quot;: {&#xd;
        &quot;data&quot;: {&#xd;
          &quot;id&quot;: 12,&#xd;
          &quot;attributes&quot;: {&#xd;
            &quot;route_id&quot;: 3,&#xd;
            &quot;is_buyer&quot;: 1,&#xd;
            &quot;is_team&quot;: 1,&#xd;
            &quot;seller_listing_address&quot;: &quot;917 4th St. Millville, NJ 08332&quot;,&#xd;
            &quot;buyer_price_min&quot;: 71000,&#xd;
            &quot;buyer_price_max&quot;: 121000,&#xd;
            &quot;is_assigned&quot;: 1,&#xd;
            &quot;assignment&quot;: &quot;as&quot;,&#xd;
            &quot;leader_id&quot;: 13,&#xd;
            &quot;status&quot;: 10,&#xd;
            &quot;preferred_contact_by&quot;: &quot;email&quot;,&#xd;
            &quot;about&quot;: &quot;about&quot;,&#xd;
            &quot;description&quot;: &quot;desc&quot;&#xd;
          }&#xd;
        }&#xd;
      },&#xd;
      &quot;addresses&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;address_line_1&quot;: &quot;wow&quot;,&#xd;
              &quot;address_line_2&quot;: &quot;wow&quot;,&#xd;
              &quot;address_line_3&quot;: &quot;wow&quot;,&#xd;
              &quot;address_line_4&quot;: &quot;wow&quot;,&#xd;
              &quot;city&quot;: &quot;wow&quot;,&#xd;
              &quot;city_locality&quot;: &quot;cupiditate 4&quot;,&#xd;
              &quot;state_region&quot;: &quot;wow&quot;,&#xd;
              &quot;country&quot;: &quot;Indonesia&quot;,&#xd;
              &quot;postal_code&quot;: &quot;16810&quot;,&#xd;
              &quot;lat&quot;: -57.359989,&#xd;
              &quot;lng&quot;: 54.022906,&#xd;
              &quot;is_current&quot;: false,&#xd;
              &quot;ownership_status&quot;: 2,&#xd;
              &quot;description&quot;: &quot;Best place in the world 14&quot;,&#xd;
              &quot;neighborhood&quot;: &quot;some neighborhood&quot;,&#xd;
              &quot;is_primary&quot;: true,&#xd;
              &quot;label&quot;: &quot;home&quot;,&#xd;
              &quot;is_mailing_address&quot;: true&#xd;
            }&#xd;
          },&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;address_line_1&quot;: &quot;232&quot;,&#xd;
              &quot;address_line_2&quot;: &quot;wow&quot;,&#xd;
              &quot;address_line_3&quot;: &quot;wow&quot;,&#xd;
              &quot;address_line_4&quot;: &quot;wow&quot;,&#xd;
              &quot;city&quot;: &quot;wow&quot;,&#xd;
              &quot;city_locality&quot;: &quot;cupiditate 4&quot;,&#xd;
              &quot;state_region&quot;: &quot;wow&quot;,&#xd;
              &quot;country&quot;: &quot;Indonesia&quot;,&#xd;
              &quot;postal_code&quot;: &quot;16810&quot;,&#xd;
              &quot;lat&quot;: -57.359989,&#xd;
              &quot;lng&quot;: 54.022906,&#xd;
              &quot;is_current&quot;: false,&#xd;
              &quot;ownership_status&quot;: 2,&#xd;
              &quot;description&quot;: &quot;Best place in the world 14&quot;,&#xd;
              &quot;neighborhood&quot;: &quot;some neighborhood&quot;,&#xd;
              &quot;is_primary&quot;: true,&#xd;
              &quot;label&quot;: &quot;home&quot;,&#xd;
              &quot;is_mailing_address&quot;: true&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;phones&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;number&quot;: &quot;202-555-7341&quot;,&#xd;
              &quot;country_code&quot;: &quot;US&quot;,&#xd;
              &quot;formatted_number&quot;: &quot;202-555-7341&quot;,&#xd;
              &quot;is_primary&quot;: true,&#xd;
              &quot;is_current&quot;: true,&#xd;
              &quot;label&quot;: &quot;home&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;notes&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;note&quot;: &quot;update new&quot;,&#xd;
              &quot;title&quot;: &quot;updated title 2&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;sources&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;label&quot;: &quot;KW Website&quot;,&#xd;
              &quot;is_archived&quot;: 0,&#xd;
              &quot;vendor&quot;: &quot;ow&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;social-accounts&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;social_network_id&quot;: 1,&#xd;
              &quot;identifier&quot;: &quot;example1&quot;,&#xd;
              &quot;url&quot;: &quot;https://www.facebook.com/example2&quot;&#xd;
            }&#xd;
          },&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;social_network_id&quot;: 1,&#xd;
              &quot;identifier&quot;: &quot;example4&quot;,&#xd;
              &quot;url&quot;: &quot;https://www.facebook.com/example1&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;object-custom-fields&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;custom_field&quot;: &quot;4 notes&quot;,&#xd;
              &quot;custom_field_value&quot;: &quot;another&quot;,&#xd;
              &quot;custom_field_tag&quot;: {&#xd;
                &quot;tag&quot;: &quot;blender&quot;,&#xd;
                &quot;color&quot;: &quot;blue&quot;&#xd;
              }&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      }&#xd;
    }&#xd;
  }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts/${idContactExtractor}</stringProp>
          <stringProp name="HTTPSampler.method">PATCH</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Delete Contact Request" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;attributes&quot;: {&#xd;
      &quot;prefix&quot;: &quot;Miss&quot;,&#xd;
      &quot;first_name&quot;: &quot;Marina&quot;,&#xd;
      &quot;middle_name&quot;: &quot;Joanny&quot;,&#xd;
      &quot;last_name&quot;: &quot;Gibson&quot;,&#xd;
      &quot;preferred_name&quot;: &quot;Marina Gibson&quot;,&#xd;
      &quot;legal_name&quot;: &quot;Marina Joanny Gibson&quot;,&#xd;
      &quot;suffix&quot;: &quot;I&quot;,&#xd;
      &quot;date_of_birth&quot;: &quot;2002-02-02&quot;,&#xd;
      &quot;contact_types&quot;: [&#xd;
        &quot;buyer&quot;,&#xd;
        &quot;seller&quot;,&#xd;
        &quot;vendor&quot;,&#xd;
        &quot;investor&quot;,&#xd;
        &quot;agent&quot;,&#xd;
        &quot;lender&quot;,&#xd;
        &quot;past clients&quot;&#xd;
      ],&#xd;
      &quot;motivations&quot;: [&#xd;
        &quot;moving-up&quot;,&#xd;
        &quot;downsizing&quot;,&#xd;
        &quot;vacation-home&quot;,&#xd;
        &quot;first-home&quot;,&#xd;
        &quot;schools&quot;,&#xd;
        &quot;relocation&quot;,&#xd;
        &quot;retirement&quot;,&#xd;
        &quot;personal&quot;,&#xd;
        &quot;financial&quot;&#xd;
      ],&#xd;
      &quot;primary_motivation_note&quot;: &quot;Deleniti et nesciunt possimus qui cumque qui mollitia consequatur.&quot;,&#xd;
      &quot;is_pre_approved&quot;: true,&#xd;
      &quot;is_primary&quot;: true,&#xd;
      &quot;status&quot;: 1,&#xd;
      &quot;stage&quot;: &quot;prospect&quot;,&#xd;
      &quot;lead_type&quot;: &quot;rent&quot;,&#xd;
      &quot;is_starred&quot;: false,&#xd;
      &quot;available_to_contact_date&quot;: &quot;2017-10-03&quot;,&#xd;
      &quot;buyer_type&quot;: null,&#xd;
      &quot;pre_approved_amount&quot;: 0,&#xd;
      &quot;number_in_household&quot;: 0,&#xd;
      &quot;background_info&quot;: null,&#xd;
      &quot;initial_contact_date&quot;: &quot;2017-06-23 20:27:16&quot;,&#xd;
      &quot;profession_title&quot;: &quot;Teller&quot;,&#xd;
      &quot;profession_department&quot;: &quot;Logistics&quot;,&#xd;
      &quot;is_connected&quot;: true,&#xd;
      &quot;timeframe&quot;: &quot;1 to 6 months&quot;,&#xd;
      &quot;system-metas&quot;: [&#xd;
        {&#xd;
          &quot;id&quot;: 0,&#xd;
          &quot;name&quot;: &quot;piesync&quot;,&#xd;
          &quot;variable&quot;: &quot;piesync_trash&quot;,&#xd;
          &quot;type&quot;: &quot;1&quot;,&#xd;
          &quot;value&quot;: &quot;true&quot;&#xd;
        }&#xd;
      ],&#xd;
      &quot;primary_address&quot;: &quot;13067-4569, US, Kulaschester, 3054 Dickens Common&quot;,&#xd;
      &quot;owned_by&quot;: &quot;1870&quot;,&#xd;
      &quot;assigned_to&quot;: [&#xd;
        {&#xd;
          &quot;team_id&quot;: &quot;24385&quot;,&#xd;
          &quot;kwuid&quot;: [&#xd;
            &quot;487242&quot;&#xd;
          ]&#xd;
        }&#xd;
      ]&#xd;
    },&#xd;
    &quot;relationships&quot;: {&#xd;
      &quot;company&quot;: {&#xd;
        &quot;data&quot;: {&#xd;
          &quot;id&quot;: &quot;&quot;,&#xd;
          &quot;attributes&quot;: {&#xd;
            &quot;name&quot;: &quot;Acme Inc&quot;,&#xd;
            &quot;address&quot;: &quot;3114 Farrell Mall South Cliffordville, OH 12336-2071&quot;&#xd;
          }&#xd;
        }&#xd;
      },&#xd;
      &quot;family&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;id&quot;: &quot;&quot;,&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;related_to&quot;: 12,&#xd;
              &quot;label&quot;: &quot;some label&quot;,&#xd;
              &quot;relative_type&quot;: 1&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;social-accounts&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;id&quot;: &quot;&quot;,&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;social_network_id&quot;: 1,&#xd;
              &quot;identifier&quot;: &quot;example1&quot;,&#xd;
              &quot;url&quot;: &quot;https://www.facebook.com/example1&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;addresses&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;id&quot;: &quot;&quot;,&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;address_line_1&quot;: &quot;11036 Konopelski Shore Suite 447&quot;,&#xd;
              &quot;address_line_2&quot;: &quot;Suite 679&quot;,&#xd;
              &quot;address_line_3&quot;: &quot;Apt. 046&quot;,&#xd;
              &quot;address_line_4&quot;: &quot;Suite 557&quot;,&#xd;
              &quot;city&quot;: &quot;Boylehaven&quot;,&#xd;
              &quot;city_locality&quot;: &quot;cupiditate&quot;,&#xd;
              &quot;state_region&quot;: &quot;Missouri&quot;,&#xd;
              &quot;country&quot;: &quot;Iran&quot;,&#xd;
              &quot;postal_code&quot;: &quot;82371&quot;,&#xd;
              &quot;lat&quot;: -57.359989,&#xd;
              &quot;lng&quot;: 54.022906,&#xd;
              &quot;is_current&quot;: false,&#xd;
              &quot;ownership_status&quot;: 2,&#xd;
              &quot;description&quot;: &quot;Best place in the world&quot;,&#xd;
              &quot;neighborhood&quot;: &quot;some neighborhood&quot;,&#xd;
              &quot;is_primary&quot;: false,&#xd;
              &quot;label&quot;: &quot;home&quot;,&#xd;
              &quot;is_mailing_address&quot;: true&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;phones&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;id&quot;: &quot;&quot;,&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;number&quot;: &quot;+1 514-794-7740&quot;,&#xd;
              &quot;country_code&quot;: &quot;US&quot;,&#xd;
              &quot;formatted_number&quot;: &quot;+1 514-794-7740&quot;,&#xd;
              &quot;is_primary&quot;: true,&#xd;
              &quot;is_current&quot;: true,&#xd;
              &quot;label&quot;: &quot;home&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;tags&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;id&quot;: 3,&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;tag&quot;: &quot;or_tag&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;object-custom-fields&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;custom_field&quot;: &quot;notes11111111111&quot;,&#xd;
              &quot;custom_field_value&quot;: &quot;&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;sources&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;type&quot;: &quot;sources&quot;,&#xd;
            &quot;id&quot;: 1&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;notes&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;type&quot;: &quot;notes&quot;,&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;note&quot;: &quot;&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      }&#xd;
    }&#xd;
  }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts/${idContactExtractor}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49590">204</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Show Contact Request" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts/${idContactExtractor}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Header Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-764937318">HTTP/1.1 404 Not Found</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_headers</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Status Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="51512">404</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Restore Contact Request" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts/${idContactExtractor}</stringProp>
          <stringProp name="HTTPSampler.method">PATCH</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Show Contact Request" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts/${idContactExtractor}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Delete Contact Request" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;attributes&quot;: {&#xd;
      &quot;prefix&quot;: &quot;Miss&quot;,&#xd;
      &quot;first_name&quot;: &quot;Marina&quot;,&#xd;
      &quot;middle_name&quot;: &quot;Joanny&quot;,&#xd;
      &quot;last_name&quot;: &quot;Gibson&quot;,&#xd;
      &quot;preferred_name&quot;: &quot;Marina Gibson&quot;,&#xd;
      &quot;legal_name&quot;: &quot;Marina Joanny Gibson&quot;,&#xd;
      &quot;suffix&quot;: &quot;I&quot;,&#xd;
      &quot;date_of_birth&quot;: &quot;2002-02-02&quot;,&#xd;
      &quot;contact_types&quot;: [&#xd;
        &quot;buyer&quot;,&#xd;
        &quot;seller&quot;,&#xd;
        &quot;vendor&quot;,&#xd;
        &quot;investor&quot;,&#xd;
        &quot;agent&quot;,&#xd;
        &quot;lender&quot;,&#xd;
        &quot;past clients&quot;&#xd;
      ],&#xd;
      &quot;motivations&quot;: [&#xd;
        &quot;moving-up&quot;,&#xd;
        &quot;downsizing&quot;,&#xd;
        &quot;vacation-home&quot;,&#xd;
        &quot;first-home&quot;,&#xd;
        &quot;schools&quot;,&#xd;
        &quot;relocation&quot;,&#xd;
        &quot;retirement&quot;,&#xd;
        &quot;personal&quot;,&#xd;
        &quot;financial&quot;&#xd;
      ],&#xd;
      &quot;primary_motivation_note&quot;: &quot;Deleniti et nesciunt possimus qui cumque qui mollitia consequatur.&quot;,&#xd;
      &quot;is_pre_approved&quot;: true,&#xd;
      &quot;is_primary&quot;: true,&#xd;
      &quot;status&quot;: 1,&#xd;
      &quot;stage&quot;: &quot;prospect&quot;,&#xd;
      &quot;lead_type&quot;: &quot;rent&quot;,&#xd;
      &quot;is_starred&quot;: false,&#xd;
      &quot;available_to_contact_date&quot;: &quot;2017-10-03&quot;,&#xd;
      &quot;buyer_type&quot;: null,&#xd;
      &quot;pre_approved_amount&quot;: 0,&#xd;
      &quot;number_in_household&quot;: 0,&#xd;
      &quot;background_info&quot;: null,&#xd;
      &quot;initial_contact_date&quot;: &quot;2017-06-23 20:27:16&quot;,&#xd;
      &quot;profession_title&quot;: &quot;Teller&quot;,&#xd;
      &quot;profession_department&quot;: &quot;Logistics&quot;,&#xd;
      &quot;is_connected&quot;: true,&#xd;
      &quot;timeframe&quot;: &quot;1 to 6 months&quot;,&#xd;
      &quot;system-metas&quot;: [&#xd;
        {&#xd;
          &quot;id&quot;: 0,&#xd;
          &quot;name&quot;: &quot;piesync&quot;,&#xd;
          &quot;variable&quot;: &quot;piesync_trash&quot;,&#xd;
          &quot;type&quot;: &quot;1&quot;,&#xd;
          &quot;value&quot;: &quot;true&quot;&#xd;
        }&#xd;
      ],&#xd;
      &quot;primary_address&quot;: &quot;13067-4569, US, Kulaschester, 3054 Dickens Common&quot;,&#xd;
      &quot;owned_by&quot;: &quot;1870&quot;,&#xd;
      &quot;assigned_to&quot;: [&#xd;
        {&#xd;
          &quot;team_id&quot;: &quot;24385&quot;,&#xd;
          &quot;kwuid&quot;: [&#xd;
            &quot;487242&quot;&#xd;
          ]&#xd;
        }&#xd;
      ]&#xd;
    },&#xd;
    &quot;relationships&quot;: {&#xd;
      &quot;company&quot;: {&#xd;
        &quot;data&quot;: {&#xd;
          &quot;id&quot;: &quot;&quot;,&#xd;
          &quot;attributes&quot;: {&#xd;
            &quot;name&quot;: &quot;Acme Inc&quot;,&#xd;
            &quot;address&quot;: &quot;3114 Farrell Mall South Cliffordville, OH 12336-2071&quot;&#xd;
          }&#xd;
        }&#xd;
      },&#xd;
      &quot;family&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;id&quot;: &quot;&quot;,&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;related_to&quot;: 12,&#xd;
              &quot;label&quot;: &quot;some label&quot;,&#xd;
              &quot;relative_type&quot;: 1&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;social-accounts&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;id&quot;: &quot;&quot;,&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;social_network_id&quot;: 1,&#xd;
              &quot;identifier&quot;: &quot;example1&quot;,&#xd;
              &quot;url&quot;: &quot;https://www.facebook.com/example1&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;addresses&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;id&quot;: &quot;&quot;,&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;address_line_1&quot;: &quot;11036 Konopelski Shore Suite 447&quot;,&#xd;
              &quot;address_line_2&quot;: &quot;Suite 679&quot;,&#xd;
              &quot;address_line_3&quot;: &quot;Apt. 046&quot;,&#xd;
              &quot;address_line_4&quot;: &quot;Suite 557&quot;,&#xd;
              &quot;city&quot;: &quot;Boylehaven&quot;,&#xd;
              &quot;city_locality&quot;: &quot;cupiditate&quot;,&#xd;
              &quot;state_region&quot;: &quot;Missouri&quot;,&#xd;
              &quot;country&quot;: &quot;Iran&quot;,&#xd;
              &quot;postal_code&quot;: &quot;82371&quot;,&#xd;
              &quot;lat&quot;: -57.359989,&#xd;
              &quot;lng&quot;: 54.022906,&#xd;
              &quot;is_current&quot;: false,&#xd;
              &quot;ownership_status&quot;: 2,&#xd;
              &quot;description&quot;: &quot;Best place in the world&quot;,&#xd;
              &quot;neighborhood&quot;: &quot;some neighborhood&quot;,&#xd;
              &quot;is_primary&quot;: false,&#xd;
              &quot;label&quot;: &quot;home&quot;,&#xd;
              &quot;is_mailing_address&quot;: true&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;phones&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;id&quot;: &quot;&quot;,&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;number&quot;: &quot;+1 514-794-7740&quot;,&#xd;
              &quot;country_code&quot;: &quot;US&quot;,&#xd;
              &quot;formatted_number&quot;: &quot;+1 514-794-7740&quot;,&#xd;
              &quot;is_primary&quot;: true,&#xd;
              &quot;is_current&quot;: true,&#xd;
              &quot;label&quot;: &quot;home&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;tags&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;id&quot;: 3,&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;tag&quot;: &quot;or_tag&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;object-custom-fields&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;custom_field&quot;: &quot;notes11111111111&quot;,&#xd;
              &quot;custom_field_value&quot;: &quot;&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;sources&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;type&quot;: &quot;sources&quot;,&#xd;
            &quot;id&quot;: 1&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;notes&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;type&quot;: &quot;notes&quot;,&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;note&quot;: &quot;&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      }&#xd;
    }&#xd;
  }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts/${idContactExtractor}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49590">204</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report v1" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Soft Delete Contacts Module Group v2" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">Bearer ${__property(v_access_token)}</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">x-api-sync</stringProp>
              <stringProp name="Header.value">1</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept</stringProp>
              <stringProp name="Header.value">application/vnd.api+json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">cache-control</stringProp>
              <stringProp name="Header.value">no-cache</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">X-API-RESTORE</stringProp>
              <stringProp name="Header.value">1</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Create Contact Request" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;attributes&quot;: {&#xd;
      &quot;prefix&quot;: &quot;Mr&quot;,&#xd;
      &quot;first_name&quot;: &quot;Telly&quot;,&#xd;
      &quot;middle_name&quot;: &quot;Senior&quot;,&#xd;
      &quot;last_name&quot;: &quot;Beier&quot;,&#xd;
      &quot;preferred_name&quot;: &quot;Telly Beier&quot;,&#xd;
      &quot;legal_name&quot;: &quot;Telly Senior Beier&quot;,&#xd;
      &quot;suffix&quot;: &quot;I&quot;,&#xd;
      &quot;date_of_birth&quot;: &quot;2019-05-25&quot;,&#xd;
      &quot;timeframe&quot;: &quot;1 to 12 months&quot;,&#xd;
      &quot;contact_types&quot;: [&#xd;
        &quot;buyer&quot;,&#xd;
        &quot;seller&quot;,&#xd;
        &quot;vendor&quot;,&#xd;
        &quot;investor&quot;,&#xd;
        &quot;agent&quot;,&#xd;
        &quot;lender&quot;,&#xd;
        &quot;past clients&quot;&#xd;
      ],&#xd;
      &quot;motivations&quot;: [&#xd;
        &quot;moving-up&quot;,&#xd;
        &quot;downsizing&quot;,&#xd;
        &quot;vacation-home&quot;,&#xd;
        &quot;first-home&quot;,&#xd;
        &quot;schools&quot;,&#xd;
        &quot;relocation&quot;,&#xd;
        &quot;retirement&quot;,&#xd;
        &quot;personal&quot;,&#xd;
        &quot;financial&quot;&#xd;
      ],&#xd;
      &quot;phase&quot;: 1,&#xd;
      &quot;primary_motivation_note&quot;: &quot;Telly.Beier&apos;s primary note&quot;,&#xd;
      &quot;is_pre_approved&quot;: true,&#xd;
      &quot;is_primary&quot;: true,&#xd;
      &quot;status&quot;: 1,&#xd;
      &quot;stage&quot;: &quot;prospect&quot;,&#xd;
      &quot;lead_type&quot;: &quot;rent&quot;,&#xd;
      &quot;is_starred&quot;: false,&#xd;
      &quot;available_to_contact_date&quot;: &quot;2019-05-25&quot;,&#xd;
      &quot;pre_approved_amount&quot;: 6,&#xd;
      &quot;number_in_household&quot;: 13,&#xd;
      &quot;background_info&quot;: &quot;bg info&quot;,&#xd;
      &quot;profession_title&quot;: &quot;Teller&quot;,&#xd;
      &quot;profession_department&quot;: &quot;Logistics&quot;,&#xd;
      &quot;is_connected&quot;: true,&#xd;
	 &quot;system-metas&quot;: [&#xd;
        {&#xd;
          &quot;id&quot;: 0,&#xd;
          &quot;name&quot;: &quot;piesync&quot;,&#xd;
          &quot;variable&quot;: &quot;piesync_trash&quot;,&#xd;
          &quot;type&quot;: &quot;1&quot;,&#xd;
          &quot;value&quot;: &quot;true&quot;&#xd;
        }&#xd;
      ],&#xd;
      &quot;team_id&quot;: 1,&#xd;
      &quot;primary_address&quot;: &quot;address 1&quot;,&#xd;
      &quot;language&quot;: &quot;en&quot;,&#xd;
      &quot;initial_contact_date&quot;: &quot;2017-06-23 20:27:16&quot;&#xd;
    },&#xd;
    &quot;relationships&quot;: {&#xd;
      &quot;contact-leads&quot;: {&#xd;
        &quot;data&quot;: {&#xd;
          &quot;id&quot;: 12,&#xd;
          &quot;attributes&quot;: {&#xd;
            &quot;route_id&quot;: 3,&#xd;
            &quot;is_buyer&quot;: 1,&#xd;
            &quot;is_team&quot;: 1,&#xd;
            &quot;seller_listing_address&quot;: &quot;917 4th St. Millville, NJ 08332&quot;,&#xd;
            &quot;buyer_price_min&quot;: 71000,&#xd;
            &quot;buyer_price_max&quot;: 121000,&#xd;
            &quot;is_assigned&quot;: 1,&#xd;
            &quot;assignment&quot;: &quot;as&quot;,&#xd;
            &quot;leader_id&quot;: 13,&#xd;
            &quot;status&quot;: 10,&#xd;
            &quot;preferred_contact_by&quot;: &quot;email&quot;,&#xd;
            &quot;about&quot;: &quot;about&quot;,&#xd;
            &quot;description&quot;: &quot;desc&quot;&#xd;
          }&#xd;
        }&#xd;
      },&#xd;
      &quot;addresses&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;address_line_1&quot;: &quot;wow&quot;,&#xd;
              &quot;address_line_2&quot;: &quot;wow&quot;,&#xd;
              &quot;address_line_3&quot;: &quot;wow&quot;,&#xd;
              &quot;address_line_4&quot;: &quot;wow&quot;,&#xd;
              &quot;city&quot;: &quot;wow&quot;,&#xd;
              &quot;city_locality&quot;: &quot;cupiditate 4&quot;,&#xd;
              &quot;state_region&quot;: &quot;wow&quot;,&#xd;
              &quot;country&quot;: &quot;Indonesia&quot;,&#xd;
              &quot;postal_code&quot;: &quot;16810&quot;,&#xd;
              &quot;lat&quot;: -57.359989,&#xd;
              &quot;lng&quot;: 54.022906,&#xd;
              &quot;is_current&quot;: false,&#xd;
              &quot;ownership_status&quot;: 2,&#xd;
              &quot;description&quot;: &quot;Best place in the world 14&quot;,&#xd;
              &quot;neighborhood&quot;: &quot;some neighborhood&quot;,&#xd;
              &quot;is_primary&quot;: true,&#xd;
              &quot;label&quot;: &quot;home&quot;,&#xd;
              &quot;is_mailing_address&quot;: true&#xd;
            }&#xd;
          },&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;address_line_1&quot;: &quot;232&quot;,&#xd;
              &quot;address_line_2&quot;: &quot;wow&quot;,&#xd;
              &quot;address_line_3&quot;: &quot;wow&quot;,&#xd;
              &quot;address_line_4&quot;: &quot;wow&quot;,&#xd;
              &quot;city&quot;: &quot;wow&quot;,&#xd;
              &quot;city_locality&quot;: &quot;cupiditate 4&quot;,&#xd;
              &quot;state_region&quot;: &quot;wow&quot;,&#xd;
              &quot;country&quot;: &quot;Indonesia&quot;,&#xd;
              &quot;postal_code&quot;: &quot;16810&quot;,&#xd;
              &quot;lat&quot;: -57.359989,&#xd;
              &quot;lng&quot;: 54.022906,&#xd;
              &quot;is_current&quot;: false,&#xd;
              &quot;ownership_status&quot;: 2,&#xd;
              &quot;description&quot;: &quot;Best place in the world 14&quot;,&#xd;
              &quot;neighborhood&quot;: &quot;some neighborhood&quot;,&#xd;
              &quot;is_primary&quot;: true,&#xd;
              &quot;label&quot;: &quot;home&quot;,&#xd;
              &quot;is_mailing_address&quot;: true&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;phones&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;number&quot;: &quot;202-555-7341&quot;,&#xd;
              &quot;country_code&quot;: &quot;US&quot;,&#xd;
              &quot;formatted_number&quot;: &quot;202-555-7341&quot;,&#xd;
              &quot;is_primary&quot;: true,&#xd;
              &quot;is_current&quot;: true,&#xd;
              &quot;label&quot;: &quot;home&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;notes&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;note&quot;: &quot;update new&quot;,&#xd;
              &quot;title&quot;: &quot;updated title 2&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;sources&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;label&quot;: &quot;KW Website&quot;,&#xd;
              &quot;is_archived&quot;: 0,&#xd;
              &quot;vendor&quot;: &quot;ow&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;social-accounts&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;social_network_id&quot;: 1,&#xd;
              &quot;identifier&quot;: &quot;example1&quot;,&#xd;
              &quot;url&quot;: &quot;https://www.facebook.com/example2&quot;&#xd;
            }&#xd;
          },&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;social_network_id&quot;: 1,&#xd;
              &quot;identifier&quot;: &quot;example4&quot;,&#xd;
              &quot;url&quot;: &quot;https://www.facebook.com/example1&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;object-custom-fields&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;custom_field&quot;: &quot;4 notes&quot;,&#xd;
              &quot;custom_field_value&quot;: &quot;another&quot;,&#xd;
              &quot;custom_field_tag&quot;: {&#xd;
                &quot;tag&quot;: &quot;blender&quot;,&#xd;
                &quot;color&quot;: &quot;blue&quot;&#xd;
              }&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      }&#xd;
    }&#xd;
  }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49587">201</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">idContactExtractor</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">data.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Update Contact Request" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;attributes&quot;: {&#xd;
      &quot;prefix&quot;: &quot;Mr&quot;,&#xd;
      &quot;first_name&quot;: &quot;Telly&quot;,&#xd;
      &quot;middle_name&quot;: &quot;Senior&quot;,&#xd;
      &quot;last_name&quot;: &quot;Beier&quot;,&#xd;
      &quot;preferred_name&quot;: &quot;Telly Beier&quot;,&#xd;
      &quot;legal_name&quot;: &quot;Telly Senior Beier&quot;,&#xd;
      &quot;suffix&quot;: &quot;I&quot;,&#xd;
      &quot;date_of_birth&quot;: &quot;2019-05-25&quot;,&#xd;
      &quot;timeframe&quot;: &quot;1 to 12 months&quot;,&#xd;
      &quot;contact_types&quot;: [&#xd;
        &quot;buyer&quot;,&#xd;
        &quot;seller&quot;,&#xd;
        &quot;vendor&quot;,&#xd;
        &quot;investor&quot;,&#xd;
        &quot;agent&quot;,&#xd;
        &quot;lender&quot;,&#xd;
        &quot;past clients&quot;&#xd;
      ],&#xd;
      &quot;motivations&quot;: [&#xd;
        &quot;moving-up&quot;,&#xd;
        &quot;downsizing&quot;,&#xd;
        &quot;vacation-home&quot;,&#xd;
        &quot;first-home&quot;,&#xd;
        &quot;schools&quot;,&#xd;
        &quot;relocation&quot;,&#xd;
        &quot;retirement&quot;,&#xd;
        &quot;personal&quot;,&#xd;
        &quot;financial&quot;&#xd;
      ],&#xd;
      &quot;phase&quot;: 1,&#xd;
      &quot;primary_motivation_note&quot;: &quot;Telly.Beier&apos;s primary note&quot;,&#xd;
      &quot;is_pre_approved&quot;: true,&#xd;
      &quot;is_primary&quot;: true,&#xd;
      &quot;status&quot;: 1,&#xd;
      &quot;stage&quot;: &quot;prospect&quot;,&#xd;
      &quot;lead_type&quot;: &quot;rent&quot;,&#xd;
      &quot;is_starred&quot;: false,&#xd;
      &quot;available_to_contact_date&quot;: &quot;2019-05-25&quot;,&#xd;
      &quot;pre_approved_amount&quot;: 6,&#xd;
      &quot;number_in_household&quot;: 13,&#xd;
      &quot;background_info&quot;: &quot;bg info&quot;,&#xd;
      &quot;profession_title&quot;: &quot;Teller&quot;,&#xd;
      &quot;profession_department&quot;: &quot;Logistics&quot;,&#xd;
      &quot;is_connected&quot;: true,&#xd;
	 &quot;system-metas&quot;: [&#xd;
        {&#xd;
          &quot;id&quot;: 0,&#xd;
          &quot;name&quot;: &quot;piesync&quot;,&#xd;
          &quot;variable&quot;: &quot;piesync_trash&quot;,&#xd;
          &quot;type&quot;: &quot;1&quot;,&#xd;
          &quot;value&quot;: &quot;true&quot;&#xd;
        }&#xd;
      ],&#xd;
      &quot;team_id&quot;: 1,&#xd;
      &quot;primary_address&quot;: &quot;address 1&quot;,&#xd;
      &quot;language&quot;: &quot;en&quot;,&#xd;
      &quot;initial_contact_date&quot;: &quot;2017-06-23 20:27:16&quot;&#xd;
    },&#xd;
    &quot;relationships&quot;: {&#xd;
      &quot;contact-leads&quot;: {&#xd;
        &quot;data&quot;: {&#xd;
          &quot;id&quot;: 12,&#xd;
          &quot;attributes&quot;: {&#xd;
            &quot;route_id&quot;: 3,&#xd;
            &quot;is_buyer&quot;: 1,&#xd;
            &quot;is_team&quot;: 1,&#xd;
            &quot;seller_listing_address&quot;: &quot;917 4th St. Millville, NJ 08332&quot;,&#xd;
            &quot;buyer_price_min&quot;: 71000,&#xd;
            &quot;buyer_price_max&quot;: 121000,&#xd;
            &quot;is_assigned&quot;: 1,&#xd;
            &quot;assignment&quot;: &quot;as&quot;,&#xd;
            &quot;leader_id&quot;: 13,&#xd;
            &quot;status&quot;: 10,&#xd;
            &quot;preferred_contact_by&quot;: &quot;email&quot;,&#xd;
            &quot;about&quot;: &quot;about&quot;,&#xd;
            &quot;description&quot;: &quot;desc&quot;&#xd;
          }&#xd;
        }&#xd;
      },&#xd;
      &quot;addresses&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;address_line_1&quot;: &quot;wow&quot;,&#xd;
              &quot;address_line_2&quot;: &quot;wow&quot;,&#xd;
              &quot;address_line_3&quot;: &quot;wow&quot;,&#xd;
              &quot;address_line_4&quot;: &quot;wow&quot;,&#xd;
              &quot;city&quot;: &quot;wow&quot;,&#xd;
              &quot;city_locality&quot;: &quot;cupiditate 4&quot;,&#xd;
              &quot;state_region&quot;: &quot;wow&quot;,&#xd;
              &quot;country&quot;: &quot;Indonesia&quot;,&#xd;
              &quot;postal_code&quot;: &quot;16810&quot;,&#xd;
              &quot;lat&quot;: -57.359989,&#xd;
              &quot;lng&quot;: 54.022906,&#xd;
              &quot;is_current&quot;: false,&#xd;
              &quot;ownership_status&quot;: 2,&#xd;
              &quot;description&quot;: &quot;Best place in the world 14&quot;,&#xd;
              &quot;neighborhood&quot;: &quot;some neighborhood&quot;,&#xd;
              &quot;is_primary&quot;: true,&#xd;
              &quot;label&quot;: &quot;home&quot;,&#xd;
              &quot;is_mailing_address&quot;: true&#xd;
            }&#xd;
          },&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;address_line_1&quot;: &quot;232&quot;,&#xd;
              &quot;address_line_2&quot;: &quot;wow&quot;,&#xd;
              &quot;address_line_3&quot;: &quot;wow&quot;,&#xd;
              &quot;address_line_4&quot;: &quot;wow&quot;,&#xd;
              &quot;city&quot;: &quot;wow&quot;,&#xd;
              &quot;city_locality&quot;: &quot;cupiditate 4&quot;,&#xd;
              &quot;state_region&quot;: &quot;wow&quot;,&#xd;
              &quot;country&quot;: &quot;Indonesia&quot;,&#xd;
              &quot;postal_code&quot;: &quot;16810&quot;,&#xd;
              &quot;lat&quot;: -57.359989,&#xd;
              &quot;lng&quot;: 54.022906,&#xd;
              &quot;is_current&quot;: false,&#xd;
              &quot;ownership_status&quot;: 2,&#xd;
              &quot;description&quot;: &quot;Best place in the world 14&quot;,&#xd;
              &quot;neighborhood&quot;: &quot;some neighborhood&quot;,&#xd;
              &quot;is_primary&quot;: true,&#xd;
              &quot;label&quot;: &quot;home&quot;,&#xd;
              &quot;is_mailing_address&quot;: true&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;phones&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;number&quot;: &quot;202-555-7341&quot;,&#xd;
              &quot;country_code&quot;: &quot;US&quot;,&#xd;
              &quot;formatted_number&quot;: &quot;202-555-7341&quot;,&#xd;
              &quot;is_primary&quot;: true,&#xd;
              &quot;is_current&quot;: true,&#xd;
              &quot;label&quot;: &quot;home&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;notes&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;note&quot;: &quot;update new&quot;,&#xd;
              &quot;title&quot;: &quot;updated title 2&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;sources&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;label&quot;: &quot;KW Website&quot;,&#xd;
              &quot;is_archived&quot;: 0,&#xd;
              &quot;vendor&quot;: &quot;ow&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;social-accounts&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;social_network_id&quot;: 1,&#xd;
              &quot;identifier&quot;: &quot;example1&quot;,&#xd;
              &quot;url&quot;: &quot;https://www.facebook.com/example2&quot;&#xd;
            }&#xd;
          },&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;social_network_id&quot;: 1,&#xd;
              &quot;identifier&quot;: &quot;example4&quot;,&#xd;
              &quot;url&quot;: &quot;https://www.facebook.com/example1&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;object-custom-fields&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;custom_field&quot;: &quot;4 notes&quot;,&#xd;
              &quot;custom_field_value&quot;: &quot;another&quot;,&#xd;
              &quot;custom_field_tag&quot;: {&#xd;
                &quot;tag&quot;: &quot;blender&quot;,&#xd;
                &quot;color&quot;: &quot;blue&quot;&#xd;
              }&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      }&#xd;
    }&#xd;
  }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts/${idContactExtractor}</stringProp>
          <stringProp name="HTTPSampler.method">PATCH</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Delete Contact Request 1" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;attributes&quot;: {&#xd;
      &quot;prefix&quot;: &quot;Miss&quot;,&#xd;
      &quot;first_name&quot;: &quot;Marina&quot;,&#xd;
      &quot;middle_name&quot;: &quot;Joanny&quot;,&#xd;
      &quot;last_name&quot;: &quot;Gibson&quot;,&#xd;
      &quot;preferred_name&quot;: &quot;Marina Gibson&quot;,&#xd;
      &quot;legal_name&quot;: &quot;Marina Joanny Gibson&quot;,&#xd;
      &quot;suffix&quot;: &quot;I&quot;,&#xd;
      &quot;date_of_birth&quot;: &quot;2002-02-02&quot;,&#xd;
      &quot;contact_types&quot;: [&#xd;
        &quot;buyer&quot;,&#xd;
        &quot;seller&quot;,&#xd;
        &quot;vendor&quot;,&#xd;
        &quot;investor&quot;,&#xd;
        &quot;agent&quot;,&#xd;
        &quot;lender&quot;,&#xd;
        &quot;past clients&quot;&#xd;
      ],&#xd;
      &quot;motivations&quot;: [&#xd;
        &quot;moving-up&quot;,&#xd;
        &quot;downsizing&quot;,&#xd;
        &quot;vacation-home&quot;,&#xd;
        &quot;first-home&quot;,&#xd;
        &quot;schools&quot;,&#xd;
        &quot;relocation&quot;,&#xd;
        &quot;retirement&quot;,&#xd;
        &quot;personal&quot;,&#xd;
        &quot;financial&quot;&#xd;
      ],&#xd;
      &quot;primary_motivation_note&quot;: &quot;Deleniti et nesciunt possimus qui cumque qui mollitia consequatur.&quot;,&#xd;
      &quot;is_pre_approved&quot;: true,&#xd;
      &quot;is_primary&quot;: true,&#xd;
      &quot;status&quot;: 1,&#xd;
      &quot;stage&quot;: &quot;prospect&quot;,&#xd;
      &quot;lead_type&quot;: &quot;rent&quot;,&#xd;
      &quot;is_starred&quot;: false,&#xd;
      &quot;available_to_contact_date&quot;: &quot;2017-10-03&quot;,&#xd;
      &quot;buyer_type&quot;: null,&#xd;
      &quot;pre_approved_amount&quot;: 0,&#xd;
      &quot;number_in_household&quot;: 0,&#xd;
      &quot;background_info&quot;: null,&#xd;
      &quot;initial_contact_date&quot;: &quot;2017-06-23 20:27:16&quot;,&#xd;
      &quot;profession_title&quot;: &quot;Teller&quot;,&#xd;
      &quot;profession_department&quot;: &quot;Logistics&quot;,&#xd;
      &quot;is_connected&quot;: true,&#xd;
      &quot;timeframe&quot;: &quot;1 to 6 months&quot;,&#xd;
      &quot;system-metas&quot;: [&#xd;
        {&#xd;
          &quot;id&quot;: 0,&#xd;
          &quot;name&quot;: &quot;piesync&quot;,&#xd;
          &quot;variable&quot;: &quot;piesync_trash&quot;,&#xd;
          &quot;type&quot;: &quot;1&quot;,&#xd;
          &quot;value&quot;: &quot;true&quot;&#xd;
        }&#xd;
      ],&#xd;
      &quot;primary_address&quot;: &quot;13067-4569, US, Kulaschester, 3054 Dickens Common&quot;,&#xd;
      &quot;owned_by&quot;: &quot;1870&quot;,&#xd;
      &quot;assigned_to&quot;: [&#xd;
        {&#xd;
          &quot;team_id&quot;: &quot;24385&quot;,&#xd;
          &quot;kwuid&quot;: [&#xd;
            &quot;487242&quot;&#xd;
          ]&#xd;
        }&#xd;
      ]&#xd;
    },&#xd;
    &quot;relationships&quot;: {&#xd;
      &quot;company&quot;: {&#xd;
        &quot;data&quot;: {&#xd;
          &quot;id&quot;: &quot;&quot;,&#xd;
          &quot;attributes&quot;: {&#xd;
            &quot;name&quot;: &quot;Acme Inc&quot;,&#xd;
            &quot;address&quot;: &quot;3114 Farrell Mall South Cliffordville, OH 12336-2071&quot;&#xd;
          }&#xd;
        }&#xd;
      },&#xd;
      &quot;family&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;id&quot;: &quot;&quot;,&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;related_to&quot;: 12,&#xd;
              &quot;label&quot;: &quot;some label&quot;,&#xd;
              &quot;relative_type&quot;: 1&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;social-accounts&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;id&quot;: &quot;&quot;,&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;social_network_id&quot;: 1,&#xd;
              &quot;identifier&quot;: &quot;example1&quot;,&#xd;
              &quot;url&quot;: &quot;https://www.facebook.com/example1&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;addresses&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;id&quot;: &quot;&quot;,&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;address_line_1&quot;: &quot;11036 Konopelski Shore Suite 447&quot;,&#xd;
              &quot;address_line_2&quot;: &quot;Suite 679&quot;,&#xd;
              &quot;address_line_3&quot;: &quot;Apt. 046&quot;,&#xd;
              &quot;address_line_4&quot;: &quot;Suite 557&quot;,&#xd;
              &quot;city&quot;: &quot;Boylehaven&quot;,&#xd;
              &quot;city_locality&quot;: &quot;cupiditate&quot;,&#xd;
              &quot;state_region&quot;: &quot;Missouri&quot;,&#xd;
              &quot;country&quot;: &quot;Iran&quot;,&#xd;
              &quot;postal_code&quot;: &quot;82371&quot;,&#xd;
              &quot;lat&quot;: -57.359989,&#xd;
              &quot;lng&quot;: 54.022906,&#xd;
              &quot;is_current&quot;: false,&#xd;
              &quot;ownership_status&quot;: 2,&#xd;
              &quot;description&quot;: &quot;Best place in the world&quot;,&#xd;
              &quot;neighborhood&quot;: &quot;some neighborhood&quot;,&#xd;
              &quot;is_primary&quot;: false,&#xd;
              &quot;label&quot;: &quot;home&quot;,&#xd;
              &quot;is_mailing_address&quot;: true&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;phones&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;id&quot;: &quot;&quot;,&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;number&quot;: &quot;+1 514-794-7740&quot;,&#xd;
              &quot;country_code&quot;: &quot;US&quot;,&#xd;
              &quot;formatted_number&quot;: &quot;+1 514-794-7740&quot;,&#xd;
              &quot;is_primary&quot;: true,&#xd;
              &quot;is_current&quot;: true,&#xd;
              &quot;label&quot;: &quot;home&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;tags&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;id&quot;: 3,&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;tag&quot;: &quot;or_tag&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;object-custom-fields&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;custom_field&quot;: &quot;notes11111111111&quot;,&#xd;
              &quot;custom_field_value&quot;: &quot;&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;sources&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;type&quot;: &quot;sources&quot;,&#xd;
            &quot;id&quot;: 1&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;notes&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;type&quot;: &quot;notes&quot;,&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;note&quot;: &quot;&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      }&#xd;
    }&#xd;
  }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts/${idContactExtractor}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49590">204</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Show Contact Request 1" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts/${idContactExtractor}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Header Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-764937318">HTTP/1.1 404 Not Found</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_headers</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response status Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="51512">404</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_headers</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Restore Contact Request" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts/${idContactExtractor}</stringProp>
          <stringProp name="HTTPSampler.method">PATCH</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Show Contact Request 2" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts/${idContactExtractor}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Delete Contact Request 2" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;attributes&quot;: {&#xd;
      &quot;prefix&quot;: &quot;Miss&quot;,&#xd;
      &quot;first_name&quot;: &quot;Marina&quot;,&#xd;
      &quot;middle_name&quot;: &quot;Joanny&quot;,&#xd;
      &quot;last_name&quot;: &quot;Gibson&quot;,&#xd;
      &quot;preferred_name&quot;: &quot;Marina Gibson&quot;,&#xd;
      &quot;legal_name&quot;: &quot;Marina Joanny Gibson&quot;,&#xd;
      &quot;suffix&quot;: &quot;I&quot;,&#xd;
      &quot;date_of_birth&quot;: &quot;2002-02-02&quot;,&#xd;
      &quot;contact_types&quot;: [&#xd;
        &quot;buyer&quot;,&#xd;
        &quot;seller&quot;,&#xd;
        &quot;vendor&quot;,&#xd;
        &quot;investor&quot;,&#xd;
        &quot;agent&quot;,&#xd;
        &quot;lender&quot;,&#xd;
        &quot;past clients&quot;&#xd;
      ],&#xd;
      &quot;motivations&quot;: [&#xd;
        &quot;moving-up&quot;,&#xd;
        &quot;downsizing&quot;,&#xd;
        &quot;vacation-home&quot;,&#xd;
        &quot;first-home&quot;,&#xd;
        &quot;schools&quot;,&#xd;
        &quot;relocation&quot;,&#xd;
        &quot;retirement&quot;,&#xd;
        &quot;personal&quot;,&#xd;
        &quot;financial&quot;&#xd;
      ],&#xd;
      &quot;primary_motivation_note&quot;: &quot;Deleniti et nesciunt possimus qui cumque qui mollitia consequatur.&quot;,&#xd;
      &quot;is_pre_approved&quot;: true,&#xd;
      &quot;is_primary&quot;: true,&#xd;
      &quot;status&quot;: 1,&#xd;
      &quot;stage&quot;: &quot;prospect&quot;,&#xd;
      &quot;lead_type&quot;: &quot;rent&quot;,&#xd;
      &quot;is_starred&quot;: false,&#xd;
      &quot;available_to_contact_date&quot;: &quot;2017-10-03&quot;,&#xd;
      &quot;buyer_type&quot;: null,&#xd;
      &quot;pre_approved_amount&quot;: 0,&#xd;
      &quot;number_in_household&quot;: 0,&#xd;
      &quot;background_info&quot;: null,&#xd;
      &quot;initial_contact_date&quot;: &quot;2017-06-23 20:27:16&quot;,&#xd;
      &quot;profession_title&quot;: &quot;Teller&quot;,&#xd;
      &quot;profession_department&quot;: &quot;Logistics&quot;,&#xd;
      &quot;is_connected&quot;: true,&#xd;
      &quot;timeframe&quot;: &quot;1 to 6 months&quot;,&#xd;
      &quot;system-metas&quot;: [&#xd;
        {&#xd;
          &quot;id&quot;: 0,&#xd;
          &quot;name&quot;: &quot;piesync&quot;,&#xd;
          &quot;variable&quot;: &quot;piesync_trash&quot;,&#xd;
          &quot;type&quot;: &quot;1&quot;,&#xd;
          &quot;value&quot;: &quot;true&quot;&#xd;
        }&#xd;
      ],&#xd;
      &quot;primary_address&quot;: &quot;13067-4569, US, Kulaschester, 3054 Dickens Common&quot;,&#xd;
      &quot;owned_by&quot;: &quot;1870&quot;,&#xd;
      &quot;assigned_to&quot;: [&#xd;
        {&#xd;
          &quot;team_id&quot;: &quot;24385&quot;,&#xd;
          &quot;kwuid&quot;: [&#xd;
            &quot;487242&quot;&#xd;
          ]&#xd;
        }&#xd;
      ]&#xd;
    },&#xd;
    &quot;relationships&quot;: {&#xd;
      &quot;company&quot;: {&#xd;
        &quot;data&quot;: {&#xd;
          &quot;id&quot;: &quot;&quot;,&#xd;
          &quot;attributes&quot;: {&#xd;
            &quot;name&quot;: &quot;Acme Inc&quot;,&#xd;
            &quot;address&quot;: &quot;3114 Farrell Mall South Cliffordville, OH 12336-2071&quot;&#xd;
          }&#xd;
        }&#xd;
      },&#xd;
      &quot;family&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;id&quot;: &quot;&quot;,&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;related_to&quot;: 12,&#xd;
              &quot;label&quot;: &quot;some label&quot;,&#xd;
              &quot;relative_type&quot;: 1&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;social-accounts&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;id&quot;: &quot;&quot;,&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;social_network_id&quot;: 1,&#xd;
              &quot;identifier&quot;: &quot;example1&quot;,&#xd;
              &quot;url&quot;: &quot;https://www.facebook.com/example1&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;addresses&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;id&quot;: &quot;&quot;,&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;address_line_1&quot;: &quot;11036 Konopelski Shore Suite 447&quot;,&#xd;
              &quot;address_line_2&quot;: &quot;Suite 679&quot;,&#xd;
              &quot;address_line_3&quot;: &quot;Apt. 046&quot;,&#xd;
              &quot;address_line_4&quot;: &quot;Suite 557&quot;,&#xd;
              &quot;city&quot;: &quot;Boylehaven&quot;,&#xd;
              &quot;city_locality&quot;: &quot;cupiditate&quot;,&#xd;
              &quot;state_region&quot;: &quot;Missouri&quot;,&#xd;
              &quot;country&quot;: &quot;Iran&quot;,&#xd;
              &quot;postal_code&quot;: &quot;82371&quot;,&#xd;
              &quot;lat&quot;: -57.359989,&#xd;
              &quot;lng&quot;: 54.022906,&#xd;
              &quot;is_current&quot;: false,&#xd;
              &quot;ownership_status&quot;: 2,&#xd;
              &quot;description&quot;: &quot;Best place in the world&quot;,&#xd;
              &quot;neighborhood&quot;: &quot;some neighborhood&quot;,&#xd;
              &quot;is_primary&quot;: false,&#xd;
              &quot;label&quot;: &quot;home&quot;,&#xd;
              &quot;is_mailing_address&quot;: true&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;phones&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;id&quot;: &quot;&quot;,&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;number&quot;: &quot;+1 514-794-7740&quot;,&#xd;
              &quot;country_code&quot;: &quot;US&quot;,&#xd;
              &quot;formatted_number&quot;: &quot;+1 514-794-7740&quot;,&#xd;
              &quot;is_primary&quot;: true,&#xd;
              &quot;is_current&quot;: true,&#xd;
              &quot;label&quot;: &quot;home&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;tags&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;id&quot;: 3,&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;tag&quot;: &quot;or_tag&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;object-custom-fields&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;custom_field&quot;: &quot;notes11111111111&quot;,&#xd;
              &quot;custom_field_value&quot;: &quot;&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;sources&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;type&quot;: &quot;sources&quot;,&#xd;
            &quot;id&quot;: 1&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;notes&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;type&quot;: &quot;notes&quot;,&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;note&quot;: &quot;&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      }&#xd;
    }&#xd;
  }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts/${idContactExtractor}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49590">204</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report v1" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Index Archived Contacts Module Group v2" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">Bearer ${__property(v_access_token)}</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept</stringProp>
              <stringProp name="Header.value">application/vnd.api+json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">cache-control</stringProp>
              <stringProp name="Header.value">no-cache</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Create Contact Request" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;attributes&quot;: {&#xd;
      &quot;prefix&quot;: &quot;Mr&quot;,&#xd;
      &quot;first_name&quot;: &quot;Telly&quot;,&#xd;
      &quot;middle_name&quot;: &quot;Senior&quot;,&#xd;
      &quot;last_name&quot;: &quot;Beier&quot;,&#xd;
      &quot;preferred_name&quot;: &quot;Telly Beier&quot;,&#xd;
      &quot;legal_name&quot;: &quot;Telly Senior Beier&quot;,&#xd;
      &quot;suffix&quot;: &quot;I&quot;,&#xd;
      &quot;date_of_birth&quot;: &quot;2019-05-25&quot;,&#xd;
      &quot;timeframe&quot;: &quot;1 to 12 months&quot;,&#xd;
      &quot;contact_types&quot;: [&#xd;
        &quot;buyer&quot;,&#xd;
        &quot;seller&quot;,&#xd;
        &quot;vendor&quot;,&#xd;
        &quot;investor&quot;,&#xd;
        &quot;agent&quot;,&#xd;
        &quot;lender&quot;,&#xd;
        &quot;past clients&quot;&#xd;
      ],&#xd;
      &quot;motivations&quot;: [&#xd;
        &quot;moving-up&quot;,&#xd;
        &quot;downsizing&quot;,&#xd;
        &quot;vacation-home&quot;,&#xd;
        &quot;first-home&quot;,&#xd;
        &quot;schools&quot;,&#xd;
        &quot;relocation&quot;,&#xd;
        &quot;retirement&quot;,&#xd;
        &quot;personal&quot;,&#xd;
        &quot;financial&quot;&#xd;
      ],&#xd;
      &quot;phase&quot;: 1,&#xd;
      &quot;primary_motivation_note&quot;: &quot;Telly.Beier&apos;s primary note&quot;,&#xd;
      &quot;is_pre_approved&quot;: true,&#xd;
      &quot;is_primary&quot;: true,&#xd;
      &quot;status&quot;: 1,&#xd;
      &quot;stage&quot;: &quot;prospect&quot;,&#xd;
      &quot;lead_type&quot;: &quot;rent&quot;,&#xd;
      &quot;is_starred&quot;: false,&#xd;
      &quot;available_to_contact_date&quot;: &quot;2019-05-25&quot;,&#xd;
      &quot;pre_approved_amount&quot;: 6,&#xd;
      &quot;number_in_household&quot;: 13,&#xd;
      &quot;background_info&quot;: &quot;bg info&quot;,&#xd;
      &quot;profession_title&quot;: &quot;Teller&quot;,&#xd;
      &quot;profession_department&quot;: &quot;Logistics&quot;,&#xd;
      &quot;is_connected&quot;: true,&#xd;
	 &quot;system-metas&quot;: [&#xd;
        {&#xd;
          &quot;id&quot;: 0,&#xd;
          &quot;name&quot;: &quot;piesync&quot;,&#xd;
          &quot;variable&quot;: &quot;piesync_trash&quot;,&#xd;
          &quot;type&quot;: &quot;1&quot;,&#xd;
          &quot;value&quot;: &quot;true&quot;&#xd;
        }&#xd;
      ],&#xd;
      &quot;team_id&quot;: 1,&#xd;
      &quot;primary_address&quot;: &quot;address 1&quot;,&#xd;
      &quot;language&quot;: &quot;en&quot;,&#xd;
      &quot;initial_contact_date&quot;: &quot;2017-06-23 20:27:16&quot;&#xd;
    },&#xd;
    &quot;relationships&quot;: {&#xd;
      &quot;contact-leads&quot;: {&#xd;
        &quot;data&quot;: {&#xd;
          &quot;id&quot;: 12,&#xd;
          &quot;attributes&quot;: {&#xd;
            &quot;route_id&quot;: 3,&#xd;
            &quot;is_buyer&quot;: 1,&#xd;
            &quot;is_team&quot;: 1,&#xd;
            &quot;seller_listing_address&quot;: &quot;917 4th St. Millville, NJ 08332&quot;,&#xd;
            &quot;buyer_price_min&quot;: 71000,&#xd;
            &quot;buyer_price_max&quot;: 121000,&#xd;
            &quot;is_assigned&quot;: 1,&#xd;
            &quot;assignment&quot;: &quot;as&quot;,&#xd;
            &quot;leader_id&quot;: 13,&#xd;
            &quot;status&quot;: 10,&#xd;
            &quot;preferred_contact_by&quot;: &quot;email&quot;,&#xd;
            &quot;about&quot;: &quot;about&quot;,&#xd;
            &quot;description&quot;: &quot;desc&quot;&#xd;
          }&#xd;
        }&#xd;
      },&#xd;
      &quot;addresses&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;address_line_1&quot;: &quot;wow&quot;,&#xd;
              &quot;address_line_2&quot;: &quot;wow&quot;,&#xd;
              &quot;address_line_3&quot;: &quot;wow&quot;,&#xd;
              &quot;address_line_4&quot;: &quot;wow&quot;,&#xd;
              &quot;city&quot;: &quot;wow&quot;,&#xd;
              &quot;city_locality&quot;: &quot;cupiditate 4&quot;,&#xd;
              &quot;state_region&quot;: &quot;wow&quot;,&#xd;
              &quot;country&quot;: &quot;Indonesia&quot;,&#xd;
              &quot;postal_code&quot;: &quot;16810&quot;,&#xd;
              &quot;lat&quot;: -57.359989,&#xd;
              &quot;lng&quot;: 54.022906,&#xd;
              &quot;is_current&quot;: false,&#xd;
              &quot;ownership_status&quot;: 2,&#xd;
              &quot;description&quot;: &quot;Best place in the world 14&quot;,&#xd;
              &quot;neighborhood&quot;: &quot;some neighborhood&quot;,&#xd;
              &quot;is_primary&quot;: true,&#xd;
              &quot;label&quot;: &quot;home&quot;,&#xd;
              &quot;is_mailing_address&quot;: true&#xd;
            }&#xd;
          },&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;address_line_1&quot;: &quot;232&quot;,&#xd;
              &quot;address_line_2&quot;: &quot;wow&quot;,&#xd;
              &quot;address_line_3&quot;: &quot;wow&quot;,&#xd;
              &quot;address_line_4&quot;: &quot;wow&quot;,&#xd;
              &quot;city&quot;: &quot;wow&quot;,&#xd;
              &quot;city_locality&quot;: &quot;cupiditate 4&quot;,&#xd;
              &quot;state_region&quot;: &quot;wow&quot;,&#xd;
              &quot;country&quot;: &quot;Indonesia&quot;,&#xd;
              &quot;postal_code&quot;: &quot;16810&quot;,&#xd;
              &quot;lat&quot;: -57.359989,&#xd;
              &quot;lng&quot;: 54.022906,&#xd;
              &quot;is_current&quot;: false,&#xd;
              &quot;ownership_status&quot;: 2,&#xd;
              &quot;description&quot;: &quot;Best place in the world 14&quot;,&#xd;
              &quot;neighborhood&quot;: &quot;some neighborhood&quot;,&#xd;
              &quot;is_primary&quot;: true,&#xd;
              &quot;label&quot;: &quot;home&quot;,&#xd;
              &quot;is_mailing_address&quot;: true&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;phones&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;number&quot;: &quot;202-555-7341&quot;,&#xd;
              &quot;country_code&quot;: &quot;US&quot;,&#xd;
              &quot;formatted_number&quot;: &quot;202-555-7341&quot;,&#xd;
              &quot;is_primary&quot;: true,&#xd;
              &quot;is_current&quot;: true,&#xd;
              &quot;label&quot;: &quot;home&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;notes&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;note&quot;: &quot;update new&quot;,&#xd;
              &quot;title&quot;: &quot;updated title 2&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;sources&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;label&quot;: &quot;KW Website&quot;,&#xd;
              &quot;is_archived&quot;: 0,&#xd;
              &quot;vendor&quot;: &quot;ow&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;social-accounts&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;social_network_id&quot;: 1,&#xd;
              &quot;identifier&quot;: &quot;example1&quot;,&#xd;
              &quot;url&quot;: &quot;https://www.facebook.com/example2&quot;&#xd;
            }&#xd;
          },&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;social_network_id&quot;: 1,&#xd;
              &quot;identifier&quot;: &quot;example4&quot;,&#xd;
              &quot;url&quot;: &quot;https://www.facebook.com/example1&quot;&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;object-custom-fields&quot;: {&#xd;
        &quot;data&quot;: [&#xd;
          {&#xd;
            &quot;attributes&quot;: {&#xd;
              &quot;custom_field&quot;: &quot;4 notes&quot;,&#xd;
              &quot;custom_field_value&quot;: &quot;another&quot;,&#xd;
              &quot;custom_field_tag&quot;: {&#xd;
                &quot;tag&quot;: &quot;blender&quot;,&#xd;
                &quot;color&quot;: &quot;blue&quot;&#xd;
              }&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      }&#xd;
    }&#xd;
  }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49587">201</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">idContactExtractor5</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">data.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Search Filter Contact Request" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts/search?filter[id][is]=${idContactExtractor5}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
          <stringProp name="ConstantTimer.delay">300</stringProp>
        </ConstantTimer>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Delete Contact Request 1" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts/${idContactExtractor5}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49590">204</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
          <stringProp name="ConstantTimer.delay">500</stringProp>
        </ConstantTimer>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Search Filter Archived Contact Request" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts/search?filter[id][is]=${idContactExtractor5}&amp;archived=1</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Login TeamLeader Thread" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
 &quot;username&quot;: &quot;test.teamleader&quot;,&#xd;
 &quot;password&quot;: &quot;6EKGw64w&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/login</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON/YAML Path Extractor" enabled="true">
            <stringProp name="VAR">v_access_token1</stringProp>
            <stringProp name="JSONPATH">$.access_token</stringProp>
            <stringProp name="DEFAULT">ERROR</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">${__setProperty(v_access_token1, ${v_access_token1})};</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
        </hashTree>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread TeamLeader Module Group v2" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">Bearer ${__property(v_access_token1)}</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept</stringProp>
              <stringProp name="Header.value">application/vnd.api+json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">cache-control</stringProp>
              <stringProp name="Header.value">no-cache</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">X-Api-Override-Phone</stringProp>
              <stringProp name="Header.value">1</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">x-Api-Override-Email</stringProp>
              <stringProp name="Header.value">1</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">X-Partial-Record-Validation</stringProp>
              <stringProp name="Header.value">1</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Support TeamLeader Contact Recruits Request" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts?hasRecruits=1&amp;include=recruits</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Support TeamLeader Contact Recruits Request 1" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts?sort=last_name&amp;include=tags,company,object-custom-fields,phones,addresses,recruits&amp;page[offset]=0&amp;page[limit]=30&amp;filter[phase][!is]=null&amp;hasRecruits=1&amp;filter[phase][%21is]=null</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Support TeamLeader Contact Recruits Request 2" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts?sort=last_name&amp;include=tags,company,object-custom-fields,phones,addresses,contact-recruit&amp;page[offset]=0&amp;page[limit]=30&amp;filter[last_name][like]=Drajat&amp;filter[phase][!is]=null&amp;hasRecruits=1&amp;filter[phase][%21is]=null</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Support TeamLeader Recruits Request 2" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts?sort=last_name&amp;include=tags,company,object-custom-fields,phones,addresses,contact-recruit&amp;page[offset]=0&amp;page[limit]=30&amp;filter[last_name][like]=Drajat&amp;filter[phase][!is]=null&amp;hasRecruits=1&amp;filter[phase][%21is]=null</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree v2" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report v2" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Login Other User Thread" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
 &quot;username&quot;: &quot;DAgent5001&quot;,&#xd;
 &quot;password&quot;: &quot;Tester01&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/login</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON/YAML Path Extractor" enabled="true">
            <stringProp name="VAR">v_access_token2</stringProp>
            <stringProp name="JSONPATH">$.access_token</stringProp>
            <stringProp name="DEFAULT">ERROR</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">${__setProperty(v_access_token2, ${v_access_token2})};</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
        </hashTree>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Delete All contacts Module Group v2" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">Bearer ${__property(v_access_token2)}</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept</stringProp>
              <stringProp name="Header.value">application/vnd.api+json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">cache-control</stringProp>
              <stringProp name="Header.value">no-cache</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete All the contacts Request" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts/all</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49590">204</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree v2" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report v2" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Login Service Token Thread" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">apiKey</stringProp>
              <stringProp name="Header.value">${QA-API-KEY}</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept</stringProp>
              <stringProp name="Header.value">application/vnd.api+json</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
 &quot;expired_at&quot;: &quot;2111-01-29T11:44:46.443Z&quot;,&#xd;
 &quot;audience&quot;: &quot;https://qa-kong.command-api.kw.com&quot;,&#xd;
 &quot;user_id&quot;: &quot;523848&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">consumers/contacts/service-token</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON/YAML Path Extractor" enabled="true">
            <stringProp name="VAR">v_access_token1</stringProp>
            <stringProp name="JSONPATH">$.data.jwt</stringProp>
            <stringProp name="DEFAULT">ERROR</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
            <stringProp name="INPUT_FORMAT">JSON</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">${__setProperty(v_access_token1, ${v_access_token1})};</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
        </hashTree>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Contact service token Module Group v2" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">Bearer ${__property(v_access_token1)}</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept</stringProp>
              <stringProp name="Header.value">application/vnd.api+json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">cache-control</stringProp>
              <stringProp name="Header.value">no-cache</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">X-Api-Override-Phone</stringProp>
              <stringProp name="Header.value">1</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">x-Api-Override-Email</stringProp>
              <stringProp name="Header.value">1</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">X-Partial-Record-Validation</stringProp>
              <stringProp name="Header.value">1</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Create Contact Request" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;data&quot;: {&#xd;
        &quot;attributes&quot;: {&#xd;
            &quot;first_name&quot;: &quot;Minimal&quot;,&#xd;
            &quot;last_name&quot;: &quot;Contact&quot;,&#xd;
            &quot;preferred_name&quot;: &quot;Minimal Contact&quot;&#xd;
        },&#xd;
        &quot;relationships&quot;: {&#xd;
            &quot;contact-leads&quot;: {&#xd;
                &quot;data&quot;: {&#xd;
                    &quot;attributes&quot;: {&#xd;
                        &quot;campaign_id&quot;: 12&#xd;
                    }&#xd;
                }&#xd;
            }&#xd;
        }&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49587">201</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON IdContact Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">idContactExtractor</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">data.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Delete Contact Request" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${environment}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v2/contacts/${idContactExtractor}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49590">204</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree v2" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report v2" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
